!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
APP_DEBUG	public/index.php	/^define('APP_DEBUG', true);$/;"	d
APP_DEBUG	thinkphp/start.php	/^    define('APP_DEBUG', $debug);$/;"	d
APP_PATH	public/index.php	/^define('APP_PATH', __DIR__ . '\/..\/application\/');$/;"	d
Apc	thinkphp/library/think/cache/driver/Apc.php	/^class Apc$/;"	c
Api	application/index/controller/Api.php	/^class Api$/;"	c
App	thinkphp/library/think/App.php	/^class App$/;"	c
App	thinkphp/mode/console/App.php	/^class App$/;"	c
Argument	thinkphp/library/think/console/input/Argument.php	/^class Argument$/;"	c
Article	application/admin/controller/Article.php	/^class Article extends \\think\\Controller$/;"	c
Article	application/admin/model/Article.php	/^class Article extends \\think\\Model$/;"	c
Build	thinkphp/library/think/Build.php	/^class Build$/;"	c
Build	thinkphp/library/think/console/command/Build.php	/^class Build extends Command$/;"	c
Builder	thinkphp/library/think/db/Builder.php	/^abstract class Builder$/;"	c
Builder	thinkphp/library/think/process/Builder.php	/^class Builder$/;"	c
Cache	thinkphp/library/think/Cache.php	/^class Cache$/;"	c
Choice	thinkphp/library/think/console/helper/question/Choice.php	/^class Choice extends Question$/;"	c
Command	thinkphp/library/think/console/command/Command.php	/^class Command$/;"	c
Config	thinkphp/library/think/Config.php	/^class Config$/;"	c
Confirmation	thinkphp/library/think/console/helper/question/Confirmation.php	/^class Confirmation extends Question$/;"	c
Connection	thinkphp/library/think/db/Connection.php	/^abstract class Connection$/;"	c
Console	thinkphp/library/think/Console.php	/^class Console$/;"	c
Console	thinkphp/library/think/console/helper/descriptor/Console.php	/^class Console$/;"	c
Controller	thinkphp/library/think/Controller.php	/^class Controller$/;"	c
Controller	thinkphp/library/think/console/command/make/Controller.php	/^class Controller extends Command$/;"	c
Cookie	thinkphp/library/think/Cookie.php	/^class Cookie$/;"	c
Cx	thinkphp/library/think/template/taglib/Cx.php	/^class Cx extends Taglib$/;"	c
Db	thinkphp/library/think/Db.php	/^class Db$/;"	c
Db	thinkphp/library/think/cache/driver/Db.php	/^class Db$/;"	c
DbBindParamException	thinkphp/library/think/exception/DbBindParamException.php	/^class DbBindParamException extends DbException $/;"	c
DbException	thinkphp/library/think/exception/DbException.php	/^class DbException extends Exception $/;"	c
Debug	thinkphp/library/think/Debug.php	/^class Debug$/;"	c
Debug	thinkphp/library/think/console/helper/Debug.php	/^class Debug extends Helper$/;"	c
Definition	thinkphp/library/think/console/input/Definition.php	/^class Definition$/;"	c
Descriptor	thinkphp/library/think/console/helper/Descriptor.php	/^class Descriptor extends Helper$/;"	c
Descriptor	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^class Descriptor$/;"	c
Email	thinkphp/library/think/log/alarm/Email.php	/^class Email$/;"	c
Error	thinkphp/library/think/Error.php	/^class Error$/;"	c
Error	thinkphp/mode/console/Error.php	/^class Error$/;"	c
ErrorException	thinkphp/library/think/exception/ErrorException.php	/^class ErrorException extends Exception$/;"	c
Exception	thinkphp/library/think/Exception.php	/^class Exception extends \\Exception$/;"	c
Failed	thinkphp/library/think/process/exception/Faild.php	/^class Failed extends \\RuntimeException$/;"	c
File	thinkphp/library/think/cache/driver/File.php	/^class File$/;"	c
File	thinkphp/library/think/log/driver/File.php	/^class File$/;"	c
File	thinkphp/library/think/template/driver/File.php	/^class File$/;"	c
Formatter	thinkphp/library/think/console/helper/Formatter.php	/^class Formatter extends Helper$/;"	c
Formatter	thinkphp/library/think/console/output/Formatter.php	/^class Formatter$/;"	c
Help	thinkphp/library/think/console/command/Help.php	/^class Help extends Command$/;"	c
Helper	thinkphp/library/think/console/helper/Helper.php	/^abstract class Helper$/;"	c
Hook	thinkphp/library/think/Hook.php	/^class Hook$/;"	c
Hprose	thinkphp/library/think/controller/Hprose.php	/^abstract class Hprose$/;"	c
IS_AJAX	thinkphp/base.php	/^define('IS_AJAX', (isset($_SERVER['HTTP_X_REQUESTED_WITH']) && strtolower($_SERVER['HTTP_X_REQUESTED_WITH']) == 'xmlhttprequest') ? true : false);$/;"	d
IS_CGI	thinkphp/base.php	/^define('IS_CGI', strpos(PHP_SAPI, 'cgi') === 0 ? 1 : 0);$/;"	d
IS_CLI	thinkphp/base.php	/^define('IS_CLI', PHP_SAPI == 'cli' ? 1 : 0);$/;"	d
IS_DELETE	thinkphp/base.php	/^define('IS_DELETE', REQUEST_METHOD == 'DELETE' ? true : false);$/;"	d
IS_GET	thinkphp/base.php	/^define('IS_GET', REQUEST_METHOD == 'GET' ? true : false);$/;"	d
IS_MAC	thinkphp/base.php	/^define('IS_MAC', strstr(PHP_OS, 'Darwin') ? 1 : 0);$/;"	d
IS_POST	thinkphp/base.php	/^define('IS_POST', REQUEST_METHOD == 'POST' ? true : false);$/;"	d
IS_PUT	thinkphp/base.php	/^define('IS_PUT', REQUEST_METHOD == 'PUT' ? true : false);$/;"	d
IS_WIN	thinkphp/base.php	/^define('IS_WIN', strstr(PHP_OS, 'WIN') ? 1 : 0);$/;"	d
Index	application/admin/controller/Index.php	/^class Index$/;"	c
Index	application/index/controller/Index.php	/^class Index$/;"	c
Ini	thinkphp/library/think/config/driver/Ini.php	/^class Ini$/;"	c
Input	thinkphp/library/think/Input.php	/^class Input$/;"	c
Input	thinkphp/library/think/console/Input.php	/^class Input$/;"	c
Jsonrpc	thinkphp/library/think/controller/Jsonrpc.php	/^abstract class Jsonrpc$/;"	c
Lang	thinkphp/library/think/Lang.php	/^class Lang$/;"	c
Lists	thinkphp/library/think/console/command/Lists.php	/^class Lists extends Command$/;"	c
Lite	thinkphp/library/think/cache/driver/Lite.php	/^class Lite$/;"	c
Loader	thinkphp/library/think/Loader.php	/^class Loader$/;"	c
Log	thinkphp/library/think/Log.php	/^class Log$/;"	c
MODULE_ALIAS	thinkphp/library/think/App.php	/^                    define('MODULE_ALIAS', $module);$/;"	d
MODULE_NAME	thinkphp/library/think/App.php	/^            define('MODULE_NAME', '');$/;"	d
MODULE_NAME	thinkphp/library/think/App.php	/^            define('MODULE_NAME', strip_tags($module));$/;"	d
MODULE_PATH	thinkphp/library/think/App.php	/^                define('MODULE_PATH', APP_PATH . MODULE_NAME . DS);$/;"	d
MODULE_PATH	thinkphp/library/think/App.php	/^            define('MODULE_PATH', APP_PATH);$/;"	d
Memcache	thinkphp/library/think/cache/driver/Memcache.php	/^class Memcache$/;"	c
Memcache	thinkphp/library/think/session/driver/Memcache.php	/^class Memcache extends SessionHandler$/;"	c
Memcached	thinkphp/library/think/cache/driver/Memcached.php	/^class Memcached$/;"	c
Memcached	thinkphp/library/think/session/driver/Memcached.php	/^class Memcached extends SessionHandler$/;"	c
Merge	thinkphp/library/think/model/Merge.php	/^class Merge extends Model$/;"	c
Model	thinkphp/library/think/Model.php	/^abstract class Model implements \\JsonSerializable, \\ArrayAccess$/;"	c
Model	thinkphp/library/think/console/command/make/Model.php	/^class Model extends Command$/;"	c
Mysql	thinkphp/library/think/db/builder/Mysql.php	/^class Mysql extends Builder$/;"	c
Mysql	thinkphp/library/think/db/connector/Mysql.php	/^class Mysql extends Connection$/;"	c
NOW_TIME	thinkphp/base.php	/^define('NOW_TIME', $_SERVER['REQUEST_TIME']);$/;"	d
News	application/index/controller/News.php	/^class News$/;"	c
NotFoundException	thinkphp/library/think/exception/NotFoundException.php	/^class NotFoundException extends Exception $/;"	c
Nothing	thinkphp/library/think/console/output/Nothing.php	/^class Nothing extends Output$/;"	c
Option	thinkphp/library/think/console/input/Option.php	/^class Option$/;"	c
Oracle	thinkphp/library/think/db/builder/Oracle.php	/^class Oracle extends Builder$/;"	c
Oracle	thinkphp/library/think/db/connector/Oracle.php	/^class Oracle extends Connection$/;"	c
Output	thinkphp/library/think/console/Output.php	/^class Output extends Stream$/;"	c
P3P	thinkphp/library/think/controller/Hprose.php	/^    protected $P3P             = false;$/;"	v
PDOException	thinkphp/library/think/exception/PDOException.php	/^class PDOException extends DbException $/;"	c
PDOStatement	thinkphp/library/think/db/Connection.php	/^            $this->PDOStatement = $this->linkID->prepare($sql);$/;"	v
PDOStatement	thinkphp/library/think/db/Connection.php	/^        $this->PDOStatement = null;$/;"	v
PDOStatement	thinkphp/library/think/db/Connection.php	/^    protected $PDOStatement;$/;"	v
PDOStatement	thinkphp/library/think/db/connector/Oracle.php	/^            $this->PDOStatement = $this->linkID->prepare($sql);$/;"	v
Pgsql	thinkphp/library/think/db/builder/Pgsql.php	/^class Pgsql extends Builder$/;"	c
Pgsql	thinkphp/library/think/db/connector/Pgsql.php	/^class Pgsql extends Connection$/;"	c
Php	thinkphp/library/think/view/driver/Php.php	/^class Php$/;"	c
Pipes	thinkphp/library/think/process/pipes/Pipes.php	/^abstract class Pipes$/;"	c
Pivot	thinkphp/library/think/model/Pivot.php	/^class Pivot extends Model$/;"	c
Process	thinkphp/library/think/Process.php	/^class Process$/;"	c
Process	thinkphp/library/think/console/helper/Process.php	/^class Process extends Helper$/;"	c
Query	thinkphp/library/think/db/Query.php	/^class Query$/;"	c
Question	thinkphp/library/think/console/helper/Question.php	/^class Question extends Helper$/;"	c
Question	thinkphp/library/think/console/helper/question/Question.php	/^class Question$/;"	c
REQUEST_METHOD	thinkphp/base.php	/^define('REQUEST_METHOD', IS_CLI ? 'GET' : $_SERVER['REQUEST_METHOD']);$/;"	d
Redis	thinkphp/library/think/cache/driver/Redis.php	/^class Redis$/;"	c
Redis	thinkphp/library/think/session/driver/Redis.php	/^class Redis extends SessionHandler$/;"	c
Relation	thinkphp/library/think/model/Relation.php	/^class Relation$/;"	c
Response	thinkphp/library/think/Response.php	/^class Response$/;"	c
Rest	thinkphp/library/think/controller/Rest.php	/^abstract class Rest$/;"	c
Route	thinkphp/library/think/Route.php	/^class Route$/;"	c
Rpc	thinkphp/library/think/controller/Rpc.php	/^abstract class Rpc$/;"	c
SECACHE_SIZE	thinkphp/library/think/cache/driver/Secache.php	/^    define('SECACHE_SIZE', '15M');$/;"	d
START_MEM	thinkphp/base.php	/^define('START_MEM', memory_get_usage());$/;"	d
START_TIME	thinkphp/base.php	/^define('START_TIME', microtime(true));$/;"	d
Sae	thinkphp/library/think/cache/driver/Sae.php	/^class Sae$/;"	c
Sae	thinkphp/library/think/log/driver/Sae.php	/^class Sae$/;"	c
Sae	thinkphp/library/think/template/driver/Sae.php	/^class Sae$/;"	c
Secache	thinkphp/library/think/cache/driver/Secache.php	/^class Secache$/;"	c
SecacheClient	thinkphp/library/think/cache/driver/Secache.php	/^class SecacheClient$/;"	c
Session	thinkphp/library/think/Session.php	/^class Session$/;"	c
Set	thinkphp/library/think/console/helper/Set.php	/^class Set implements \\IteratorAggregate$/;"	c
Socket	thinkphp/library/think/log/driver/Socket.php	/^class Socket$/;"	c
Sqlite	thinkphp/library/think/cache/driver/Sqlite.php	/^class Sqlite$/;"	c
Sqlite	thinkphp/library/think/db/builder/Sqlite.php	/^class Sqlite extends Builder$/;"	c
Sqlite	thinkphp/library/think/db/connector/Sqlite.php	/^class Sqlite extends Connection$/;"	c
Sqlsrv	thinkphp/library/think/db/builder/Sqlsrv.php	/^class Sqlsrv extends Builder$/;"	c
Sqlsrv	thinkphp/library/think/db/connector/Sqlsrv.php	/^class Sqlsrv extends Connection$/;"	c
Stack	thinkphp/library/think/console/output/formatter/Stack.php	/^class Stack$/;"	c
Stream	thinkphp/library/think/console/output/Stream.php	/^class Stream$/;"	c
Style	thinkphp/library/think/console/output/formatter/Style.php	/^class Style$/;"	c
THINK_VERSION	thinkphp/base.php	/^define('THINK_VERSION', '5.0.0 RC3');$/;"	d
TagLib	thinkphp/library/think/template/TagLib.php	/^class TagLib$/;"	c
Template	thinkphp/library/think/Template.php	/^class Template$/;"	c
Test	application/index/controller/Test.php	/^class Test$/;"	c
Test	thinkphp/library/think/cache/driver/Test.php	/^class Test$/;"	c
Test	thinkphp/library/think/log/driver/Test.php	/^class Test$/;"	c
Think	thinkphp/library/think/view/driver/Think.php	/^class Think$/;"	c
Timeout	thinkphp/library/think/process/exception/Timeout.php	/^class Timeout extends \\RuntimeException$/;"	c
Trace	thinkphp/library/think/log/driver/Trace.php	/^class Trace$/;"	c
Unix	thinkphp/library/think/process/pipes/Unix.php	/^class Unix extends Pipes$/;"	c
UploadFile	thinkphp/library/think/UploadFile.php	/^class UploadFile$/;"	c
Url	thinkphp/library/think/Url.php	/^class Url$/;"	c
Utils	thinkphp/library/think/process/Utils.php	/^class Utils$/;"	c
VIEW_PATH	thinkphp/library/think/App.php	/^                define('VIEW_PATH', MODULE_PATH . VIEW_LAYER . DS);$/;"	d
VIEW_PATH	thinkphp/library/think/App.php	/^            define('VIEW_PATH', MODULE_PATH . VIEW_LAYER . DS);$/;"	d
Validate	thinkphp/library/think/Validate.php	/^class Validate$/;"	c
View	thinkphp/library/think/View.php	/^class View$/;"	c
Wincache	thinkphp/library/think/cache/driver/Wincache.php	/^class Wincache$/;"	c
Windows	thinkphp/library/think/process/pipes/Windows.php	/^class Windows extends Pipes$/;"	c
Xcache	thinkphp/library/think/cache/driver/Xcache.php	/^class Xcache$/;"	c
Xml	thinkphp/library/think/config/driver/Xml.php	/^class Xml$/;"	c
Yar	thinkphp/library/think/controller/Yar.php	/^abstract class Yar$/;"	c
_DELETE	thinkphp/library/think/Input.php	/^            $_DELETE = array_merge($_DELETE, $_GET);$/;"	v
_DELETE	thinkphp/library/think/Input.php	/^        static $_DELETE = null;$/;"	v
_GET	thinkphp/library/think/Route.php	/^                    $_GET = array_merge($_GET, $params);$/;"	v
_GET	thinkphp/library/think/Route.php	/^            $_GET = array_merge($result['var'], $_GET);$/;"	v
_GET	thinkphp/library/think/Route.php	/^        $_GET = array_merge($var, $_GET);$/;"	v
_PUT	thinkphp/library/think/App.php	/^                    static $_PUT = null;$/;"	v
_PUT	thinkphp/library/think/Input.php	/^        static $_PUT = null;$/;"	v
_REQUEST	thinkphp/library/think/App.php	/^        $_REQUEST = array_merge($_POST, $_GET, $_COOKIE);$/;"	v
_SESSION	thinkphp/library/think/Session.php	/^            $_SESSION = [];$/;"	v
_SESSION	thinkphp/library/think/Session.php	/^        $_SESSION = [];$/;"	v
__EXT__	thinkphp/library/think/App.php	/^            define('__EXT__', '');$/;"	d
__EXT__	thinkphp/library/think/App.php	/^            define('__EXT__', strtolower(pathinfo($_SERVER['PATH_INFO'], PATHINFO_EXTENSION)));$/;"	d
__INFO__	thinkphp/library/think/App.php	/^            define('__INFO__', $_SERVER['PATH_INFO']);$/;"	d
__INFO__	thinkphp/library/think/App.php	/^            define('__INFO__', '');$/;"	d
__call	thinkphp/library/think/Model.php	/^    public function __call($method, $args)$/;"	f
__call	thinkphp/library/think/UploadFile.php	/^    public function __call($method, $args)$/;"	f
__call	thinkphp/library/think/controller/Hprose.php	/^    public function __call($method, $args)$/;"	f
__call	thinkphp/library/think/controller/Jsonrpc.php	/^    public function __call($method, $args)$/;"	f
__call	thinkphp/library/think/controller/Rpc.php	/^    public function __call($method, $args)$/;"	f
__call	thinkphp/library/think/controller/Yar.php	/^    public function __call($method, $args)$/;"	f
__call	thinkphp/library/think/db/Connection.php	/^    public function __call($method, $args)$/;"	f
__call	thinkphp/library/think/db/Query.php	/^    public function __call($method, $args)$/;"	f
__call	thinkphp/library/think/model/Relation.php	/^    public function __call($method, $args)$/;"	f
__call	thinkphp/library/think/view/driver/Php.php	/^    public function __call($method, $params)$/;"	f
__call	thinkphp/library/think/view/driver/Think.php	/^    public function __call($method, $params)$/;"	f
__callStatic	thinkphp/library/think/Cache.php	/^    public static function __callStatic($method, $params)$/;"	f
__callStatic	thinkphp/library/think/Db.php	/^    public static function __callStatic($method, $params)$/;"	f
__callStatic	thinkphp/library/think/Log.php	/^    public static function __callStatic($method, $args)$/;"	f
__callStatic	thinkphp/library/think/Model.php	/^    public static function __callStatic($method, $params)$/;"	f
__callStatic	thinkphp/library/traits/think/Instance.php	/^    public static function __callStatic($method, $params)$/;"	f
__clone	thinkphp/library/think/Process.php	/^    public function __clone()$/;"	f
__construct	thinkphp/library/think/Console.php	/^    public function __construct($name = 'UNKNOWN', $version = 'UNKNOWN')$/;"	f
__construct	thinkphp/library/think/Controller.php	/^    public function __construct()$/;"	f
__construct	thinkphp/library/think/Model.php	/^    public function __construct($data = [])$/;"	f
__construct	thinkphp/library/think/Process.php	/^    public function __construct($commandline, $cwd = null, array $env = null, $input = null, $timeout = 60, array $options = [])$/;"	f
__construct	thinkphp/library/think/Template.php	/^    public function __construct(array $config = [])$/;"	f
__construct	thinkphp/library/think/UploadFile.php	/^    public function __construct($file)$/;"	f
__construct	thinkphp/library/think/Validate.php	/^    public function __construct(array $rules = [], $message = [])$/;"	f
__construct	thinkphp/library/think/View.php	/^    public function __construct($engine = [], $replace = [])$/;"	f
__construct	thinkphp/library/think/cache/driver/Apc.php	/^    public function __construct($options = [])$/;"	f
__construct	thinkphp/library/think/cache/driver/Db.php	/^    public function __construct($options = [])$/;"	f
__construct	thinkphp/library/think/cache/driver/File.php	/^    public function __construct($options = [])$/;"	f
__construct	thinkphp/library/think/cache/driver/Lite.php	/^    public function __construct($options = [])$/;"	f
__construct	thinkphp/library/think/cache/driver/Memcache.php	/^    public function __construct($options = [])$/;"	f
__construct	thinkphp/library/think/cache/driver/Memcached.php	/^    public function __construct($options = [])$/;"	f
__construct	thinkphp/library/think/cache/driver/Redis.php	/^    public function __construct($options = [])$/;"	f
__construct	thinkphp/library/think/cache/driver/Sae.php	/^    public function __construct($options = [])$/;"	f
__construct	thinkphp/library/think/cache/driver/Secache.php	/^    public function __construct($options = [])$/;"	f
__construct	thinkphp/library/think/cache/driver/Sqlite.php	/^    public function __construct($options = [])$/;"	f
__construct	thinkphp/library/think/cache/driver/Wincache.php	/^    public function __construct($options = [])$/;"	f
__construct	thinkphp/library/think/cache/driver/Xcache.php	/^    public function __construct($options = [])$/;"	f
__construct	thinkphp/library/think/console/Input.php	/^    public function __construct($argv = null)$/;"	f
__construct	thinkphp/library/think/console/Output.php	/^    public function __construct()$/;"	f
__construct	thinkphp/library/think/console/command/Command.php	/^    public function __construct($name = null)$/;"	f
__construct	thinkphp/library/think/console/command/make/Controller.php	/^    public function __construct()$/;"	f
__construct	thinkphp/library/think/console/command/make/Model.php	/^    public function __construct()$/;"	f
__construct	thinkphp/library/think/console/helper/Descriptor.php	/^    public function __construct()$/;"	f
__construct	thinkphp/library/think/console/helper/Set.php	/^    public function __construct(array $helpers = [])$/;"	f
__construct	thinkphp/library/think/console/helper/descriptor/Console.php	/^    public function __construct(ThinkConsole $console, $namespace = null)$/;"	f
__construct	thinkphp/library/think/console/helper/question/Choice.php	/^    public function __construct($question, array $choices, $default = null)$/;"	f
__construct	thinkphp/library/think/console/helper/question/Confirmation.php	/^    public function __construct($question, $default = true, $trueAnswerRegex = '\/^y\/i')$/;"	f
__construct	thinkphp/library/think/console/helper/question/Question.php	/^    public function __construct($question, $default = null)$/;"	f
__construct	thinkphp/library/think/console/input/Argument.php	/^    public function __construct($name, $mode = null, $description = '', $default = null)$/;"	f
__construct	thinkphp/library/think/console/input/Definition.php	/^    public function __construct(array $definition = [])$/;"	f
__construct	thinkphp/library/think/console/input/Option.php	/^    public function __construct($name, $shortcut = null, $mode = null, $description = '', $default = null)$/;"	f
__construct	thinkphp/library/think/console/output/Formatter.php	/^    public function __construct()$/;"	f
__construct	thinkphp/library/think/console/output/Nothing.php	/^    public function __construct()$/;"	f
__construct	thinkphp/library/think/console/output/Stream.php	/^    public function __construct($stream, Formatter $formatter = null)$/;"	f
__construct	thinkphp/library/think/console/output/formatter/Stack.php	/^    public function __construct(Style $emptyStyle = null)$/;"	f
__construct	thinkphp/library/think/console/output/formatter/Style.php	/^    public function __construct($foreground = null, $background = null, array $options = [])$/;"	f
__construct	thinkphp/library/think/controller/Hprose.php	/^    public function __construct()$/;"	f
__construct	thinkphp/library/think/controller/Jsonrpc.php	/^    public function __construct()$/;"	f
__construct	thinkphp/library/think/controller/Rest.php	/^    public function __construct()$/;"	f
__construct	thinkphp/library/think/controller/Rpc.php	/^    public function __construct()$/;"	f
__construct	thinkphp/library/think/controller/Yar.php	/^    public function __construct()$/;"	f
__construct	thinkphp/library/think/db/Builder.php	/^    public function __construct($connection)$/;"	f
__construct	thinkphp/library/think/db/Connection.php	/^    public function __construct(array $config = [])$/;"	f
__construct	thinkphp/library/think/db/Query.php	/^    public function __construct($connection = '')$/;"	f
__construct	thinkphp/library/think/exception/DbBindParamException.php	/^    public function __construct($message, $config, $sql, $bind, $code = 10502)$/;"	f
__construct	thinkphp/library/think/exception/DbException.php	/^    public function __construct($message, Array $config, $sql, $code = 10500)$/;"	f
__construct	thinkphp/library/think/exception/ErrorException.php	/^    public function __construct($severity, $message, $file, $line, array $context = [])$/;"	f
__construct	thinkphp/library/think/exception/PDOException.php	/^    public function __construct(\\PDOException $exception, Array $config, $sql, $code = 10501)$/;"	f
__construct	thinkphp/library/think/log/alarm/Email.php	/^    public function __construct($config = [])$/;"	f
__construct	thinkphp/library/think/log/driver/File.php	/^    public function __construct($config = [])$/;"	f
__construct	thinkphp/library/think/log/driver/Sae.php	/^    public function __construct(array $config = [])$/;"	f
__construct	thinkphp/library/think/log/driver/Socket.php	/^    public function __construct(array $config = [])$/;"	f
__construct	thinkphp/library/think/log/driver/Trace.php	/^    public function __construct(array $config = [])$/;"	f
__construct	thinkphp/library/think/model/Merge.php	/^    public function __construct($data = [])$/;"	f
__construct	thinkphp/library/think/model/Pivot.php	/^    public function __construct($data = [], $table = '')$/;"	f
__construct	thinkphp/library/think/model/Relation.php	/^    public function __construct($model)$/;"	f
__construct	thinkphp/library/think/process/Builder.php	/^    public function __construct(array $arguments = [])$/;"	f
__construct	thinkphp/library/think/process/exception/Faild.php	/^    public function __construct(Process $process)$/;"	f
__construct	thinkphp/library/think/process/exception/Timeout.php	/^    public function __construct(Process $process, $timeoutType)$/;"	f
__construct	thinkphp/library/think/process/pipes/Unix.php	/^    public function __construct($ttyMode, $ptyMode, $input, $disableOutput)$/;"	f
__construct	thinkphp/library/think/process/pipes/Windows.php	/^    public function __construct($disableOutput, $input)$/;"	f
__construct	thinkphp/library/think/session/driver/Memcache.php	/^    public function __construct($config = [])$/;"	f
__construct	thinkphp/library/think/session/driver/Memcached.php	/^    public function __construct($config = [])$/;"	f
__construct	thinkphp/library/think/session/driver/Redis.php	/^    public function __construct($config = [])$/;"	f
__construct	thinkphp/library/think/template/TagLib.php	/^    public function __construct($template)$/;"	f
__construct	thinkphp/library/think/template/driver/Sae.php	/^    public function __construct()$/;"	f
__construct	thinkphp/library/think/view/driver/Php.php	/^    public function __construct($config = [])$/;"	f
__construct	thinkphp/library/think/view/driver/Think.php	/^    public function __construct($config = [])$/;"	f
__destruct	thinkphp/library/think/Process.php	/^    public function __destruct()$/;"	f
__destruct	thinkphp/library/think/db/Connection.php	/^    public function __destruct()$/;"	f
__destruct	thinkphp/library/think/process/pipes/Unix.php	/^    public function __destruct()$/;"	f
__destruct	thinkphp/library/think/process/pipes/Windows.php	/^    public function __destruct()$/;"	f
__get	thinkphp/library/think/Model.php	/^    public function __get($name)$/;"	f
__get	thinkphp/library/think/View.php	/^    public function __get($name)$/;"	f
__isset	thinkphp/library/think/Model.php	/^    public function __isset($name)$/;"	f
__isset	thinkphp/library/think/View.php	/^    public function __isset($name)$/;"	f
__set	thinkphp/library/think/Model.php	/^    public function __set($name, $value)$/;"	f
__set	thinkphp/library/think/Template.php	/^    public function __set($name, $value)$/;"	f
__set	thinkphp/library/think/View.php	/^    public function __set($name, $value)$/;"	f
__toString	thinkphp/library/think/Model.php	/^    public function __toString()$/;"	f
__toString	thinkphp/library/think/console/Input.php	/^    public function __toString()$/;"	f
__unset	thinkphp/library/think/Model.php	/^    public function __unset($name)$/;"	f
__wakeup	thinkphp/library/think/Model.php	/^    public function __wakeup()$/;"	f
_all_schemas	thinkphp/library/think/cache/driver/Secache.php	/^    public function _all_schemas()$/;"	f
_alloc_idx	thinkphp/library/think/cache/driver/Secache.php	/^    public function _alloc_idx($data)$/;"	f
_allowForceClientIds	thinkphp/library/think/log/driver/Socket.php	/^            $this->_allowForceClientIds = $this->config['force_client_ids'];$/;"	v
_allowForceClientIds	thinkphp/library/think/log/driver/Socket.php	/^            $this->_allowForceClientIds = array_intersect($allow_client_ids, $this->config['force_client_ids']);$/;"	v
_allowForceClientIds	thinkphp/library/think/log/driver/Socket.php	/^    protected $_allowForceClientIds = []; \/\/配置强制推送且被授权的client_id$/;"	v
_assign	thinkphp/library/think/template/taglib/Cx.php	/^    public function _assign($tag, $content)$/;"	f
_block_size_list	thinkphp/library/think/cache/driver/Secache.php	/^        $this->_block_size_list = array_keys($this->_bsize_list);$/;"	v
_bsize_list	thinkphp/library/think/cache/driver/Secache.php	/^        $this->_bsize_list = array($/;"	v
_case	thinkphp/library/think/template/taglib/Cx.php	/^    public function _case($tag, $content)$/;"	f
_compare	thinkphp/library/think/template/taglib/Cx.php	/^    public function _compare($tag, $content)$/;"	f
_create_node	thinkphp/library/think/cache/driver/Secache.php	/^    public function _create_node($pos, $data)$/;"	f
_dalloc	thinkphp/library/think/cache/driver/Secache.php	/^    public function _dalloc($schema_id, $lru_freed = false)$/;"	f
_default	thinkphp/library/think/template/taglib/Cx.php	/^    public function _default($tag)$/;"	f
_define	thinkphp/library/think/template/taglib/Cx.php	/^    public function _define($tag, $content)$/;"	f
_defined	thinkphp/library/think/template/taglib/Cx.php	/^    public function _defined($tag, $content)$/;"	f
_dfollow	thinkphp/library/think/cache/driver/Secache.php	/^    public function _dfollow($pos, &$c)$/;"	f
_else	thinkphp/library/think/template/taglib/Cx.php	/^    public function _else($tag)$/;"	f
_elseif	thinkphp/library/think/template/taglib/Cx.php	/^    public function _elseif($tag, $content)$/;"	f
_empty	thinkphp/library/think/controller/Rest.php	/^    public function _empty($method, $args)$/;"	f
_empty	thinkphp/library/think/template/taglib/Cx.php	/^    public function _empty($tag, $content)$/;"	f
_file	thinkphp/library/think/Loader.php	/^        static $_file = [];$/;"	v
_file	thinkphp/library/think/cache/driver/Secache.php	/^        $this->_file       = $file . '.php';$/;"	v
_for	thinkphp/library/think/template/taglib/Cx.php	/^    public function _for($tag, $content)$/;"	f
_foreach	thinkphp/library/think/template/taglib/Cx.php	/^    public function _foreach($tag, $content)$/;"	f
_format	thinkphp/library/think/cache/driver/Secache.php	/^    public function _format($truncate = false)$/;"	f
_free_dspace	thinkphp/library/think/cache/driver/Secache.php	/^    public function _free_dspace($size, $pos)$/;"	f
_free_node	thinkphp/library/think/cache/driver/Secache.php	/^    public function _free_node($pos)$/;"	f
_function	thinkphp/library/think/template/taglib/Cx.php	/^    public function _function($tag, $content)$/;"	f
_get_dcur_pos	thinkphp/library/think/cache/driver/Secache.php	/^    public function _get_dcur_pos()$/;"	f
_get_node	thinkphp/library/think/cache/driver/Secache.php	/^    public function _get_node($offset)$/;"	f
_get_node_root	thinkphp/library/think/cache/driver/Secache.php	/^    public function _get_node_root($key)$/;"	f
_get_pos_by_key	thinkphp/library/think/cache/driver/Secache.php	/^    public function _get_pos_by_key($offset, $key, &$pos)$/;"	f
_get_schema	thinkphp/library/think/cache/driver/Secache.php	/^    public function _get_schema($id, $key)$/;"	f
_get_size_schema_id	thinkphp/library/think/cache/driver/Secache.php	/^    public function _get_size_schema_id($size)$/;"	f
_if	thinkphp/library/think/template/taglib/Cx.php	/^    public function _if($tag, $content)$/;"	f
_import	thinkphp/library/think/template/taglib/Cx.php	/^    public function _import($tag, $content, $isFile = false)$/;"	f
_info	thinkphp/library/think/db/Query.php	/^        static $_info = [];$/;"	v
_instance	thinkphp/library/think/Loader.php	/^        static $_instance = [];$/;"	v
_key	thinkphp/library/think/Template.php	/^        $_key                    = md5($varStr);$/;"	v
_lang	thinkphp/library/think/Lang.php	/^                $_lang = [];$/;"	v
_lang	thinkphp/library/think/Lang.php	/^                $_lang = include $_file;$/;"	v
_lib	thinkphp/library/think/template/TagLib.php	/^        $_lib = $lib ? $lib . ':' : '';$/;"	v
_load	thinkphp/library/think/template/taglib/Cx.php	/^    public function _load($tag, $content)$/;"	f
_lru_delete	thinkphp/library/think/cache/driver/Secache.php	/^    public function _lru_delete($info)$/;"	f
_lru_pop	thinkphp/library/think/cache/driver/Secache.php	/^    public function _lru_pop($schema_id)$/;"	f
_lru_push	thinkphp/library/think/cache/driver/Secache.php	/^    public function _lru_push($schema_id, $offset)$/;"	f
_method	thinkphp/library/think/controller/Rest.php	/^        $this->_method = $method;$/;"	v
_method	thinkphp/library/think/controller/Rest.php	/^    protected $_method = ''; \/\/ 当前请求类型$/;"	v
_model	thinkphp/library/think/Loader.php	/^        static $_model = [];$/;"	v
_node_struct	thinkphp/library/think/cache/driver/Secache.php	/^        $this->_node_struct = array($/;"	v
_notdefined	thinkphp/library/think/template/taglib/Cx.php	/^    public function _notdefined($tag, $content)$/;"	f
_notempty	thinkphp/library/think/template/taglib/Cx.php	/^    public function _notempty($tag, $content)$/;"	f
_notpresent	thinkphp/library/think/template/taglib/Cx.php	/^    public function _notpresent($tag, $content)$/;"	f
_parse_str_size	thinkphp/library/think/cache/driver/Secache.php	/^    public function _parse_str_size($str_size, $default)$/;"	f
_php	thinkphp/library/think/template/taglib/Cx.php	/^    public function _php($tag, $content)$/;"	f
_present	thinkphp/library/think/template/taglib/Cx.php	/^    public function _present($tag, $content)$/;"	f
_puts	thinkphp/library/think/cache/driver/Secache.php	/^    public function _puts($offset, $data)$/;"	f
_range	thinkphp/library/think/template/taglib/Cx.php	/^    public function _range($tag, $content)$/;"	f
_rs	thinkphp/library/think/cache/driver/Secache.php	/^            $this->_rs = fopen($this->_file, 'rb+') || $this->triggerError('Can\\'t open the cachefile: ' . realpath($this->_file), E_USER_ERROR);$/;"	v
_rs	thinkphp/library/think/cache/driver/Secache.php	/^        $this->_rs = fopen($this->_file, 'wb+') || $this->triggerError('Can\\'t open the cachefile: ' . realpath($this->_file), E_USER_ERROR);$/;"	v
_seek	thinkphp/library/think/cache/driver/Secache.php	/^    public function _seek($offset)$/;"	f
_set_dcur_pos	thinkphp/library/think/cache/driver/Secache.php	/^    public function _set_dcur_pos($pos)$/;"	f
_set_node	thinkphp/library/think/cache/driver/Secache.php	/^    public function _set_node($pos, $key, $value)$/;"	f
_set_node_root	thinkphp/library/think/cache/driver/Secache.php	/^    public function _set_node_root($key, $value)$/;"	f
_set_schema	thinkphp/library/think/cache/driver/Secache.php	/^    public function _set_schema($schema_id, $key, $value)$/;"	f
_switch	thinkphp/library/think/template/taglib/Cx.php	/^    public function _switch($tag, $content)$/;"	f
_taglibs	thinkphp/library/think/template/TagLib.php	/^                static $_taglibs;$/;"	v
_type	thinkphp/library/think/controller/Rest.php	/^            $this->_type = $this->getAcceptType();$/;"	v
_type	thinkphp/library/think/controller/Rest.php	/^            $this->_type = $this->restDefaultType;$/;"	v
_type	thinkphp/library/think/controller/Rest.php	/^            $this->_type = __EXT__;$/;"	v
_type	thinkphp/library/think/controller/Rest.php	/^    protected $_type   = ''; \/\/ 当前资源类型$/;"	v
_url	thinkphp/library/think/template/taglib/Cx.php	/^    public function _url($tag, $content)$/;"	f
_varFunctionList	thinkphp/library/think/Template.php	/^        static $_varFunctionList = [];$/;"	v
_varParseList	thinkphp/library/think/Template.php	/^            static $_varParseList = [];$/;"	v
_volist	thinkphp/library/think/template/taglib/Cx.php	/^    public function _volist($tag, $content)$/;"	f
a	thinkphp/library/think/Debug.php	/^        $a    = ['B', 'KB', 'MB', 'GB', 'TB'];$/;"	v
a	thinkphp/library/think/cache/driver/Secache.php	/^        $a              = fread($this->_rs, 4);$/;"	v
abbrev	thinkphp/library/think/Console.php	/^                $abbrev             = substr($name, 0, $len);$/;"	v
abbrevs	thinkphp/library/think/Console.php	/^        $abbrevs = [];$/;"	v
acceptValue	thinkphp/library/think/console/input/Option.php	/^    public function acceptValue()$/;"	f
action	thinkphp/helper.php	/^function action($url, $vars = [], $layer = CONTROLLER_LAYER)$/;"	f
action	thinkphp/library/think/App.php	/^        $action = ACTION_NAME . Config::get('action_suffix');$/;"	v
action	thinkphp/library/think/Loader.php	/^            $action                    = new $class;$/;"	v
action	thinkphp/library/think/Loader.php	/^        $action = $info['basename'];$/;"	v
action	thinkphp/library/think/Loader.php	/^    public static function action($url, $vars = [], $layer = CONTROLLER_LAYER)$/;"	f
action	thinkphp/library/think/Route.php	/^                    $action = 0 !== strpos($action, self::$methodPrefix[REQUEST_METHOD]) ? self::$methodPrefix[REQUEST_METHOD] . $action : $action;$/;"	v
action	thinkphp/library/think/Route.php	/^                    $action = REQUEST_METHOD;$/;"	v
action	thinkphp/library/think/Route.php	/^                $action     = !empty($path) ? array_shift($path) : null;$/;"	v
action	thinkphp/library/think/Route.php	/^                $action     = array_pop($path);$/;"	v
action	thinkphp/library/think/Url.php	/^                $action     = array_pop($path);$/;"	v
actionName	thinkphp/library/think/App.php	/^        $actionName = strip_tags($result[2] ?: Config::get('default_action'));$/;"	v
active	thinkphp/library/think/Session.php	/^    protected static $active = false;$/;"	v
activeUrl	thinkphp/library/think/Validate.php	/^    protected function activeUrl($value, $rule)$/;"	f
add	application/admin/controller/Article.php	/^    public function add()$/;"	f
add	application/admin/model/Article.php	/^    public function add($data) {$/;"	f
add	thinkphp/library/think/Console.php	/^    public function add(Command $command)$/;"	f
add	thinkphp/library/think/Hook.php	/^    public static function add($tag, $behavior, $first = false)$/;"	f
add	thinkphp/library/think/process/Builder.php	/^    public function add($argument)$/;"	f
addArgument	thinkphp/library/think/console/command/Command.php	/^    public function addArgument($name, $mode = null, $description = '', $default = null)$/;"	f
addArgument	thinkphp/library/think/console/input/Definition.php	/^    public function addArgument(Argument $argument)$/;"	f
addArguments	thinkphp/library/think/console/input/Definition.php	/^    public function addArguments($arguments = [])$/;"	f
addCommands	thinkphp/library/think/Console.php	/^    public function addCommands(array $commands)$/;"	f
addDefaultCommands	thinkphp/library/think/Console.php	/^    public static function addDefaultCommands(array $classnames)$/;"	f
addEnvironmentVariables	thinkphp/library/think/process/Builder.php	/^    public function addEnvironmentVariables(array $variables)$/;"	f
addErrorOutput	thinkphp/library/think/Process.php	/^    public function addErrorOutput($line)$/;"	f
addLongOption	thinkphp/library/think/console/Input.php	/^    private function addLongOption($name, $value)$/;"	f
addMap	thinkphp/library/think/Loader.php	/^    public static function addMap($class, $map = '')$/;"	f
addNamespace	thinkphp/library/think/Loader.php	/^    public static function addNamespace($namespace, $path = '')$/;"	f
addNamespaceAlias	thinkphp/library/think/Loader.php	/^    public static function addNamespaceAlias($namespace, $original = '')$/;"	f
addOption	thinkphp/library/think/console/command/Command.php	/^    public function addOption($name, $shortcut = null, $mode = null, $description = '', $default = null)$/;"	f
addOption	thinkphp/library/think/console/input/Definition.php	/^    public function addOption(Option $option)$/;"	f
addOptions	thinkphp/library/think/console/input/Definition.php	/^    public function addOptions($options = [])$/;"	f
addOutput	thinkphp/library/think/Process.php	/^    public function addOutput($line)$/;"	f
addShortOption	thinkphp/library/think/console/Input.php	/^    private function addShortOption($shortcut, $value)$/;"	f
addUsage	thinkphp/library/think/console/command/Command.php	/^    public function addUsage($usage)$/;"	f
address	thinkphp/library/think/log/driver/Socket.php	/^        $address = '\/' . $client_id; \/\/将client_id作为地址， server端通过地址判断将日志发布给谁$/;"	v
after	thinkphp/library/think/Validate.php	/^    protected function after($value, $rule)$/;"	f
alarm	thinkphp/library/think/Log.php	/^    protected static $alarm = null;$/;"	v
alarm	thinkphp/library/think/Log.php	/^    public static function alarm($config = [])$/;"	f
alias	thinkphp/library/think/Route.php	/^    public static function alias($rule, $route = '', $option = [], $pattern = [])$/;"	f
alias	thinkphp/library/think/Url.php	/^        $alias = self::getRouteAlias();$/;"	v
alias	thinkphp/library/think/Validate.php	/^    protected $alias = [$/;"	v
alias	thinkphp/library/think/db/Query.php	/^            $alias = $options['alias'];$/;"	v
alias	thinkphp/library/think/db/Query.php	/^    public function alias($alias)$/;"	f
alias	thinkphp/library/think/template/TagLib.php	/^                    $alias = $_lib . $name != $node['name'] ? ($_lib ? strstr($node['name'], $_lib) : $node['name']) : '';$/;"	v
alias	thinkphp/library/think/template/TagLib.php	/^                $alias = $_lib . $name != $matches[1] ? ($_lib ? strstr($matches[1], $_lib) : $matches[1]) : '';$/;"	v
aliases	thinkphp/library/think/console/command/Command.php	/^        $this->aliases = $aliases;$/;"	v
aliases	thinkphp/library/think/console/command/Command.php	/^    private $aliases                         = [];$/;"	v
aliases	thinkphp/library/think/console/helper/descriptor/Console.php	/^    private $aliases;$/;"	v
all	thinkphp/library/think/Console.php	/^    public function all($namespace = null)$/;"	f
all	thinkphp/library/think/Model.php	/^    public static function all($data = [], $with = [], $cache = false)$/;"	f
all	thinkphp/library/think/console/helper/descriptor/Console.php	/^        $all = $this->console->all($this->namespace ? $this->console->findNamespace($this->namespace) : null);$/;"	v
all	thinkphp/library/think/model/Merge.php	/^    public static function all($data = [], $with = [], $cache = false)$/;"	f
allCommands	thinkphp/library/think/Console.php	/^        $allCommands = array_keys($this->commands);$/;"	v
allNamespaces	thinkphp/library/think/Console.php	/^        $allNamespaces = $this->getNamespaces();$/;"	v
allowField	thinkphp/library/think/Model.php	/^    public function allowField($field)$/;"	f
allowIp	thinkphp/library/think/Validate.php	/^    protected function allowIp($value, $rule)$/;"	f
allowLangList	thinkphp/library/think/Lang.php	/^    protected static $allowLangList = [];$/;"	v
allowMethodList	thinkphp/library/think/controller/Hprose.php	/^    protected $allowMethodList = '';$/;"	v
allowMethodList	thinkphp/library/think/controller/Rpc.php	/^    protected $allowMethodList = '';$/;"	v
allow_client_ids	thinkphp/library/think/log/driver/Socket.php	/^            $this->allow_client_ids = array_merge($this->allow_client_ids, [$this->config['allow_client_id']]);$/;"	v
allow_client_ids	thinkphp/library/think/log/driver/Socket.php	/^        $allow_client_ids = $this->config['allow_client_ids'];$/;"	v
alternatives	thinkphp/library/think/Console.php	/^        $alternatives = [];$/;"	v
alternatives	thinkphp/library/think/Console.php	/^        $alternatives = array_filter($alternatives, function ($lev) use ($threshold) {$/;"	v
anchor	thinkphp/library/think/Url.php	/^            $anchor = $info['fragment'];$/;"	v
anchor	thinkphp/library/think/Url.php	/^        $anchor = !empty($anchor) ? '#' . $anchor : '';$/;"	v
answerIsTrue	thinkphp/library/think/console/helper/question/Confirmation.php	/^            $answerIsTrue = (bool)preg_match($regex, $answer);$/;"	v
any	thinkphp/library/think/Route.php	/^    public static function any($rule, $route = '', $option = [], $pattern = [])$/;"	f
appError	thinkphp/library/think/Error.php	/^    public static function appError($errno, $errstr, $errfile = null, $errline = 0, array $errcontext = [])$/;"	f
appException	thinkphp/library/think/Error.php	/^    public static function appException($exception)$/;"	f
appSettings	thinkphp/library/think/log/driver/Sae.php	/^            $appSettings = [];$/;"	v
appShutdown	thinkphp/library/think/Error.php	/^    public static function appShutdown()$/;"	f
apply	thinkphp/library/think/console/output/formatter/Style.php	/^    public function apply($text)$/;"	f
applyCurrentStyle	thinkphp/library/think/console/output/Formatter.php	/^    private function applyCurrentStyle($text)$/;"	f
areOpen	thinkphp/library/think/process/pipes/Unix.php	/^    public function areOpen()$/;"	f
areOpen	thinkphp/library/think/process/pipes/Windows.php	/^    public function areOpen()$/;"	f
arg	thinkphp/library/think/console/Input.php	/^            $arg = $this->definition->getArgument($c - 1);$/;"	v
arg	thinkphp/library/think/console/Input.php	/^            $arg = $this->definition->getArgument($c);$/;"	v
args	thinkphp/library/think/App.php	/^        $args    = self::bindParams($reflect, $vars);$/;"	v
args	thinkphp/library/think/App.php	/^        $args = [];$/;"	v
args	thinkphp/library/think/App.php	/^        $args = self::bindParams($reflect, $vars);$/;"	v
args	thinkphp/library/think/Template.php	/^                $args = explode('=', $varArray[$i], 2);$/;"	v
args	thinkphp/library/think/log/driver/Socket.php	/^                $args = ['tabid' => null];$/;"	v
args	thinkphp/library/think/log/driver/Socket.php	/^        static $args = [];$/;"	v
arguments	thinkphp/library/think/console/Input.php	/^        $this->arguments  = [];$/;"	v
arguments	thinkphp/library/think/console/Input.php	/^    protected $arguments = [];$/;"	v
arguments	thinkphp/library/think/console/input/Definition.php	/^        $arguments = [];$/;"	v
arguments	thinkphp/library/think/console/input/Definition.php	/^        $arguments = is_int($name) ? array_values($this->arguments) : $this->arguments;$/;"	v
arguments	thinkphp/library/think/console/input/Definition.php	/^        $this->arguments          = [];$/;"	v
arguments	thinkphp/library/think/console/input/Definition.php	/^    private $arguments;$/;"	v
arguments	thinkphp/library/think/process/Builder.php	/^        $arguments = array_merge($this->prefix, $this->arguments);$/;"	v
arguments	thinkphp/library/think/process/Builder.php	/^        $this->arguments = $arguments;$/;"	v
arguments	thinkphp/library/think/process/Builder.php	/^    private $arguments;$/;"	v
argv	thinkphp/library/think/console/Input.php	/^            $argv = $_SERVER['argv'];$/;"	v
array	thinkphp/library/think/Loader.php	/^        $array = explode('\\\\', $name);$/;"	v
array	thinkphp/library/think/Route.php	/^                    $array  = explode('\/', $url, 3);$/;"	v
array	thinkphp/library/think/Route.php	/^                    $array  = parse_url($rule);$/;"	v
array	thinkphp/library/think/Route.php	/^                    $array = explode('\/', $url, 2);$/;"	v
array	thinkphp/library/think/Route.php	/^                $array = explode('.', $rule);$/;"	v
array	thinkphp/library/think/Template.php	/^                            $array = preg_split('\/([!=]={1,2}|(?<!-)[><]={0,1})\/', substr($str, 0, $pos), 2, PREG_SPLIT_DELIM_CAPTURE);$/;"	v
array	thinkphp/library/think/Template.php	/^                    $array = $this->parseAttr($match[0]);$/;"	v
array	thinkphp/library/think/Template.php	/^            $array = $this->parseAttr($matches[0]);$/;"	v
array	thinkphp/library/think/Template.php	/^        $array    = explode(',', $templateName);$/;"	v
array	thinkphp/library/think/Template.php	/^        $array  = $blocks  = $baseBlocks  = [];$/;"	v
array	thinkphp/library/think/Template.php	/^        $array = [];$/;"	v
array	thinkphp/library/think/Url.php	/^            $array = $vars;$/;"	v
array	thinkphp/library/think/Validate.php	/^                $array = array_pad([], 3, '');$/;"	v
array	thinkphp/library/think/Validate.php	/^                $array = array_pad(explode(',', $rule), 3, '');$/;"	v
array	thinkphp/library/think/controller/Rest.php	/^            $array = explode(',', $val);$/;"	v
array	thinkphp/library/think/db/Builder.php	/^                        $array = explode('&', $field);$/;"	v
array	thinkphp/library/think/db/Builder.php	/^                        $array = explode('|', $field);$/;"	v
array	thinkphp/library/think/db/Builder.php	/^            $array = [];$/;"	v
array	thinkphp/library/think/model/Merge.php	/^        $array  = [];$/;"	v
array	thinkphp/library/think/template/TagLib.php	/^                        $array = (array) $val['alias'];$/;"	v
array	thinkphp/library/think/template/TagLib.php	/^                $array = (array) $val['alias'];$/;"	v
array	thinkphp/library/think/template/taglib/Cx.php	/^            $array = explode(',', $file);$/;"	v
article	application/admin/controller/Article.php	/^        $article = new \\app\\admin\\model\\Article();$/;"	v
ask	thinkphp/library/think/console/helper/Question.php	/^    public function ask(Input $input, Output $output, OutputQuestion $question)$/;"	f
assign	thinkphp/library/think/Controller.php	/^    public function assign($name, $value = '')$/;"	f
assign	thinkphp/library/think/Template.php	/^    public function assign($name, $value = '')$/;"	f
assign	thinkphp/library/think/View.php	/^    public function assign($name, $value = '')$/;"	f
attach	thinkphp/library/think/model/Relation.php	/^    public function attach($data, $pivot = [])$/;"	f
attachQuery	thinkphp/library/think/model/Merge.php	/^    protected static function attachQuery($query)$/;"	f
attempts	thinkphp/library/think/console/helper/Question.php	/^        $attempts = $question->getMaxAttempts();$/;"	v
attempts	thinkphp/library/think/console/helper/question/Question.php	/^        $this->attempts = $attempts;$/;"	v
attempts	thinkphp/library/think/console/helper/question/Question.php	/^    private $attempts;$/;"	v
attr	thinkphp/library/think/db/Query.php	/^                    $attr         = isset($alias) ? $alias . '.' . $key : $key;$/;"	v
attrCase	thinkphp/library/think/db/Connection.php	/^            $this->attrCase = $params[PDO::ATTR_CASE];$/;"	v
attrCase	thinkphp/library/think/db/Connection.php	/^    protected $attrCase = PDO::CASE_LOWER;$/;"	v
attrs	thinkphp/library/think/template/TagLib.php	/^                    $attrs  = $this->parseAttr($node['begin'][0], $name, $alias);$/;"	v
attrs	thinkphp/library/think/template/TagLib.php	/^                $attrs  = $this->parseAttr($matches[0], $name, $alias);$/;"	v
auto	thinkphp/library/think/Model.php	/^        $this->auto = $fields;$/;"	v
auto	thinkphp/library/think/Model.php	/^    protected $auto = [];$/;"	v
auto	thinkphp/library/think/Model.php	/^    public function auto($fields)$/;"	f
autoBuildVar	thinkphp/library/think/template/TagLib.php	/^    public function autoBuildVar(&$name)$/;"	f
autoCompleteData	thinkphp/library/think/Model.php	/^    protected function autoCompleteData($auto = [])$/;"	f
autoExit	thinkphp/library/think/Console.php	/^        $this->autoExit = (bool) $boolean;$/;"	v
autoExit	thinkphp/library/think/Console.php	/^    private $autoExit        = true;$/;"	v
autoTimeField	thinkphp/library/think/Model.php	/^    protected $autoTimeField = ['create_time', 'update_time', 'delete_time'];$/;"	v
autocomplete	thinkphp/library/think/console/helper/Question.php	/^        $autocomplete = $question->getAutocompleterValues();$/;"	v
autocomplete	thinkphp/library/think/console/helper/Question.php	/^    private function autocomplete(Output $output, OutputQuestion $question, $inputStream)$/;"	f
autocompleterValues	thinkphp/library/think/console/helper/question/Question.php	/^        $this->autocompleterValues = $values;$/;"	v
autocompleterValues	thinkphp/library/think/console/helper/question/Question.php	/^    private $autocompleterValues;$/;"	v
autoload	thinkphp/library/think/Loader.php	/^    public static function autoload($class)$/;"	f
availableBackgroundColors	thinkphp/library/think/console/output/formatter/Style.php	/^    private static $availableBackgroundColors = [$/;"	v
availableForegroundColors	thinkphp/library/think/console/output/formatter/Style.php	/^    private static $availableForegroundColors = [$/;"	v
availableOptions	thinkphp/library/think/console/output/formatter/Style.php	/^    private static $availableOptions          = [$/;"	v
avg	thinkphp/library/think/db/Query.php	/^    public function avg($field = '*')$/;"	f
background	thinkphp/library/think/console/output/formatter/Style.php	/^            $this->background = null;$/;"	v
background	thinkphp/library/think/console/output/formatter/Style.php	/^        $this->background = static::$availableBackgroundColors[$color];$/;"	v
background	thinkphp/library/think/console/output/formatter/Style.php	/^    private $background;$/;"	v
base	thinkphp/library/think/log/driver/Trace.php	/^        $base = [$/;"	v
baseBlocks	thinkphp/library/think/Template.php	/^                $baseBlocks = $this->parseBlock($template, true);$/;"	v
baseUrl	thinkphp/library/think/Loader.php	/^                $baseUrl = APP_PATH . $name . DS;$/;"	v
baseUrl	thinkphp/library/think/Loader.php	/^                $baseUrl = EXTEND_PATH;$/;"	v
baseUrl	thinkphp/library/think/Loader.php	/^                $baseUrl = MODULE_PATH;$/;"	v
baseUrl	thinkphp/library/think/Loader.php	/^                $baseUrl = self::$namespace[$name];$/;"	v
basepath	thinkphp/library/think/template/taglib/Cx.php	/^            $basepath = !empty($tag['basepath']) ? $tag['basepath'] : '\/public';$/;"	v
batch	thinkphp/library/think/Validate.php	/^        $this->batch = $batch;$/;"	v
batch	thinkphp/library/think/Validate.php	/^    protected $batch = false;$/;"	v
batch	thinkphp/library/think/Validate.php	/^    public function batch($batch = true)$/;"	f
batchQuery	thinkphp/library/think/db/Connection.php	/^    public function batchQuery($sql = [])$/;"	f
before	thinkphp/library/think/Validate.php	/^    protected function before($value, $rule)$/;"	f
beforeAction	thinkphp/library/think/Controller.php	/^    protected function beforeAction($method, $options = [])$/;"	f
beforeActionList	thinkphp/library/think/Controller.php	/^    protected $beforeActionList = [];$/;"	v
begin	thinkphp/library/think/Input.php	/^                $begin = substr($filter, 0, 1);$/;"	v
begin	thinkphp/library/think/Template.php	/^            $begin  = $this->config['taglib_begin'];$/;"	v
begin	thinkphp/library/think/Template.php	/^            $begin = $this->config['tpl_begin'];$/;"	v
begin	thinkphp/library/think/template/TagLib.php	/^                                $begin = array_pop($beginArray);$/;"	v
begin	thinkphp/library/think/template/TagLib.php	/^                            $begin = end($beginArray);$/;"	v
begin	thinkphp/library/think/template/TagLib.php	/^                    $begin = array_pop($beginArray);$/;"	v
begin	thinkphp/library/think/template/TagLib.php	/^        $begin   = $this->tpl->config('taglib_begin');$/;"	v
beginArray	thinkphp/library/think/template/TagLib.php	/^                $beginArray = [];$/;"	v
behavior	thinkphp/library/think/Validate.php	/^    protected function behavior($value, $rule, $data)$/;"	f
belongsTo	thinkphp/library/think/Model.php	/^    public function belongsTo($model, $foreignKey = '', $otherKey = '')$/;"	f
belongsTo	thinkphp/library/think/model/Relation.php	/^    public function belongsTo($model, $foreignKey, $otherKey)$/;"	f
belongsToMany	thinkphp/library/think/Model.php	/^    public function belongsToMany($model, $table = '', $localKey = '', $foreignKey = '')$/;"	f
belongsToMany	thinkphp/library/think/model/Relation.php	/^    public function belongsToMany($model, $table, $localKey, $foreignKey)$/;"	f
belongsToManyQuery	thinkphp/library/think/model/Relation.php	/^    protected function belongsToManyQuery($model, $table, $localKey, $foreignKey, $condition = [])$/;"	f
between	thinkphp/library/think/Validate.php	/^    protected function between($value, $rule)$/;"	f
bind	thinkphp/library/think/Route.php	/^    private static $bind = [];$/;"	v
bind	thinkphp/library/think/Route.php	/^    public static function bind($type, $bind = '')$/;"	f
bind	thinkphp/library/think/Url.php	/^            $bind = Route::bind($type);$/;"	v
bind	thinkphp/library/think/console/Input.php	/^    public function bind(Definition $definition)$/;"	f
bind	thinkphp/library/think/db/Builder.php	/^        $bind = $this->query->getTableInfo($options['table'], 'bind');$/;"	v
bind	thinkphp/library/think/db/Query.php	/^            $bind   = $type   = [];$/;"	v
bind	thinkphp/library/think/db/Query.php	/^            $this->bind = array_merge($this->bind, $key);$/;"	v
bind	thinkphp/library/think/db/Query.php	/^        $bind       = $this->bind;$/;"	v
bind	thinkphp/library/think/db/Query.php	/^        $this->bind = [];$/;"	v
bind	thinkphp/library/think/db/Query.php	/^    protected $bind = [];$/;"	v
bind	thinkphp/library/think/db/Query.php	/^    public function bind($key, $value = false, $type = PDO::PARAM_STR)$/;"	f
bindParams	thinkphp/library/think/App.php	/^    private static function bindParams($reflect, $vars)$/;"	f
bindValue	thinkphp/library/think/db/Connection.php	/^    protected function bindValue(array $bind = [])$/;"	f
binds	thinkphp/library/think/db/Builder.php	/^        $binds  = $this->query->getTableInfo($table, 'bind');$/;"	v
blocked	thinkphp/library/think/process/pipes/Pipes.php	/^        $this->blocked = false;$/;"	v
blocked	thinkphp/library/think/process/pipes/Pipes.php	/^    private $blocked = true;$/;"	v
blocks	thinkphp/library/think/Template.php	/^                    $blocks = array_merge($blocks, $this->parseBlock($template));$/;"	v
break	thinkphp/library/think/template/TagLib.php	/^            $break = '<!--###break###--!>';$/;"	v
build	thinkphp/library/think/Url.php	/^    public static function build($url = '', $vars = '', $suffix = true, $domain = false)$/;"	f
build	thinkphp/library/think/console/command/Build.php	/^            $build = include $input->getOption('config');$/;"	v
build	thinkphp/library/think/console/command/Build.php	/^            $build = include APP_PATH . 'build.php';$/;"	v
buildCallback	thinkphp/library/think/Process.php	/^    protected function buildCallback($callback)$/;"	f
buildCommon	thinkphp/library/think/Build.php	/^    protected static function buildCommon($module)$/;"	f
buildDir	thinkphp/library/think/Build.php	/^    protected static function buildDir($list)$/;"	f
buildFile	thinkphp/library/think/Build.php	/^    protected static function buildFile($list)$/;"	f
buildHello	thinkphp/library/think/Build.php	/^    protected static function buildHello($module)$/;"	f
buildSql	thinkphp/library/think/db/Query.php	/^    public function buildSql($sub = true)$/;"	f
buildWhere	thinkphp/library/think/db/Builder.php	/^    public function buildWhere($where, $table)$/;"	f
builder	thinkphp/library/think/db/Query.php	/^        static $builder = [];$/;"	v
builder	thinkphp/library/think/db/Query.php	/^    protected function builder()$/;"	f
c	thinkphp/library/think/console/Input.php	/^        $c = count($this->arguments);$/;"	v
c	thinkphp/library/think/console/helper/Question.php	/^            $c = fread($inputStream, 1);$/;"	v
cache	thinkphp/helper.php	/^function cache($name, $value = '', $options = null)$/;"	f
cache	thinkphp/library/think/Model.php	/^    protected $cache = [];$/;"	v
cache	thinkphp/library/think/db/Query.php	/^            $cache     = $options['cache'];$/;"	v
cache	thinkphp/library/think/db/Query.php	/^            $cache  = $options['cache'];$/;"	v
cache	thinkphp/library/think/db/Query.php	/^            $cache  = $this->options['cache'];$/;"	v
cache	thinkphp/library/think/db/Query.php	/^    public function cache($key = true, $expire = null)$/;"	f
cacheContent	thinkphp/library/think/Template.php	/^            $cacheContent = Cache::get($this->config['cache_id']);$/;"	v
cacheFile	thinkphp/library/think/Template.php	/^            $cacheFile = $this->config['cache_path'] . $this->config['cache_prefix'] . md5($template) . $this->config['cache_suffix'];$/;"	v
cacheFile	thinkphp/library/think/Template.php	/^        $cacheFile = $this->config['cache_path'] . $this->config['cache_prefix'] . md5($content) . $this->config['cache_suffix'];$/;"	v
calculateTotalWidthForOptions	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^    private function calculateTotalWidthForOptions($options)$/;"	f
call	thinkphp/library/think/App.php	/^            $call = [$instance, $action];$/;"	v
call	thinkphp/library/think/template/taglib/Cx.php	/^        $call = !empty($tag['call']) ? $tag['call'] : '';$/;"	v
call	thinkphp/library/traits/think/Instance.php	/^        $call = substr($method, 1);$/;"	v
callback	thinkphp/library/think/Process.php	/^            $this->callback = $this->buildCallback($callback);$/;"	v
callback	thinkphp/library/think/Process.php	/^        $callback = $this->callback;$/;"	v
callback	thinkphp/library/think/Process.php	/^        $callback = function ($type, $data) use ($callback, $out) {$/;"	v
callback	thinkphp/library/think/Process.php	/^        $this->callback                     = null;$/;"	v
callback	thinkphp/library/think/Process.php	/^        $this->callback  = $this->buildCallback($callback);$/;"	v
callback	thinkphp/library/think/Process.php	/^    private $callback;$/;"	v
callback	thinkphp/library/think/Validate.php	/^                        $callback = isset(self::$type[$type]) ? self::$type[$type] : [$this, $type];$/;"	v
callback	thinkphp/library/think/console/helper/Process.php	/^            $callback = $this->wrapCallback($output, $process, $callback);$/;"	v
captureExitCode	thinkphp/library/think/Process.php	/^    private function captureExitCode()$/;"	f
catchExceptions	thinkphp/library/think/Console.php	/^        $this->catchExceptions = (bool) $boolean;$/;"	v
catchExceptions	thinkphp/library/think/Console.php	/^    private $catchExceptions = true;$/;"	v
ch	thinkphp/library/think/log/driver/Socket.php	/^        $ch  = curl_init();$/;"	v
change	thinkphp/library/think/Model.php	/^        $this->change = [];$/;"	v
change	thinkphp/library/think/Model.php	/^    protected $change = [];$/;"	v
check	thinkphp/library/think/Route.php	/^    public static function check($url, $depr = '\/', $checkDomain = false)$/;"	f
check	thinkphp/library/think/Validate.php	/^    public function check(&$data, $rules = [], $scene = '')$/;"	f
check	thinkphp/library/think/log/driver/Socket.php	/^    protected function check()$/;"	f
check	thinkphp/library/think/template/driver/File.php	/^    public function check($cacheFile, $cacheTime)$/;"	f
check	thinkphp/library/think/template/driver/Sae.php	/^    public function check($cacheFile, $cacheTime)$/;"	f
checkCache	thinkphp/library/think/Template.php	/^    private function checkCache($cacheFile)$/;"	f
checkDomain	thinkphp/library/think/Route.php	/^    public static function checkDomain()$/;"	f
checkItem	thinkphp/library/think/Validate.php	/^    protected function checkItem($field, $value, $rules, &$data, $title = '', $msg = [])$/;"	f
checkOption	thinkphp/library/think/Route.php	/^    private static function checkOption($option, $url)$/;"	f
checkPath	thinkphp/library/think/UploadFile.php	/^    protected function checkPath($path)$/;"	f
checkRule	thinkphp/library/think/Route.php	/^    private static function checkRule($rule, $route, $url, $pattern, $option)$/;"	f
checkTimeout	thinkphp/library/think/Process.php	/^    public function checkTimeout()$/;"	f
checkUrlBind	thinkphp/library/think/Route.php	/^    private static function checkUrlBind(&$url, &$rules)$/;"	f
children	thinkphp/library/think/Template.php	/^                $children = [];$/;"	v
choices	thinkphp/library/think/console/helper/question/Choice.php	/^        $choices      = $this->choices;$/;"	v
choices	thinkphp/library/think/console/helper/question/Choice.php	/^        $this->choices = $choices;$/;"	v
choices	thinkphp/library/think/console/helper/question/Choice.php	/^    private $choices;$/;"	v
chunk	thinkphp/library/think/db/Query.php	/^    public function chunk($count, $callback, $column = null)$/;"	f
class	thinkphp/library/think/App.php	/^            $class   = is_object($method[0]) ? $method[0] : new $method[0];$/;"	v
class	thinkphp/library/think/Build.php	/^                    $class     = $val . (CLASS_APPEND_SUFFIX ? ucfirst($path) : '');$/;"	v
class	thinkphp/library/think/Cache.php	/^            $class = (!empty($options['namespace']) ? $options['namespace'] : '\\\\think\\\\cache\\\\driver\\\\') . ucwords($type);$/;"	v
class	thinkphp/library/think/Config.php	/^        $class = (false === strpos($type, '\\\\')) ? '\\\\think\\\\config\\\\driver\\\\' . ucwords($type) : $type;$/;"	v
class	thinkphp/library/think/Console.php	/^                    $class    = isset($trace[$i]['class']) ? $trace[$i]['class'] : '';$/;"	v
class	thinkphp/library/think/Db.php	/^            $class                 = (!empty($options['namespace']) ? $options['namespace'] : '\\\\think\\\\db\\\\connector\\\\') . ucwords($options['type']);$/;"	v
class	thinkphp/library/think/Loader.php	/^            $class = str_replace('\\\\' . $module . '\\\\', '\\\\' . COMMON_MODULE . '\\\\', $class);$/;"	v
class	thinkphp/library/think/Loader.php	/^        $class        = str_replace(['.', '#'], [DS, '.'], $class);$/;"	v
class	thinkphp/library/think/Loader.php	/^        $class  = self::controller($module, $layer);$/;"	v
class	thinkphp/library/think/Loader.php	/^        $class = self::parseClass($module, $layer, $name);$/;"	v
class	thinkphp/library/think/Loader.php	/^        $class = self::parseName(array_pop($array), 1) . (CLASS_APPEND_SUFFIX ? ucfirst($layer) : '');$/;"	v
class	thinkphp/library/think/Log.php	/^        $class = (!empty($config['namespace']) ? $config['namespace'] : '\\\\think\\\\log\\\\alarm\\\\') . ucwords($type);$/;"	v
class	thinkphp/library/think/Log.php	/^        $class = (!empty($config['namespace']) ? $config['namespace'] : '\\\\think\\\\log\\\\driver\\\\') . ucwords($type);$/;"	v
class	thinkphp/library/think/Model.php	/^            $class  = self::db();$/;"	v
class	thinkphp/library/think/Model.php	/^        $class = get_class($this);$/;"	v
class	thinkphp/library/think/Model.php	/^        $class = new static();$/;"	v
class	thinkphp/library/think/Model.php	/^        $class = self::db();$/;"	v
class	thinkphp/library/think/Route.php	/^                    $class  = !empty($array[0]) ? $array[0] : Config::get('default_controller');$/;"	v
class	thinkphp/library/think/Session.php	/^            $class = (!empty($config['namespace']) ? $config['namespace'] : '\\\\think\\\\session\\\\driver\\\\') . ucwords($config['type']);$/;"	v
class	thinkphp/library/think/Template.php	/^        $class         = $this->config['namespace'] . ucwords($type);$/;"	v
class	thinkphp/library/think/UploadFile.php	/^        $class = strpos($driver, '\\\\') ? $driver : '\\\\think\\\\file\\\\driver\\\\' . ucfirst(strtolower($driver));$/;"	v
class	thinkphp/library/think/View.php	/^        $class = (!empty($options['namespace']) ? $options['namespace'] : '\\\\think\\\\view\\\\driver\\\\') . ucfirst($type);$/;"	v
class	thinkphp/library/think/db/Query.php	/^            $class            = '\\\\think\\\\db\\\\builder\\\\' . ucfirst($driver);$/;"	v
class	thinkphp/library/think/db/Query.php	/^        $class        = new $this->options['model'];$/;"	v
class	thinkphp/library/think/model/Merge.php	/^        $class  = new static();$/;"	v
classMap	thinkphp/library/think/Loader.php	/^            $classMap = require VENDOR_PATH . 'composer\/autoload_classmap.php';$/;"	v
className	thinkphp/library/think/Template.php	/^            $className = $tagLib;$/;"	v
className	thinkphp/library/think/Template.php	/^            $className = '\\\\think\\\\template\\\\taglib\\\\' . ucwords($tagLib);$/;"	v
clear	thinkphp/library/think/Cookie.php	/^    public static function clear($prefix = null)$/;"	f
clear	thinkphp/library/think/Log.php	/^    public static function clear()$/;"	f
clear	thinkphp/library/think/Session.php	/^    public static function clear($prefix = null)$/;"	f
clear	thinkphp/library/think/cache/driver/Apc.php	/^    public function clear()$/;"	f
clear	thinkphp/library/think/cache/driver/Db.php	/^    public function clear()$/;"	f
clear	thinkphp/library/think/cache/driver/File.php	/^    public function clear()$/;"	f
clear	thinkphp/library/think/cache/driver/Lite.php	/^    public function clear()$/;"	f
clear	thinkphp/library/think/cache/driver/Memcache.php	/^    public function clear()$/;"	f
clear	thinkphp/library/think/cache/driver/Memcached.php	/^    public function clear()$/;"	f
clear	thinkphp/library/think/cache/driver/Redis.php	/^    public function clear()$/;"	f
clear	thinkphp/library/think/cache/driver/Sae.php	/^    public function clear()$/;"	f
clear	thinkphp/library/think/cache/driver/Secache.php	/^    public function clear()$/;"	f
clear	thinkphp/library/think/cache/driver/Sqlite.php	/^    public function clear()$/;"	f
clear	thinkphp/library/think/cache/driver/Test.php	/^    public function clear()$/;"	f
clear	thinkphp/library/think/cache/driver/Wincache.php	/^    public function clear()$/;"	f
clear	thinkphp/library/think/cache/driver/Xcache.php	/^    public function clear()$/;"	f
clearAliasCache	thinkphp/library/think/Url.php	/^    public static function clearAliasCache()$/;"	f
clearErrorOutput	thinkphp/library/think/Process.php	/^    public function clearErrorOutput()$/;"	f
clearOutput	thinkphp/library/think/Process.php	/^    public function clearOutput()$/;"	f
client_id	thinkphp/library/think/log/driver/Socket.php	/^                $client_id = $force_client_id;$/;"	v
client_id	thinkphp/library/think/log/driver/Socket.php	/^            $client_id = $this->getClientArg('client_id');$/;"	v
client_id	thinkphp/library/think/log/driver/Socket.php	/^            $client_id = '';$/;"	v
close	thinkphp/library/think/Process.php	/^            $close   = '\\\\' !== DS || !$running;$/;"	v
close	thinkphp/library/think/Process.php	/^    private function close()$/;"	f
close	thinkphp/library/think/db/Connection.php	/^    public function close()$/;"	f
close	thinkphp/library/think/process/pipes/Pipes.php	/^    public function close()$/;"	f
close	thinkphp/library/think/process/pipes/Windows.php	/^    public function close()$/;"	f
close	thinkphp/library/think/session/driver/Memcache.php	/^    public function close()$/;"	f
close	thinkphp/library/think/session/driver/Memcached.php	/^    public function close()$/;"	f
close	thinkphp/library/think/session/driver/Redis.php	/^    public function close()$/;"	f
close	thinkphp/library/think/template/TagLib.php	/^            $close                       = !isset($val['close']) || $val['close'] ? 1 : 0;$/;"	v
closure	thinkphp/library/think/db/Query.php	/^                $closure    = $relation;$/;"	v
closure	thinkphp/library/think/db/Query.php	/^            $closure = false;$/;"	v
closure	thinkphp/library/think/model/Relation.php	/^                $closure  = $relation;$/;"	v
closure	thinkphp/library/think/model/Relation.php	/^            $closure     = false;$/;"	v
code	thinkphp/library/think/Error.php	/^            $code = $exception->getSeverity();$/;"	v
code	thinkphp/library/think/Error.php	/^        $code = $exception->getCode();$/;"	v
code	thinkphp/library/think/Response.php	/^            $code = $msg;$/;"	v
code	thinkphp/library/think/Response.php	/^        $code = 0;$/;"	v
code	thinkphp/library/think/Response.php	/^        $code = 1;$/;"	v
code	thinkphp/library/think/cache/driver/Secache.php	/^                $code = pack(str_repeat('V1', count($this->schema_struct)), $size, $next_free_node, 0, 0, 0, 0);$/;"	v
code	thinkphp/library/think/console/command/Command.php	/^                $code = \\Closure::bind($code, $this);$/;"	v
code	thinkphp/library/think/console/command/Command.php	/^        $this->code = $code;$/;"	v
code	thinkphp/library/think/console/command/Command.php	/^    private $code;$/;"	v
code	thinkphp/library/think/exception/DbException.php	/^        $this->code     = $code;$/;"	v
code	thinkphp/library/think/exception/ErrorException.php	/^        $this->code     = 0;$/;"	v
collectionParts	thinkphp/library/think/Console.php	/^        $collectionParts = [];$/;"	v
colors	thinkphp/library/think/console/helper/Debug.php	/^    private $colors  = ['black', 'red', 'green', 'yellow', 'blue', 'magenta', 'cyan', 'white'];$/;"	v
column	thinkphp/library/think/db/Query.php	/^        $column    = $column ?: $this->getPk();$/;"	v
column	thinkphp/library/think/db/Query.php	/^    public function column($field, $key = '')$/;"	f
command	thinkphp/library/think/Console.php	/^        $command = $this->commands[$name];$/;"	v
command	thinkphp/library/think/Console.php	/^        $command = $this->find($name);$/;"	v
command	thinkphp/library/think/console/command/Help.php	/^            $this->command = $this->getConsole()->find($input->getArgument('command_name'));$/;"	v
command	thinkphp/library/think/console/command/Help.php	/^        $this->command = $command;$/;"	v
command	thinkphp/library/think/console/command/Help.php	/^        $this->command = null;$/;"	v
command	thinkphp/library/think/console/command/Help.php	/^    private $command;$/;"	v
command	thinkphp/library/think/console/helper/Question.php	/^            $command = sprintf("\/usr\/bin\/env %s -c 'stty -echo; %s; stty echo; echo \\$mypassword'", $shell, $readCmd);$/;"	v
command	thinkphp/library/think/console/helper/Set.php	/^        $this->command = $command;$/;"	v
command	thinkphp/library/think/console/helper/Set.php	/^    private $command;$/;"	v
commandList	thinkphp/library/think/Console.php	/^            $commandList = $this->commands;$/;"	v
commandName	thinkphp/library/think/Console.php	/^                $commandName = $commandList[$nameOrAlias]->getName();$/;"	v
commandline	thinkphp/library/think/Process.php	/^            $commandline = 'cmd \/V:ON \/E:ON \/C "(' . $commandline . ')';$/;"	v
commandline	thinkphp/library/think/Process.php	/^            $this->commandline = '(' . $this->commandline . ') 3>\/dev\/null; code=$?; echo $code >&3; exit $code';$/;"	v
commandline	thinkphp/library/think/Process.php	/^        $commandline = $this->commandline;$/;"	v
commandline	thinkphp/library/think/Process.php	/^        $this->commandline = $commandline;$/;"	v
commandline	thinkphp/library/think/Process.php	/^    private $commandline;$/;"	v
commands	thinkphp/library/think/Console.php	/^            $commands    = array_filter($commands, function ($nameOrAlias) use ($commandList, $commands) {$/;"	v
commands	thinkphp/library/think/Console.php	/^        $commands = [];$/;"	v
commands	thinkphp/library/think/Console.php	/^        $commands = preg_grep('{^' . $expr . '}', $allCommands);$/;"	v
commands	thinkphp/library/think/Console.php	/^    private $commands = [];$/;"	v
commands	thinkphp/library/think/console/helper/descriptor/Console.php	/^        $this->commands   = [];$/;"	v
commands	thinkphp/library/think/console/helper/descriptor/Console.php	/^    private $commands;$/;"	v
commands	thinkphp/mode/console/App.php	/^            $commands = include APP_PATH . 'command' . EXT;$/;"	v
comment	thinkphp/library/think/db/Query.php	/^    public function comment($comment)$/;"	f
commit	thinkphp/library/think/db/Connection.php	/^    public function commit($label = '')$/;"	f
comparison	thinkphp/library/think/template/TagLib.php	/^    protected $comparison = [' nheq ' => ' !== ', ' heq ' => ' === ', ' neq ' => ' != ', ' eq ' => ' == ', ' egt ' => ' >= ', ' gt ' => ' > ', ' elt ' => ' <= ', ' lt ' => ' < '];$/;"	v
comparison	thinkphp/library/think/template/taglib/Cx.php	/^                    $comparison = $value;$/;"	v
comparison	thinkphp/library/think/template/taglib/Cx.php	/^        $comparison = 'lt';$/;"	v
compiler	thinkphp/library/think/Template.php	/^    private function compiler(&$content, $cacheFile)$/;"	f
composerRequire	thinkphp/library/think/Loader.php	/^    private static function composerRequire($fileIdentifier, $file)$/;"	f
condition	thinkphp/library/think/db/Query.php	/^                $condition = implode(' AND ', $condition);$/;"	v
condition	thinkphp/library/think/db/Query.php	/^        $condition = !empty($this->options['where']) ? $this->options['where'] : [];$/;"	v
condition	thinkphp/library/think/template/TagLib.php	/^        $condition = str_ireplace(array_keys($this->comparison), array_values($this->comparison), $condition);$/;"	v
condition	thinkphp/library/think/template/taglib/Cx.php	/^        $condition = !empty($tag['expression']) ? $tag['expression'] : $tag['condition'];$/;"	v
condition	thinkphp/library/think/template/taglib/Cx.php	/^        $condition = $this->parseCondition($condition);$/;"	v
config	application/admin/controller/Index.php	/^        $config = \\think\\Config::get('database');$/;"	v
config	application/admin/controller/Index.php	/^    public function config()$/;"	f
config	application/index/controller/Index.php	/^        $config = \\think\\Config::get('database');$/;"	v
config	application/index/controller/Index.php	/^    public function config()$/;"	f
config	thinkphp/helper.php	/^function config($name = '', $value = null, $range = '')$/;"	f
config	thinkphp/library/think/App.php	/^                $config = Config::load(APP_PATH . $module . $config['app_status'] . EXT);$/;"	v
config	thinkphp/library/think/App.php	/^            $config = Config::load(APP_PATH . $module . 'config' . EXT);$/;"	v
config	thinkphp/library/think/App.php	/^        $config = Config::get();$/;"	v
config	thinkphp/library/think/Config.php	/^    private static $config = [];$/;"	v
config	thinkphp/library/think/Cookie.php	/^            $config = array_merge(self::$config, array_change_key_case($option));$/;"	v
config	thinkphp/library/think/Cookie.php	/^            $config = self::$config;$/;"	v
config	thinkphp/library/think/Cookie.php	/^        $config = self::$config;$/;"	v
config	thinkphp/library/think/Cookie.php	/^    protected static $config = [$/;"	v
config	thinkphp/library/think/Db.php	/^            $config = Config::get($config);$/;"	v
config	thinkphp/library/think/Db.php	/^            $config = Config::get('database');$/;"	v
config	thinkphp/library/think/Session.php	/^            $config = Config::get('session');$/;"	v
config	thinkphp/library/think/Template.php	/^            $this->config = array_merge($this->config, $config);$/;"	v
config	thinkphp/library/think/Template.php	/^        $this->config                 = array_merge($this->config, $config);$/;"	v
config	thinkphp/library/think/Template.php	/^    protected $config = [$/;"	v
config	thinkphp/library/think/Template.php	/^    public function config($config)$/;"	f
config	thinkphp/library/think/db/Connection.php	/^                $config = $this->config;$/;"	v
config	thinkphp/library/think/db/Connection.php	/^            $this->config = array_merge($this->config, $config);$/;"	v
config	thinkphp/library/think/db/Connection.php	/^    protected $config = [$/;"	v
config	thinkphp/library/think/log/alarm/Email.php	/^        $this->config = array_merge($this->config, $config);$/;"	v
config	thinkphp/library/think/log/alarm/Email.php	/^    protected $config = [$/;"	v
config	thinkphp/library/think/log/driver/File.php	/^            $this->config = array_merge($this->config, $config);$/;"	v
config	thinkphp/library/think/log/driver/File.php	/^    protected $config = [$/;"	v
config	thinkphp/library/think/log/driver/Sae.php	/^        $this->config = array_merge($this->config, $config);$/;"	v
config	thinkphp/library/think/log/driver/Sae.php	/^    protected $config = [$/;"	v
config	thinkphp/library/think/log/driver/Socket.php	/^            $this->config = array_merge($this->config, $config);$/;"	v
config	thinkphp/library/think/log/driver/Socket.php	/^    protected $config = [$/;"	v
config	thinkphp/library/think/log/driver/Trace.php	/^        $this->config               = array_merge($this->config, $config);$/;"	v
config	thinkphp/library/think/log/driver/Trace.php	/^    protected $config = [$/;"	v
config	thinkphp/library/think/session/driver/Memcache.php	/^        $this->config = array_merge($this->config, $config);$/;"	v
config	thinkphp/library/think/session/driver/Memcache.php	/^    protected $config  = [$/;"	v
config	thinkphp/library/think/session/driver/Memcached.php	/^        $this->config = array_merge($this->config, $config);$/;"	v
config	thinkphp/library/think/session/driver/Memcached.php	/^    protected $config  = [$/;"	v
config	thinkphp/library/think/session/driver/Redis.php	/^        $this->config = array_merge($this->config, $config);$/;"	v
config	thinkphp/library/think/session/driver/Redis.php	/^    protected $config  = [$/;"	v
config	thinkphp/library/think/view/driver/Php.php	/^        $this->config = array_merge($this->config, $config);$/;"	v
config	thinkphp/library/think/view/driver/Php.php	/^    protected $config = [$/;"	v
config	thinkphp/library/think/view/driver/Think.php	/^        $this->config = array_merge($this->config, $config);$/;"	v
config	thinkphp/library/think/view/driver/Think.php	/^    protected $config = [$/;"	v
config	thinkphp/mode/console/App.php	/^                $config = Config::load(APP_PATH . $config['app_status'] . EXT);$/;"	v
config	thinkphp/mode/console/App.php	/^            $config = Config::get();$/;"	v
config	thinkphp/mode/console/App.php	/^            $config = Config::load(APP_PATH . 'config' . EXT);$/;"	v
configure	thinkphp/library/think/console/command/Build.php	/^    protected function configure()$/;"	f
configure	thinkphp/library/think/console/command/Command.php	/^    protected function configure()$/;"	f
configure	thinkphp/library/think/console/command/Help.php	/^    protected function configure()$/;"	f
configure	thinkphp/library/think/console/command/Lists.php	/^    protected function configure()$/;"	f
configureIO	thinkphp/library/think/Console.php	/^    protected function configureIO(Input $input, Output $output)$/;"	f
confirm	thinkphp/library/think/Validate.php	/^    protected function confirm($value, $rule, $data)$/;"	f
connect	thinkphp/library/think/Cache.php	/^    public static function connect(array $options = [])$/;"	f
connect	thinkphp/library/think/Db.php	/^    public static function connect($config = [])$/;"	f
connect	thinkphp/library/think/db/Connection.php	/^    public function connect(array $config = [], $linkNum = 0, $autoConnection = false)$/;"	f
connection	thinkphp/library/think/Model.php	/^    protected static $connection = [];$/;"	v
connection	thinkphp/library/think/db/Builder.php	/^        $this->connection = $connection;$/;"	v
connection	thinkphp/library/think/db/Builder.php	/^    protected $connection;$/;"	v
connection	thinkphp/library/think/db/Query.php	/^        $this->connection = $connection ?: Db::connect();$/;"	v
connection	thinkphp/library/think/db/Query.php	/^    protected $connection;$/;"	v
console	thinkphp/library/think/console/command/Command.php	/^        $this->console = $console;$/;"	v
console	thinkphp/library/think/console/command/Command.php	/^    private $console;$/;"	v
console	thinkphp/library/think/console/helper/descriptor/Console.php	/^        $this->console   = $console;$/;"	v
console	thinkphp/library/think/console/helper/descriptor/Console.php	/^    private $console;$/;"	v
console	thinkphp/mode/console/App.php	/^        $console = new Console('Think Console', '0.1');$/;"	v
consoleDefinitionMerged	thinkphp/library/think/console/command/Command.php	/^        $this->consoleDefinitionMerged = false;$/;"	v
consoleDefinitionMerged	thinkphp/library/think/console/command/Command.php	/^        $this->consoleDefinitionMerged = true;$/;"	v
consoleDefinitionMerged	thinkphp/library/think/console/command/Command.php	/^    private $consoleDefinitionMerged         = false;$/;"	v
consoleDefinitionMergedWithArgs	thinkphp/library/think/console/command/Command.php	/^            $this->consoleDefinitionMergedWithArgs = true;$/;"	v
consoleDefinitionMergedWithArgs	thinkphp/library/think/console/command/Command.php	/^    private $consoleDefinitionMergedWithArgs = false;$/;"	v
consts	thinkphp/library/think/Error.php	/^        $consts = ['THINK_VERSION', 'THINK_PATH', 'LIB_PATH', 'EXTEND_PATH', 'MODE_PATH', 'CORE_PATH', 'TRAIT_PATH', 'APP_PATH', 'RUNTIME_PATH', 'LOG_PATH', 'CACHE_PATH', 'TEMP_PATH', 'MODULE_PATH', 'VIEW_PATH', 'APP_NAMESPACE', 'COMMON_MODULE', 'APP_MULTI_MODULE', 'MODULE_ALIAS', 'MODULE_NAME', 'CONTROLLER_NAME', 'ACTION_NAME', 'MODEL_LAYER', 'VIEW_LAYER', 'CONTROLLER_LAYER', 'APP_DEBUG', 'APP_HOOK', 'ENV_PREFIX', 'IS_API', 'VENDOR_PATH', 'APP_AUTO_RUN', 'APP_MODE', 'REQUEST_METHOD', 'IS_CGI', 'IS_WIN', 'IS_API', 'IS_CLI', 'IS_GET', 'IS_POST', 'IS_PUT', 'IS_AJAX', 'IS_DELETE', 'NOW_TIME', 'LANG_SET', 'EXT', 'DS', '__INFO__', '__EXT__'];$/;"	v
content	thinkphp/library/think/Build.php	/^                            $content = "<?php\\nnamespace {$namespace};\\n\\nclass {$class}\\n{\\n\\n}";$/;"	v
content	thinkphp/library/think/Build.php	/^                            $content = "<?php\\nnamespace {$namespace};\\n\\nuse think\\Model;\\n\\nclass {$class} extends Model\\n{\\n\\n}";$/;"	v
content	thinkphp/library/think/Build.php	/^                            $content = '';$/;"	v
content	thinkphp/library/think/Build.php	/^            $content = file_get_contents(THINK_PATH . 'tpl' . DS . 'default_index.tpl');$/;"	v
content	thinkphp/library/think/Build.php	/^            $content = str_replace(['{$app}', '{$module}', '{layer}', '{$suffix}'], [APP_NAMESPACE, $module ? $module . '\\\\' : '', CONTROLLER_LAYER, CLASS_APPEND_SUFFIX ? ucfirst(CONTROLLER_LAYER) : ''], $content);$/;"	v
content	thinkphp/library/think/Template.php	/^                    $content         = str_replace($match[0], "<!--###literal{$count}###-->", $content);$/;"	v
content	thinkphp/library/think/Template.php	/^                    $content = str_replace($match[0], $parseStr, $content);$/;"	v
content	thinkphp/library/think/Template.php	/^                    $content = str_replace($match[0], $this->literal[$match[1]], $content);$/;"	v
content	thinkphp/library/think/Template.php	/^                    $content = str_replace($replace, $content, file_get_contents($layoutFile));$/;"	v
content	thinkphp/library/think/Template.php	/^                    $content = str_replace($this->config['layout_item'], $content, file_get_contents($layoutFile));$/;"	v
content	thinkphp/library/think/Template.php	/^                $content = file_get_contents($template);$/;"	v
content	thinkphp/library/think/Template.php	/^                $content = str_replace($match[0], $str, $content);$/;"	v
content	thinkphp/library/think/Template.php	/^                $content = str_replace('{__NOLAYOUT__}', '', $content);$/;"	v
content	thinkphp/library/think/Template.php	/^            $content = $extend;$/;"	v
content	thinkphp/library/think/Template.php	/^            $content = ob_get_clean();$/;"	v
content	thinkphp/library/think/Template.php	/^            $content = preg_replace($find, $replace, $content);$/;"	v
content	thinkphp/library/think/Template.php	/^            $content = str_replace($matches[0], '', $content);$/;"	v
content	thinkphp/library/think/Template.php	/^            $content = str_replace('{__NOLAYOUT__}', '', $content);$/;"	v
content	thinkphp/library/think/Template.php	/^        $content = '<?php if (!defined(\\'THINK_PATH\\')) exit(); \/*' . serialize($this->includeFile) . '*\/ ?>' . "\\n" . $content;$/;"	v
content	thinkphp/library/think/Template.php	/^        $content = preg_replace('\/(<\\?(?!php|=|$))\/i', '<?php echo \\'\\\\1\\'; ?>' . "\\n", $content);$/;"	v
content	thinkphp/library/think/Template.php	/^        $content = preg_replace('\/\\?>\\s*<\\?php\\s(?!echo\\b)\/s', '', $content);$/;"	v
content	thinkphp/library/think/Template.php	/^        $content = str_replace(array_keys($replace), array_values($replace), $content);$/;"	v
content	thinkphp/library/think/View.php	/^            $content = strtr($content, $this->replace);$/;"	v
content	thinkphp/library/think/View.php	/^        $content = ob_get_clean();$/;"	v
content	thinkphp/library/think/cache/driver/Db.php	/^                $content = gzuncompress($content);$/;"	v
content	thinkphp/library/think/cache/driver/Db.php	/^            $content = $result['data'];$/;"	v
content	thinkphp/library/think/cache/driver/Db.php	/^            $content = unserialize($content);$/;"	v
content	thinkphp/library/think/cache/driver/File.php	/^                $content = gzuncompress($content);$/;"	v
content	thinkphp/library/think/cache/driver/File.php	/^            $content = substr($content, 20, -3);$/;"	v
content	thinkphp/library/think/cache/driver/File.php	/^            $content = unserialize($content);$/;"	v
content	thinkphp/library/think/cache/driver/File.php	/^        $content = file_get_contents($filename);$/;"	v
content	thinkphp/library/think/cache/driver/Sqlite.php	/^                $content = gzuncompress($content);$/;"	v
content	thinkphp/library/think/cache/driver/Sqlite.php	/^            $content = sqlite_fetch_single($result);$/;"	v
content	thinkphp/library/think/config/driver/Xml.php	/^            $content = simplexml_load_file($config);$/;"	v
content	thinkphp/library/think/config/driver/Xml.php	/^            $content = simplexml_load_string($config);$/;"	v
content	thinkphp/library/think/template/TagLib.php	/^                                $content = substr_replace($content, $begin['str'], $begin['pos'], $begin['len']);$/;"	v
content	thinkphp/library/think/template/TagLib.php	/^                        $content = substr_replace($content, $replace[1], $node['end'][1], strlen($node['end'][0]));$/;"	v
content	thinkphp/library/think/template/TagLib.php	/^                    $content = substr_replace($content, $begin['str'], $begin['pos'], $begin['len']);$/;"	v
content	thinkphp/library/think/template/TagLib.php	/^            $content = preg_replace_callback($regex, function ($matches) use (&$tags, &$_lib) {$/;"	v
content	thinkphp/library/think/template/driver/Sae.php	/^        $content = $this->contents[$filename];$/;"	v
content	thinkphp/library/think/template/driver/Sae.php	/^        $content = time() . $content;$/;"	v
contents	thinkphp/library/think/Error.php	/^            $contents = file($exception->getFile());$/;"	v
contents	thinkphp/library/think/template/driver/Sae.php	/^    private $contents = [];$/;"	v
controller	thinkphp/helper.php	/^function controller($name, $layer = CONTROLLER_LAYER)$/;"	f
controller	thinkphp/library/think/Loader.php	/^    public static function controller($name, $layer = '', $empty = '')$/;"	f
controller	thinkphp/library/think/Route.php	/^                $controller = !empty($path) ? array_pop($path) : null;$/;"	v
controller	thinkphp/library/think/Route.php	/^                $controller = !empty($path) ? array_shift($path) : null;$/;"	v
controller	thinkphp/library/think/Url.php	/^                $controller = empty($path) ? CONTROLLER_NAME : (Config::get('url_controller_convert') ? Loader::parseName(array_pop($path)) : array_pop($path));$/;"	v
controllerName	thinkphp/library/think/App.php	/^        $controllerName = strip_tags($result[1] ?: Config::get('default_controller'));$/;"	v
cookie	thinkphp/helper.php	/^function cookie($name, $value = '', $option = null)$/;"	f
cookie	thinkphp/library/think/Input.php	/^    public static function cookie($name = '', $default = null, $filter = null, $merge = false)$/;"	f
count	thinkphp/library/think/Template.php	/^                $count = count($this->literal);$/;"	v
count	thinkphp/library/think/console/helper/Debug.php	/^    private $count   = -1;$/;"	v
count	thinkphp/library/think/db/Query.php	/^                $count     = count($fields);$/;"	v
count	thinkphp/library/think/db/Query.php	/^    public function count($field = '*')$/;"	f
create	thinkphp/library/think/Model.php	/^    public static function create($data = [])$/;"	f
create	thinkphp/library/think/cache/driver/Secache.php	/^    public function create()$/;"	f
create	thinkphp/library/think/process/Builder.php	/^    public static function create(array $arguments = [])$/;"	f
create	thinkphp/library/think/process/pipes/Unix.php	/^    public static function create(Process $process, $input)$/;"	f
create	thinkphp/library/think/process/pipes/Windows.php	/^    public static function create(Process $process, $input)$/;"	f
createDefinition	thinkphp/library/think/console/command/Lists.php	/^    private function createDefinition()$/;"	f
createStyleFromString	thinkphp/library/think/console/output/Formatter.php	/^    private function createStyleFromString($string)$/;"	f
crossDomain	thinkphp/library/think/controller/Hprose.php	/^    protected $crossDomain     = false;$/;"	v
css	thinkphp/library/think/log/driver/Socket.php	/^    protected $css = [$/;"	v
curBytes	thinkphp/library/think/cache/driver/Secache.php	/^        $curBytes = $totalBytes - $freeBytes;$/;"	v
currentArguments	thinkphp/library/think/console/command/Command.php	/^            $currentArguments = $this->definition->getArguments();$/;"	v
currentModel	thinkphp/library/think/db/Query.php	/^        $currentModel = $this->options['model'];$/;"	v
currentScene	thinkphp/library/think/Validate.php	/^            $this->currentScene = $name;$/;"	v
currentScene	thinkphp/library/think/Validate.php	/^    protected $currentScene = null;$/;"	v
current_uri	thinkphp/library/think/log/driver/File.php	/^            $current_uri = "cmd:" . implode(' ', $_SERVER['argv']);$/;"	v
current_uri	thinkphp/library/think/log/driver/File.php	/^            $current_uri = $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];$/;"	v
current_uri	thinkphp/library/think/log/driver/Sae.php	/^            $current_uri = "cmd:" . implode(' ', $_SERVER['argv']);$/;"	v
current_uri	thinkphp/library/think/log/driver/Sae.php	/^            $current_uri = $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];$/;"	v
current_uri	thinkphp/library/think/log/driver/Socket.php	/^            $current_uri = "cmd:" . implode(' ', $_SERVER['argv']);$/;"	v
current_uri	thinkphp/library/think/log/driver/Socket.php	/^            $current_uri = $_SERVER['HTTP_HOST'] . $_SERVER['REQUEST_URI'];$/;"	v
cwd	thinkphp/library/think/Process.php	/^            $this->cwd = getcwd();$/;"	v
cwd	thinkphp/library/think/Process.php	/^        $this->cwd         = $cwd;$/;"	v
cwd	thinkphp/library/think/Process.php	/^        $this->cwd = $cwd;$/;"	v
cwd	thinkphp/library/think/Process.php	/^    private $cwd;$/;"	v
cwd	thinkphp/library/think/process/Builder.php	/^        $this->cwd = $cwd;$/;"	v
cwd	thinkphp/library/think/process/Builder.php	/^    private $cwd;$/;"	v
data	application/index/controller/Api.php	/^        $data = ['name'=>'thinkphp','url'=>'thinkphp.cn'];$/;"	v
data	application/index/controller/Api.php	/^        $data = array('name'=>'thinkphp','url'=>'thinkphp.cn');$/;"	v
data	thinkphp/library/think/App.php	/^                $data   = $method->invokeArgs($instance, [$action, '']);$/;"	v
data	thinkphp/library/think/App.php	/^                $data = Loader::action(self::$dispatch['controller'], self::$dispatch['params']);$/;"	v
data	thinkphp/library/think/App.php	/^                $data = self::invokeFunction(self::$dispatch['function'], self::$dispatch['params']);$/;"	v
data	thinkphp/library/think/App.php	/^                $data = self::invokeMethod(self::$dispatch['method'], self::$dispatch['params']);$/;"	v
data	thinkphp/library/think/App.php	/^                $data = self::module(self::$dispatch['module'], $config);$/;"	v
data	thinkphp/library/think/App.php	/^            $data = self::invokeMethod($call);$/;"	v
data	thinkphp/library/think/Error.php	/^            $data = $exception->getData();$/;"	v
data	thinkphp/library/think/Error.php	/^            $data = [$/;"	v
data	thinkphp/library/think/Error.php	/^        $data = [];$/;"	v
data	thinkphp/library/think/Exception.php	/^    protected $data = [];$/;"	v
data	thinkphp/library/think/Input.php	/^                        $data = $data[$val];$/;"	v
data	thinkphp/library/think/Input.php	/^                $data = $data[$val];$/;"	v
data	thinkphp/library/think/Input.php	/^                $data = (array) $data;$/;"	v
data	thinkphp/library/think/Input.php	/^                $data = (boolean) $data;$/;"	v
data	thinkphp/library/think/Input.php	/^                $data = (float) $data;$/;"	v
data	thinkphp/library/think/Input.php	/^                $data = (int) $data;$/;"	v
data	thinkphp/library/think/Input.php	/^                $data = (string) $data;$/;"	v
data	thinkphp/library/think/Input.php	/^            $data = $default;$/;"	v
data	thinkphp/library/think/Input.php	/^            $data = $input;$/;"	v
data	thinkphp/library/think/Input.php	/^    public static function data($input, $name = '', $default = null, $filter = null, $merge = false)$/;"	f
data	thinkphp/library/think/Model.php	/^                $data = [];$/;"	v
data	thinkphp/library/think/Model.php	/^            $data   = [];$/;"	v
data	thinkphp/library/think/Model.php	/^            $data = [];$/;"	v
data	thinkphp/library/think/Model.php	/^            $data = get_object_vars($data);$/;"	v
data	thinkphp/library/think/Model.php	/^            $this->data = $data;$/;"	v
data	thinkphp/library/think/Model.php	/^            $this->data = get_object_vars($data);$/;"	v
data	thinkphp/library/think/Model.php	/^        $this->data = $data;$/;"	v
data	thinkphp/library/think/Model.php	/^    protected $data = [];$/;"	v
data	thinkphp/library/think/Model.php	/^    public function data($data = '')$/;"	f
data	thinkphp/library/think/Process.php	/^        $data = $this->getErrorOutput();$/;"	v
data	thinkphp/library/think/Process.php	/^        $data = $this->getOutput();$/;"	v
data	thinkphp/library/think/Response.php	/^                    $data    = $handler . '(' . json_encode($data, JSON_UNESCAPED_UNICODE) . ');';$/;"	v
data	thinkphp/library/think/Response.php	/^                    $data = json_encode($data, JSON_UNESCAPED_UNICODE);$/;"	v
data	thinkphp/library/think/Response.php	/^            $data = call_user_func_array(self::$transform, [$data]);$/;"	v
data	thinkphp/library/think/Response.php	/^        $data = $data ?: self::$data;$/;"	v
data	thinkphp/library/think/Response.php	/^    protected static $data = '';$/;"	v
data	thinkphp/library/think/Response.php	/^    public static function data($data)$/;"	f
data	thinkphp/library/think/Template.php	/^                    $data = $data[$val];$/;"	v
data	thinkphp/library/think/Template.php	/^                    $data = null;$/;"	v
data	thinkphp/library/think/Template.php	/^            $data = $this->data;$/;"	v
data	thinkphp/library/think/Template.php	/^            $this->data = $vars;$/;"	v
data	thinkphp/library/think/Template.php	/^            $this->data = array_merge($this->data, $name);$/;"	v
data	thinkphp/library/think/Template.php	/^    protected $data = [];$/;"	v
data	thinkphp/library/think/View.php	/^            $this->data = array_merge($this->data, $name);$/;"	v
data	thinkphp/library/think/View.php	/^    protected $data = [];$/;"	v
data	thinkphp/library/think/cache/driver/Db.php	/^            $data = gzcompress($data, 3);$/;"	v
data	thinkphp/library/think/cache/driver/Db.php	/^        $data = serialize($value);$/;"	v
data	thinkphp/library/think/cache/driver/File.php	/^            $data = gzcompress($data, 3);$/;"	v
data	thinkphp/library/think/cache/driver/File.php	/^        $data     = serialize($value);$/;"	v
data	thinkphp/library/think/cache/driver/File.php	/^        $data   = "<?php\\n\/\/" . sprintf('%012d', $expire) . $data . "\\n?>";$/;"	v
data	thinkphp/library/think/cache/driver/Secache.php	/^            $data   = fread($this->_rs, $info['size']);$/;"	v
data	thinkphp/library/think/cache/driver/Secache.php	/^            $data = serialize($value);$/;"	v
data	thinkphp/library/think/db/Builder.php	/^            $data = is_array($value) ? $value : explode(',', $value);$/;"	v
data	thinkphp/library/think/db/Builder.php	/^        $data  = $this->parseData($data, $options);$/;"	v
data	thinkphp/library/think/db/Builder.php	/^        $data = $this->parseData($data, $options);$/;"	v
data	thinkphp/library/think/db/Query.php	/^                $data = new $options['model']($data);$/;"	v
data	thinkphp/library/think/db/Query.php	/^            $data = $field;$/;"	v
data	thinkphp/library/think/db/Query.php	/^            $data = $result[0];$/;"	v
data	thinkphp/library/think/db/Query.php	/^            $data = false;$/;"	v
data	thinkphp/library/think/model/Merge.php	/^                        $data = $this->parseData($name, $this->data, true);$/;"	v
data	thinkphp/library/think/model/Merge.php	/^                    $data = $this->parseData($name, $this->data);$/;"	v
data	thinkphp/library/think/model/Merge.php	/^        $data = $this->parseData($this->name, $this->data);$/;"	v
data	thinkphp/library/think/model/Pivot.php	/^            $this->data = $data;$/;"	v
data	thinkphp/library/think/model/Pivot.php	/^            $this->data = get_object_vars($data);$/;"	v
data	thinkphp/library/think/model/Relation.php	/^                        $data = $this->eagerlyManyToMany($model, ['pivot.' . $foreignKey => $pk], $relation, $subRelation);$/;"	v
data	thinkphp/library/think/model/Relation.php	/^                        $data = $this->eagerlyManyToMany($model, ['pivot.' . $foreignKey => ['in', $range]], $relation, $subRelation);$/;"	v
data	thinkphp/library/think/model/Relation.php	/^                        $data = $this->eagerlyOneToMany($model, [$foreignKey => $result->$localKey], $relation, $subRelation, $closure);$/;"	v
data	thinkphp/library/think/model/Relation.php	/^                        $data = $this->eagerlyOneToMany($model, [$foreignKey => ['in', $range]], $relation, $subRelation, $closure);$/;"	v
data	thinkphp/library/think/model/Relation.php	/^        $data = [];$/;"	v
data	thinkphp/library/think/process/pipes/Unix.php	/^            $data = '';$/;"	v
data	thinkphp/library/think/process/pipes/Windows.php	/^            $data     = '';$/;"	v
data	thinkphp/library/think/process/pipes/Windows.php	/^            $data = '';$/;"	v
data_base_pos	thinkphp/library/think/cache/driver/Secache.php	/^    public $data_base_pos    = 262588; \/\/40+20+24*16+16*16*16*16*4;$/;"	v
dataoffset	thinkphp/library/think/cache/driver/Secache.php	/^                    $dataoffset = $info['data'];$/;"	v
dataread	thinkphp/library/think/process/pipes/Windows.php	/^            $dataread = null;$/;"	v
dateFormat	thinkphp/library/think/Model.php	/^    protected $dateFormat = 'Y-m-d H:i:s';$/;"	v
dateFormat	thinkphp/library/think/Validate.php	/^    protected function dateFormat($value, $rule)$/;"	f
db	thinkphp/helper.php	/^function db($name = '', $config = [])$/;"	f
db	thinkphp/library/think/Loader.php	/^    public static function db($config = [])$/;"	f
db	thinkphp/library/think/Model.php	/^        $db = self::db();$/;"	v
db	thinkphp/library/think/Model.php	/^    public static function db()$/;"	f
db	thinkphp/library/think/Validate.php	/^        $db    = Db::name($rule[0]);$/;"	v
db	thinkphp/library/think/model/Relation.php	/^            $db    = $model->db();$/;"	v
debug	thinkphp/helper.php	/^function debug($start, $end = '', $dec = 6)$/;"	f
debug	thinkphp/library/think/controller/Hprose.php	/^    protected $debug           = false;$/;"	v
debug	thinkphp/library/think/controller/Rpc.php	/^    protected $debug           = false;$/;"	v
debug	thinkphp/library/think/db/Connection.php	/^    protected function debug($start)$/;"	f
debug	thinkphp/library/think/log/driver/Trace.php	/^        $debug = [];$/;"	v
debug	thinkphp/start.php	/^    $debug = getenv(ENV_PREFIX . 'APP_DEBUG');$/;"	v
decorated	thinkphp/library/think/console/output/Formatter.php	/^        $this->decorated = (bool)$decorated;$/;"	v
decorated	thinkphp/library/think/console/output/Formatter.php	/^    private $decorated = false;$/;"	v
decorated	thinkphp/library/think/console/output/Stream.php	/^        $decorated = $this->hasColorSupport();$/;"	v
default	thinkphp/library/think/Input.php	/^        $default = array_pop($filters);$/;"	v
default	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^            $default = '';$/;"	v
default	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^            $default = sprintf('<comment> [default: %s]<\/comment>', $this->formatDefaultValue($argument->getDefault()));$/;"	v
default	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^            $default = sprintf('<comment> [default: %s]<\/comment>', $this->formatDefaultValue($option->getDefault()));$/;"	v
default	thinkphp/library/think/console/helper/question/Confirmation.php	/^        $default = $this->getDefault();$/;"	v
default	thinkphp/library/think/console/helper/question/Question.php	/^        $this->default  = $default;$/;"	v
default	thinkphp/library/think/console/helper/question/Question.php	/^    private $default;$/;"	v
default	thinkphp/library/think/console/input/Argument.php	/^                $default = [];$/;"	v
default	thinkphp/library/think/console/input/Argument.php	/^        $this->default = $default;$/;"	v
default	thinkphp/library/think/console/input/Argument.php	/^    private $default;$/;"	v
default	thinkphp/library/think/console/input/Option.php	/^                $default = [];$/;"	v
default	thinkphp/library/think/console/input/Option.php	/^        $this->default = $this->acceptValue() ? $default : false;$/;"	v
default	thinkphp/library/think/console/input/Option.php	/^    private $default;$/;"	v
defaultCommand	thinkphp/library/think/Console.php	/^        $this->defaultCommand = $commandName;$/;"	v
defaultCommand	thinkphp/library/think/Console.php	/^        $this->defaultCommand = 'list';$/;"	v
defaultCommand	thinkphp/library/think/Console.php	/^    private $defaultCommand;$/;"	v
defaultCommands	thinkphp/library/think/Console.php	/^        $defaultCommands = [];$/;"	v
defaultCommands	thinkphp/library/think/Console.php	/^    private static $defaultCommands = [$/;"	v
definition	thinkphp/library/think/Console.php	/^        $this->definition     = $this->getDefaultInputDefinition();$/;"	v
definition	thinkphp/library/think/Console.php	/^        $this->definition = $definition;$/;"	v
definition	thinkphp/library/think/Console.php	/^    private $definition;$/;"	v
definition	thinkphp/library/think/console/Input.php	/^        $this->definition = $definition;$/;"	v
definition	thinkphp/library/think/console/Input.php	/^        $this->definition = new Definition();$/;"	v
definition	thinkphp/library/think/console/Input.php	/^    protected $definition;$/;"	v
definition	thinkphp/library/think/console/command/Command.php	/^            $this->definition = $definition;$/;"	v
definition	thinkphp/library/think/console/command/Command.php	/^        $this->definition = new Definition();$/;"	v
definition	thinkphp/library/think/console/command/Command.php	/^    private $definition;$/;"	v
definition	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^        $definition = $command->getNativeDefinition();$/;"	v
delete	thinkphp/library/think/Cookie.php	/^    public static function delete($name, $prefix = null)$/;"	f
delete	thinkphp/library/think/Input.php	/^    public static function delete($name = '', $default = null, $filter = null, $merge = false)$/;"	f
delete	thinkphp/library/think/Model.php	/^    public function delete()$/;"	f
delete	thinkphp/library/think/Route.php	/^    public static function delete($rule, $route = '', $option = [], $pattern = [])$/;"	f
delete	thinkphp/library/think/Session.php	/^    public static function delete($name, $prefix = null)$/;"	f
delete	thinkphp/library/think/cache/driver/Secache.php	/^    public function delete($key, $pos = false)$/;"	f
delete	thinkphp/library/think/db/Builder.php	/^    public function delete($options)$/;"	f
delete	thinkphp/library/think/db/Query.php	/^    public function delete($data = [])$/;"	f
delete	thinkphp/library/think/model/Merge.php	/^    public function delete()$/;"	f
deleteSql	thinkphp/library/think/db/Builder.php	/^    protected $deleteSql    = 'DELETE FROM %TABLE% %USING% %JOIN% %WHERE% %ORDER%%LIMIT% %LOCK%%COMMENT%';$/;"	v
denyIp	thinkphp/library/think/Validate.php	/^    protected function denyIp($value, $rule)$/;"	f
depr	thinkphp/library/think/App.php	/^        $depr   = $config['pathinfo_depr'];$/;"	v
depr	thinkphp/library/think/Input.php	/^            $depr  = Config::get('pathinfo_depr');$/;"	v
depr	thinkphp/library/think/Url.php	/^        $depr = Config::get('pathinfo_depr');$/;"	v
depr	thinkphp/library/think/view/driver/Php.php	/^        $depr     = $this->config['view_depr'];$/;"	v
depr	thinkphp/library/think/view/driver/Think.php	/^        $depr     = $this->config['view_depr'];$/;"	v
describe	thinkphp/library/think/console/helper/Descriptor.php	/^    public function describe(Output $output, $object, array $options = [])$/;"	f
describe	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^    public function describe(Output $output, $object, array $options = [])$/;"	f
describeCommand	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^    protected function describeCommand(Command $command, array $options = [])$/;"	f
describeConsole	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^    protected function describeConsole(Console $console, array $options = [])$/;"	f
describeInputArgument	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^    protected function describeInputArgument(InputArgument $argument, array $options = [])$/;"	f
describeInputDefinition	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^    protected function describeInputDefinition(InputDefinition $definition, array $options = [])$/;"	f
describeInputOption	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^    protected function describeInputOption(InputOption $option, array $options = [])$/;"	f
describedNamespace	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^        $describedNamespace = isset($options['namespace']) ? $options['namespace'] : null;$/;"	v
description	thinkphp/library/think/console/command/Command.php	/^        $this->description = $description;$/;"	v
description	thinkphp/library/think/console/command/Command.php	/^    private $description;$/;"	v
description	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^        $description        = new ConsoleDescription($console, $describedNamespace);$/;"	v
description	thinkphp/library/think/console/input/Argument.php	/^        $this->description = $description;$/;"	v
description	thinkphp/library/think/console/input/Argument.php	/^    private $description;$/;"	v
description	thinkphp/library/think/console/input/Option.php	/^        $this->description = $description;$/;"	v
description	thinkphp/library/think/console/input/Option.php	/^    private $description;$/;"	v
descriptor	thinkphp/library/think/console/helper/Descriptor.php	/^        $this->descriptor = new OutputDescriptor();$/;"	v
descriptor	thinkphp/library/think/console/helper/Descriptor.php	/^    private $descriptor;$/;"	v
descriptors	thinkphp/library/think/Process.php	/^            $descriptors = array_merge($descriptors, [['pipe', 'w']]);$/;"	v
descriptors	thinkphp/library/think/Process.php	/^        $descriptors     = $this->getDescriptors();$/;"	v
descriptors	thinkphp/library/think/Process.php	/^        $descriptors = $this->processPipes->getDescriptors($this->outputDisabled);$/;"	v
descriptorspec	thinkphp/library/think/Console.php	/^        $descriptorspec = [1 => ['pipe', 'w'], 2 => ['pipe', 'w']];$/;"	v
destination	thinkphp/library/think/log/driver/File.php	/^        $destination = $this->config['path'] . date('y_m_d') . '.log';$/;"	v
destroy	thinkphp/library/think/Model.php	/^    public static function destroy($data)$/;"	f
destroy	thinkphp/library/think/Session.php	/^    public static function destroy()$/;"	f
destroy	thinkphp/library/think/session/driver/Memcache.php	/^    public function destroy($sessID)$/;"	f
destroy	thinkphp/library/think/session/driver/Memcached.php	/^    public function destroy($sessID)$/;"	f
destroy	thinkphp/library/think/session/driver/Redis.php	/^    public function destroy($sessID)$/;"	f
detach	thinkphp/library/think/model/Relation.php	/^    public function detach($data, $relationDel = false)$/;"	f
detect	thinkphp/library/think/Lang.php	/^    public static function detect()$/;"	f
dfile_cur_pos	thinkphp/library/think/cache/driver/Secache.php	/^    public $dfile_cur_pos = 44; \/\/id 计数器节点地址$/;"	v
dimensions	thinkphp/library/think/Console.php	/^        $dimensions = $this->getTerminalDimensions();$/;"	v
dir	thinkphp/library/think/cache/driver/File.php	/^            $dir = '';$/;"	v
dir	thinkphp/library/think/cache/driver/Lite.php	/^        $dir = dirname($filename);$/;"	v
dir	thinkphp/library/think/template/driver/File.php	/^        $dir = dirname($cacheFile);$/;"	v
disableOutput	thinkphp/library/think/Process.php	/^    public function disableOutput()$/;"	f
disableOutput	thinkphp/library/think/process/Builder.php	/^    public function disableOutput()$/;"	f
disableOutput	thinkphp/library/think/process/pipes/Unix.php	/^        $this->disableOutput = (bool)$disableOutput;$/;"	v
disableOutput	thinkphp/library/think/process/pipes/Unix.php	/^    private $disableOutput;$/;"	v
disableOutput	thinkphp/library/think/process/pipes/Windows.php	/^        $this->disableOutput = (bool)$disableOutput;$/;"	v
disableOutput	thinkphp/library/think/process/pipes/Windows.php	/^    private $disableOutput;$/;"	v
dispatch	thinkphp/library/think/App.php	/^    private static $dispatch = [];$/;"	v
dispatch	thinkphp/library/think/App.php	/^    public static function dispatch($dispatch)$/;"	f
display	thinkphp/library/think/Controller.php	/^    public function display($content = '', $vars = [], $config = [])$/;"	f
display	thinkphp/library/think/Template.php	/^    public function display($content, $vars = [], $config = [])$/;"	f
display	thinkphp/library/think/View.php	/^    public function display($content, $vars = [], $config = [])$/;"	f
display	thinkphp/library/think/view/driver/Php.php	/^    public function display($content, $data = [])$/;"	f
display	thinkphp/library/think/view/driver/Think.php	/^    public function display($template, $data = [], $config = [])$/;"	f
distinct	thinkphp/library/think/db/Query.php	/^    public function distinct($distinct)$/;"	f
doAsk	thinkphp/library/think/console/helper/Question.php	/^    private function doAsk(Output $output, OutputQuestion $question)$/;"	f
doRun	thinkphp/library/think/Console.php	/^    public function doRun(Input $input, Output $output)$/;"	f
doRunCommand	thinkphp/library/think/Console.php	/^    protected function doRunCommand(Command $command, Input $input, Output $output)$/;"	f
doSignal	thinkphp/library/think/Process.php	/^    private function doSignal($signal, $throwException)$/;"	f
doWrite	thinkphp/library/think/console/output/Stream.php	/^    protected function doWrite($message, $newline)$/;"	f
domain	thinkphp/library/think/Route.php	/^                    $domain = explode('.', $_SERVER['HTTP_HOST'], -2);$/;"	v
domain	thinkphp/library/think/Route.php	/^                    $domain = explode('.', rtrim(stristr($_SERVER['HTTP_HOST'], $rootDomain, true), '.'));$/;"	v
domain	thinkphp/library/think/Route.php	/^    private static $domain = [];$/;"	v
domain	thinkphp/library/think/Route.php	/^    public static function domain($domain = '', $rule = '')$/;"	f
domain	thinkphp/library/think/Url.php	/^                            $domain = $key;$/;"	v
domain	thinkphp/library/think/Url.php	/^                            $domain = str_replace('*',strstr($domain,'.',true),$key);$/;"	v
domain	thinkphp/library/think/Url.php	/^                $domain = $_SERVER['HTTP_HOST'];$/;"	v
domain	thinkphp/library/think/Url.php	/^            $domain = '';$/;"	v
domain	thinkphp/library/think/Url.php	/^            $domain = (self::isSsl() ? 'https:\/\/' : 'http:\/\/') . $domain;$/;"	v
domain	thinkphp/library/think/Url.php	/^            $domain = true;$/;"	v
domain	thinkphp/library/think/Url.php	/^        $domain = self::parseDomain($url, $domain);$/;"	v
domain	thinkphp/library/think/template/taglib/Cx.php	/^        $domain = isset($tag['domain']) ? $tag['domain'] : 'false';$/;"	v
domain2	thinkphp/library/think/Route.php	/^                    $domain2         = array_pop($domain);$/;"	v
domain3	thinkphp/library/think/Route.php	/^                        $domain3 = array_pop($domain);$/;"	v
driver	thinkphp/library/think/Log.php	/^    protected static $driver = null;$/;"	v
driver	thinkphp/library/think/db/Query.php	/^        $driver         = $this->driver;$/;"	v
driver	thinkphp/library/think/db/Query.php	/^        $this->driver     = $this->connection->getDriverName();$/;"	v
driver	thinkphp/library/think/db/Query.php	/^    protected $driver;$/;"	v
ds_offset	thinkphp/library/think/cache/driver/Secache.php	/^            $ds_offset = $this->_get_dcur_pos();$/;"	v
ds_offset	thinkphp/library/think/cache/driver/Secache.php	/^            $ds_offset = $this->data_base_pos;$/;"	v
dsn	thinkphp/library/think/Db.php	/^        $dsn = [$/;"	v
dsn	thinkphp/library/think/db/connector/Mysql.php	/^        $dsn = 'mysql:dbname=' . $config['database'] . ';host=' . $config['hostname'];$/;"	v
dsn	thinkphp/library/think/db/connector/Oracle.php	/^        $dsn = 'oci:dbname=';$/;"	v
dsn	thinkphp/library/think/db/connector/Pgsql.php	/^        $dsn = 'pgsql:dbname=' . $config['database'] . ';host=' . $config['hostname'];$/;"	v
dsn	thinkphp/library/think/db/connector/Sqlite.php	/^        $dsn = 'sqlite:' . $config['database'];$/;"	v
dsn	thinkphp/library/think/db/connector/Sqlsrv.php	/^        $dsn = 'sqlsrv:Database=' . $config['database'] . ';Server=' . $config['hostname'];$/;"	v
dump	thinkphp/helper.php	/^function dump($var, $echo = true, $label = null)$/;"	f
dump	thinkphp/library/think/Debug.php	/^    public static function dump($var, $echo = true, $label = null)$/;"	f
e	thinkphp/helper.php	/^    $e = $exception ?: '\\think\\Exception';$/;"	v
e	thinkphp/library/think/process/pipes/Unix.php	/^        $e = null;$/;"	v
e	thinkphp/library/think/process/pipes/Windows.php	/^        $e = null;$/;"	v
eagerlyManyToMany	thinkphp/library/think/model/Relation.php	/^    protected function eagerlyManyToMany($model, $where, $relation, $subRelation = '')$/;"	f
eagerlyOneToMany	thinkphp/library/think/model/Relation.php	/^    protected function eagerlyOneToMany($model, $where, $relation, $subRelation = '', $closure = false)$/;"	f
eagerlyResult	thinkphp/library/think/Model.php	/^    public function eagerlyResult($result, $relation)$/;"	f
eagerlyResult	thinkphp/library/think/model/Relation.php	/^    public function eagerlyResult($result, $relation)$/;"	f
eagerlyResultSet	thinkphp/library/think/Model.php	/^    public function eagerlyResultSet($resultSet, $relation)$/;"	f
eagerlyResultSet	thinkphp/library/think/model/Relation.php	/^    public function eagerlyResultSet($resultSet, $relation)$/;"	f
egt	thinkphp/library/think/Validate.php	/^    protected function egt($value, $rule)$/;"	f
element	thinkphp/library/think/console/input/Definition.php	/^                $element = '[' . $element . ']';$/;"	v
element	thinkphp/library/think/console/input/Definition.php	/^            $element = '<' . $argument->getName() . '>';$/;"	v
elements	thinkphp/library/think/console/input/Definition.php	/^        $elements = [];$/;"	v
elt	thinkphp/library/think/Validate.php	/^    protected function elt($value, $rule)$/;"	f
empty	thinkphp/library/think/template/taglib/Cx.php	/^        $empty  = isset($tag['empty']) ? $tag['empty'] : '';$/;"	v
emptyStyle	thinkphp/library/think/console/output/formatter/Stack.php	/^        $this->emptyStyle = $emptyStyle ?: new Style();$/;"	v
emptyStyle	thinkphp/library/think/console/output/formatter/Stack.php	/^        $this->emptyStyle = $emptyStyle;$/;"	v
emptyStyle	thinkphp/library/think/console/output/formatter/Stack.php	/^    private $emptyStyle;$/;"	v
enableOutput	thinkphp/library/think/Process.php	/^    public function enableOutput()$/;"	f
enableOutput	thinkphp/library/think/process/Builder.php	/^    public function enableOutput()$/;"	f
end	thinkphp/library/think/Template.php	/^            $end    = $this->config['taglib_end'];$/;"	v
end	thinkphp/library/think/Template.php	/^            $end   = $this->config['tpl_end'];$/;"	v
end	thinkphp/library/think/Validate.php	/^            $end = strtotime($end);$/;"	v
end	thinkphp/library/think/db/Query.php	/^            $end       = end($resultSet);$/;"	v
end	thinkphp/library/think/template/TagLib.php	/^        $end     = $this->tpl->config('taglib_end');$/;"	v
end	thinkphp/library/think/template/taglib/Cx.php	/^                    $end = $value;$/;"	v
end	thinkphp/library/think/template/taglib/Cx.php	/^        $end        = 0;$/;"	v
endStr	thinkphp/library/think/template/taglib/Cx.php	/^            $endStr = '<?php endif; ?>';$/;"	v
endStr	thinkphp/library/think/template/taglib/Cx.php	/^        $endStr   = '';$/;"	v
engine	thinkphp/library/think/Controller.php	/^    public function engine($engine)$/;"	f
engine	thinkphp/library/think/View.php	/^        $this->engine = new $class($options);$/;"	v
engine	thinkphp/library/think/View.php	/^    public $engine;$/;"	v
engine	thinkphp/library/think/View.php	/^    public function engine($options = [])$/;"	f
enhanceSigchildCompatibility	thinkphp/library/think/Process.php	/^        $this->enhanceSigchildCompatibility = '\\\\' !== DS && $this->isSigchildEnabled();$/;"	v
enhanceSigchildCompatibility	thinkphp/library/think/Process.php	/^        $this->enhanceSigchildCompatibility = (bool)$enhance;$/;"	v
enhanceSigchildCompatibility	thinkphp/library/think/Process.php	/^    private $enhanceSigchildCompatibility;$/;"	v
enhanceWindowsCompatibility	thinkphp/library/think/Process.php	/^        $this->enhanceWindowsCompatibility  = true;$/;"	v
enhanceWindowsCompatibility	thinkphp/library/think/Process.php	/^        $this->enhanceWindowsCompatibility = (bool)$enhance;$/;"	v
enhanceWindowsCompatibility	thinkphp/library/think/Process.php	/^    private $enhanceWindowsCompatibility  = true;$/;"	v
env	thinkphp/library/think/Input.php	/^    public static function env($name = '', $default = null, $filter = null, $merge = false)$/;"	f
env	thinkphp/library/think/Process.php	/^        $env = array_filter($env, function ($value) {$/;"	v
env	thinkphp/library/think/Process.php	/^        $this->env = [];$/;"	v
env	thinkphp/library/think/Process.php	/^    private $env;$/;"	v
env	thinkphp/library/think/process/Builder.php	/^            $env = $this->env;$/;"	v
env	thinkphp/library/think/process/Builder.php	/^            $env = array_replace($_ENV, $_SERVER, $this->env);$/;"	v
env	thinkphp/library/think/process/Builder.php	/^        $this->env = array_replace($this->env, $variables);$/;"	v
env	thinkphp/library/think/process/Builder.php	/^    private $env            = null;$/;"	v
env	thinkphp/start.php	/^    $env = include ROOT_PATH . 'env' . EXT;$/;"	v
eq	thinkphp/library/think/Validate.php	/^    protected function eq($value, $rule)$/;"	f
equals	thinkphp/library/think/console/input/Option.php	/^    public function equals(Option $option)$/;"	f
error	thinkphp/library/think/Model.php	/^                $this->error = $validate->getError();$/;"	v
error	thinkphp/library/think/Model.php	/^    protected $error;$/;"	v
error	thinkphp/library/think/Response.php	/^    public static function error($msg = '', $data = '', $url = null, $wait = 3)$/;"	f
error	thinkphp/library/think/UploadFile.php	/^            $this->error = "目录 {$savepath} 创建失败！";$/;"	v
error	thinkphp/library/think/UploadFile.php	/^            $this->error = '存在同名文件' . $path . $savename;$/;"	v
error	thinkphp/library/think/UploadFile.php	/^            $this->error = '文件上传保存错误！';$/;"	v
error	thinkphp/library/think/UploadFile.php	/^    private $error = ''; \/\/上传错误信息$/;"	v
error	thinkphp/library/think/Validate.php	/^                        $this->error = array_merge($this->error, $result);$/;"	v
error	thinkphp/library/think/Validate.php	/^                    $this->error = $result;$/;"	v
error	thinkphp/library/think/Validate.php	/^        $this->error = [];$/;"	v
error	thinkphp/library/think/Validate.php	/^    protected $error = [];$/;"	v
error	thinkphp/library/think/console/helper/Question.php	/^        $error    = null;$/;"	v
error	thinkphp/library/think/db/Connection.php	/^            $error = $error[1] . ':' . $error[2];$/;"	v
error	thinkphp/library/think/db/Connection.php	/^            $error = $this->PDOStatement->errorInfo();$/;"	v
error	thinkphp/library/think/db/Connection.php	/^            $error = '';$/;"	v
error	thinkphp/library/think/db/Connection.php	/^    protected $error = '';$/;"	v
error	thinkphp/library/think/exception/PDOException.php	/^        $error = $exception->errorInfo;$/;"	v
error	thinkphp/library/think/process/exception/Faild.php	/^        $error = sprintf('The command "%s" failed.' . "\\nExit Code: %s(%s)", $process->getCommandLine(), $process->getExitCode(), $process->getExitCodeText());$/;"	v
error	thinkphp/library/traits/controller/Jump.php	/^    public function error($msg = '', $url = null, $data = '', $wait = 3)$/;"	f
errorMessage	thinkphp/library/think/console/helper/question/Choice.php	/^        $errorMessage = $this->errorMessage;$/;"	v
errorMessage	thinkphp/library/think/console/helper/question/Choice.php	/^        $this->errorMessage = $errorMessage;$/;"	v
errorMessage	thinkphp/library/think/console/helper/question/Choice.php	/^    private $errorMessage = 'Value "%s" is invalid';$/;"	v
error_page	thinkphp/library/think/Error.php	/^        $error_page = Config::get('error_page');$/;"	v
escape	thinkphp/library/think/console/output/Formatter.php	/^    public static function escape($text)$/;"	f
escapeArgument	thinkphp/library/think/process/Utils.php	/^    public static function escapeArgument($argument)$/;"	f
escapeString	thinkphp/library/think/console/helper/Process.php	/^    private function escapeString($str)$/;"	f
escapeToken	thinkphp/library/think/console/Input.php	/^    public function escapeToken($token)$/;"	f
escapedArgument	thinkphp/library/think/process/Utils.php	/^            $escapedArgument = '"' . $escapedArgument . '"';$/;"	v
escapedArgument	thinkphp/library/think/process/Utils.php	/^        $escapedArgument = '';$/;"	v
event	thinkphp/library/think/Model.php	/^    protected static $event = [];$/;"	v
event	thinkphp/library/think/Model.php	/^    public static function event($event, $callback, $override = false)$/;"	f
event	thinkphp/library/think/db/Connection.php	/^    protected static $event = [];$/;"	v
exact	thinkphp/library/think/Console.php	/^        $exact = in_array($name, $commands, true);$/;"	v
exact	thinkphp/library/think/Console.php	/^        $exact = in_array($namespace, $namespaces, true);$/;"	v
exception	thinkphp/helper.php	/^function exception($msg, $code = 0, $exception = '')$/;"	f
exception	thinkphp/library/think/Error.php	/^            $exception = new ErrorException($/;"	v
exe	thinkphp/library/think/console/helper/Question.php	/^                $exe = $tmpExe;$/;"	v
exe	thinkphp/library/think/console/helper/Question.php	/^            $exe = __DIR__ . '\/..\/bin\/hiddeninput.exe';$/;"	v
exec	thinkphp/library/think/Hook.php	/^    public static function exec($class, $tag = '', &$params = null)$/;"	f
execute	thinkphp/library/think/console/command/Build.php	/^    protected function execute(Input $input, Output $output)$/;"	f
execute	thinkphp/library/think/console/command/Command.php	/^    protected function execute(Input $input, Output $output)$/;"	f
execute	thinkphp/library/think/console/command/Help.php	/^    protected function execute(Input $input, Output $output)$/;"	f
execute	thinkphp/library/think/console/command/Lists.php	/^    protected function execute(Input $input, Output $output)$/;"	f
execute	thinkphp/library/think/db/Connection.php	/^    public function execute($sql, $bind = [], $fetch = false, $getLastInsID = false)$/;"	f
execute	thinkphp/library/think/db/connector/Oracle.php	/^    public function execute($sql, $bind = [], $fetch = false)$/;"	f
executeTimes	thinkphp/library/think/Db.php	/^    public static $executeTimes = 0;$/;"	v
exists	thinkphp/library/think/Console.php	/^                $exists = isset($alternatives[$collectionName]);$/;"	v
exitCode	thinkphp/library/think/Console.php	/^                    $exitCode = 1;$/;"	v
exitCode	thinkphp/library/think/Console.php	/^                $exitCode = (int) $exitCode;$/;"	v
exitCode	thinkphp/library/think/Console.php	/^                $exitCode = 1;$/;"	v
exitCode	thinkphp/library/think/Console.php	/^                $exitCode = 255;$/;"	v
exitCode	thinkphp/library/think/Console.php	/^            $exitCode = $e->getCode();$/;"	v
exitCode	thinkphp/library/think/Console.php	/^            $exitCode = $this->doRun($input, $output);$/;"	v
exitCode	thinkphp/library/think/Console.php	/^        $exitCode             = $this->doRunCommand($command, $input, $output);$/;"	v
exitCodes	thinkphp/library/think/Process.php	/^    public static $exitCodes = [$/;"	v
exitcode	thinkphp/library/think/Process.php	/^            $exitcode = -1;$/;"	v
exitcode	thinkphp/library/think/Process.php	/^            $exitcode = proc_close($this->process);$/;"	v
exitcode	thinkphp/library/think/Process.php	/^            $this->exitcode = $this->fallbackExitcode;$/;"	v
exitcode	thinkphp/library/think/Process.php	/^            $this->exitcode = $this->processInformation['exitcode'];$/;"	v
exitcode	thinkphp/library/think/Process.php	/^            $this->exitcode = 128 + $this->processInformation['termsig'];$/;"	v
exitcode	thinkphp/library/think/Process.php	/^        $this->exitcode                     = null;$/;"	v
exitcode	thinkphp/library/think/Process.php	/^        $this->exitcode = -1 !== $exitcode ? $exitcode : (null !== $this->exitcode ? $this->exitcode : -1);$/;"	v
exitcode	thinkphp/library/think/Process.php	/^    private $exitcode;$/;"	v
exp	thinkphp/library/think/db/Builder.php	/^                $exp = $this->exp[$exp];$/;"	v
exp	thinkphp/library/think/db/Builder.php	/^            $exp = strtolower($exp);$/;"	v
exp	thinkphp/library/think/db/Builder.php	/^    protected $exp = ['eq' => '=', 'neq' => '<>', 'gt' => '>', 'egt' => '>=', 'lt' => '<', 'elt' => '<=', 'notlike' => 'NOT LIKE', 'like' => 'LIKE', 'in' => 'IN', 'exp' => 'EXP', 'notin' => 'NOT IN', 'not in' => 'NOT IN', 'between' => 'BETWEEN', 'not between' => 'NOT BETWEEN', 'notbetween' => 'NOT BETWEEN', 'exists' => 'EXISTS', 'notexists' => 'NOT EXISTS', 'not exists' => 'NOT EXISTS', 'null' => 'NULL', 'notnull' => 'NOT NULL', 'not null' => 'NOT NULL'];$/;"	v
expire	thinkphp/helper.php	/^            $expire = is_numeric($options) ? $options : null; \/\/默认快捷缓存设置过期时间$/;"	v
expire	thinkphp/helper.php	/^            $expire = isset($options['expire']) ? $options['expire'] : null; \/\/修复查询缓存无法设置过期时间$/;"	v
expire	thinkphp/library/think/Cookie.php	/^        $expire = !empty($config['expire']) ? time() + intval($config['expire']) : 0;$/;"	v
expire	thinkphp/library/think/Validate.php	/^    protected function expire($value, $rule)$/;"	f
expire	thinkphp/library/think/cache/driver/Apc.php	/^            $expire = $this->options['expire'];$/;"	v
expire	thinkphp/library/think/cache/driver/Db.php	/^            $expire = $this->options['expire'];$/;"	v
expire	thinkphp/library/think/cache/driver/Db.php	/^        $expire = (0 == $expire) ? 0 : (time() + $expire); \/\/缓存有效期为0表示永久缓存$/;"	v
expire	thinkphp/library/think/cache/driver/File.php	/^            $expire = $this->options['expire'];$/;"	v
expire	thinkphp/library/think/cache/driver/File.php	/^            $expire = (int) substr($content, 8, 12);$/;"	v
expire	thinkphp/library/think/cache/driver/Lite.php	/^            $expire = $this->options['expire'];$/;"	v
expire	thinkphp/library/think/cache/driver/Lite.php	/^            $expire = 10 * 365 * 24 * 3600;$/;"	v
expire	thinkphp/library/think/cache/driver/Memcache.php	/^            $expire = $this->options['expire'];$/;"	v
expire	thinkphp/library/think/cache/driver/Memcached.php	/^            $expire = $this->options['expire'];$/;"	v
expire	thinkphp/library/think/cache/driver/Memcached.php	/^        $expire = 0 == $expire ? 0 : time() + $expire;$/;"	v
expire	thinkphp/library/think/cache/driver/Redis.php	/^            $expire = $this->options['expire'];$/;"	v
expire	thinkphp/library/think/cache/driver/Sae.php	/^            $expire = $this->options['expire'];$/;"	v
expire	thinkphp/library/think/cache/driver/Sqlite.php	/^            $expire = $this->options['expire'];$/;"	v
expire	thinkphp/library/think/cache/driver/Sqlite.php	/^        $expire = (0 == $expire) ? 0 : (time() + $expire); \/\/缓存有效期为0表示永久缓存$/;"	v
expire	thinkphp/library/think/cache/driver/Wincache.php	/^            $expire = $this->options['expire'];$/;"	v
expire	thinkphp/library/think/cache/driver/Xcache.php	/^            $expire = $this->options['expire'];$/;"	v
expire	thinkphp/library/think/db/Query.php	/^            $expire = $key;$/;"	v
expr	thinkphp/library/think/Console.php	/^        $expr          = preg_replace_callback('{([^:]+|)}', function ($matches) {$/;"	v
expr	thinkphp/library/think/Console.php	/^        $expr        = preg_replace_callback('{([^:]+|)}', function ($matches) {$/;"	v
expression	thinkphp/library/think/template/taglib/Cx.php	/^            $expression = $this->autoBuildVar($expression);$/;"	v
expression	thinkphp/library/think/template/taglib/Cx.php	/^            $expression = ltrim(rtrim($tag['expression'], ')'), '(');$/;"	v
extend	thinkphp/library/think/Template.php	/^                    $extend = $template;$/;"	v
extend	thinkphp/library/think/Template.php	/^                    $extend = $this->parseTemplateName($matches['name']);$/;"	v
extend	thinkphp/library/think/Template.php	/^                    $extend = str_replace($val['begin'] . $val['content'] . $val['end'], $replace, $extend);$/;"	v
extend	thinkphp/library/think/Template.php	/^        $extend = '';$/;"	v
extend	thinkphp/library/think/Validate.php	/^    public static function extend($type, $callback = null)$/;"	f
extractAllNamespaces	thinkphp/library/think/Console.php	/^    private function extractAllNamespaces($name)$/;"	f
extractNamespace	thinkphp/library/think/Console.php	/^    public function extractNamespace($name, $limit = null)$/;"	f
failException	thinkphp/library/think/db/Query.php	/^    public function failException($fail = true)$/;"	f
fallbackExitcode	thinkphp/library/think/Process.php	/^                $this->fallbackExitcode = (int)$data;$/;"	v
fallbackExitcode	thinkphp/library/think/Process.php	/^        $this->fallbackExitcode             = null;$/;"	v
fallbackExitcode	thinkphp/library/think/Process.php	/^    private $fallbackExitcode;$/;"	v
fetch	thinkphp/library/think/Controller.php	/^    public function fetch($template = '', $vars = [], $config = [])$/;"	f
fetch	thinkphp/library/think/Template.php	/^    public function fetch($template, $vars = [], $config = [])$/;"	f
fetch	thinkphp/library/think/View.php	/^    public function fetch($template = '', $vars = [], $config = [], $renderContent = false)$/;"	f
fetch	thinkphp/library/think/cache/driver/Secache.php	/^    public function fetch($key, &$return)$/;"	f
fetch	thinkphp/library/think/view/driver/Php.php	/^    public function fetch($template, $data = [])$/;"	f
fetch	thinkphp/library/think/view/driver/Think.php	/^    public function fetch($template, $data = [], $config = [])$/;"	f
fetchPdo	thinkphp/library/think/db/Query.php	/^    public function fetchPdo($pdo = true)$/;"	f
fetchSql	thinkphp/library/think/db/Query.php	/^    public function fetchSql($fetch = true)$/;"	f
fetchType	thinkphp/library/think/db/Connection.php	/^    protected $fetchType = PDO::FETCH_ASSOC;$/;"	v
fh	thinkphp/library/think/process/pipes/Windows.php	/^        $fh   = $this->fileHandles;$/;"	v
field	thinkphp/library/think/Model.php	/^                $field = $value;$/;"	v
field	thinkphp/library/think/Model.php	/^        $this->field = $field;$/;"	v
field	thinkphp/library/think/Model.php	/^    protected $field = [];$/;"	v
field	thinkphp/library/think/Validate.php	/^        $field = isset($rule[1]) ? $rule[1] : $field;$/;"	v
field	thinkphp/library/think/db/Builder.php	/^                        $field = is_string($field) ? $field : '';$/;"	v
field	thinkphp/library/think/db/Query.php	/^                    $field = $this->options['via'] . '.' . $field;$/;"	v
field	thinkphp/library/think/db/Query.php	/^                $field = $key . ',' . $field;$/;"	v
field	thinkphp/library/think/db/Query.php	/^                $field = empty($order) ? $field : [$field => $order];$/;"	v
field	thinkphp/library/think/db/Query.php	/^            $field         = Loader::parseName(substr($method, 5));$/;"	v
field	thinkphp/library/think/db/Query.php	/^            $field  = $fields ? array_diff($fields, $field) : $field;$/;"	v
field	thinkphp/library/think/db/Query.php	/^            $field  = $fields ?: '*';$/;"	v
field	thinkphp/library/think/db/Query.php	/^            $field = $this->options['via'] . '.' . $field;$/;"	v
field	thinkphp/library/think/db/Query.php	/^            $field = array_merge($this->options['field'], $field);$/;"	v
field	thinkphp/library/think/db/Query.php	/^            $field = explode(',', $field);$/;"	v
field	thinkphp/library/think/db/Query.php	/^    public function field($field, $except = false, $tableName = '', $prefix = '', $alias = '')$/;"	f
fieldCase	thinkphp/library/think/db/Connection.php	/^    protected function fieldCase($info)$/;"	f
fields	thinkphp/library/think/Validate.php	/^            $fields = explode('^', $field);$/;"	v
fields	thinkphp/library/think/db/Builder.php	/^            $fields = $this->query->getTableInfo($options['table'], 'fields');$/;"	v
fields	thinkphp/library/think/db/Builder.php	/^            $fields = array_keys($bind);$/;"	v
fields	thinkphp/library/think/db/Builder.php	/^            $fields = explode(',', $fields);$/;"	v
fields	thinkphp/library/think/db/Builder.php	/^            $fields = is_array($options['field']) ? $options['field'] : explode(',', $options['field']);$/;"	v
fields	thinkphp/library/think/db/Builder.php	/^        $fields = $this->query->getTableInfo($table, 'fields');$/;"	v
fields	thinkphp/library/think/db/Builder.php	/^        $fields = array_keys($data);$/;"	v
fields	thinkphp/library/think/db/Builder.php	/^        $fields = array_map([$this, 'parseKey'], $fields);$/;"	v
fields	thinkphp/library/think/db/Builder.php	/^        $fields = array_map([$this, 'parseKey'], array_keys($dataSet[0]));$/;"	v
fields	thinkphp/library/think/db/Query.php	/^                $fields    = array_keys($resultSet[0]);$/;"	v
fields	thinkphp/library/think/db/Query.php	/^            $fields = $this->getTableInfo($tableName, 'fields');$/;"	v
fields	thinkphp/library/think/db/Query.php	/^            $fields = array_keys($info);$/;"	v
fields	thinkphp/library/think/model/Merge.php	/^            $fields = self::getModelField($name, $table, $class->mapFields);$/;"	v
fields	thinkphp/library/think/model/Merge.php	/^        $fields = self::db()->getTableInfo($table, 'fields');$/;"	v
fields	thinkphp/library/think/model/Merge.php	/^        $fields = self::getModelField($master, '', $class->mapFields);$/;"	v
fieldsStr	thinkphp/library/think/db/Builder.php	/^            $fieldsStr = '*';$/;"	v
fieldsStr	thinkphp/library/think/db/Builder.php	/^            $fieldsStr = implode(',', $array);$/;"	v
file	thinkphp/library/think/App.php	/^                $file = strpos($file, '.') ? $file : APP_PATH . $file . EXT;$/;"	v
file	thinkphp/library/think/Console.php	/^                    $file     = isset($trace[$i]['file']) ? $trace[$i]['file'] : 'n\/a';$/;"	v
file	thinkphp/library/think/Input.php	/^    public static function file($name = '', $default = null, $filter = null, $merge = false)$/;"	f
file	thinkphp/library/think/Lang.php	/^            $file = [$file];$/;"	v
file	thinkphp/library/think/Template.php	/^                    $file  = $array['file'];$/;"	v
file	thinkphp/library/think/exception/ErrorException.php	/^        $this->file     = $file;$/;"	v
file	thinkphp/library/think/template/taglib/Cx.php	/^        $file     = isset($tag['file']) ? $tag['file'] : $tag['href'];$/;"	v
file	thinkphp/mode/console/App.php	/^                $file = strpos($file, '.') ? $file : APP_PATH . $file . EXT;$/;"	v
fileHandles	thinkphp/library/think/process/pipes/Windows.php	/^        $this->fileHandles = [];$/;"	v
fileHandles	thinkphp/library/think/process/pipes/Windows.php	/^    private $fileHandles = [];$/;"	v
fileLsit	thinkphp/library/think/cache/driver/File.php	/^        $fileLsit = (array)glob($this->options['path'].'*');$/;"	v
file_load	thinkphp/library/think/log/driver/File.php	/^        $file_load  = " [文件加载：" . count(get_included_files()) . "]";$/;"	v
file_load	thinkphp/library/think/log/driver/Sae.php	/^        $file_load  = " [文件加载：" . count(get_included_files()) . "]";$/;"	v
file_load	thinkphp/library/think/log/driver/Socket.php	/^        $file_load  = " [文件加载：" . count(get_included_files()) . "]";$/;"	v
filename	thinkphp/library/think/App.php	/^                    $filename = $path . $file . EXT;$/;"	v
filename	thinkphp/library/think/Build.php	/^                            $filename = $modulePath . $path . DS . $val . '.html';$/;"	v
filename	thinkphp/library/think/Build.php	/^                    $filename  = $modulePath . $path . DS . $val . (CLASS_APPEND_SUFFIX ? ucfirst($path) : '') . EXT;$/;"	v
filename	thinkphp/library/think/Build.php	/^        $filename = APP_PATH . ($module ? $module . DS : '') . 'common.php';$/;"	v
filename	thinkphp/library/think/Build.php	/^        $filename = APP_PATH . ($module ? $module . DS : '') . 'config.php';$/;"	v
filename	thinkphp/library/think/Build.php	/^        $filename = APP_PATH . ($module ? $module . DS : '') . CONTROLLER_LAYER . DS . 'Index' . (CLASS_APPEND_SUFFIX ? ucfirst(CONTROLLER_LAYER) : '') . EXT;$/;"	v
filename	thinkphp/library/think/Loader.php	/^            $filename = $path . str_replace('\\\\', DS, $class) . EXT;$/;"	v
filename	thinkphp/library/think/Loader.php	/^        $filename = $baseUrl . $class . $ext;$/;"	v
filename	thinkphp/library/think/cache/driver/File.php	/^            $filename = $dir . $this->options['prefix'] . $name . '.php';$/;"	v
filename	thinkphp/library/think/cache/driver/File.php	/^            $filename = $this->options['prefix'] . $name . '.php';$/;"	v
filename	thinkphp/library/think/cache/driver/File.php	/^        $filename = $this->filename($name);$/;"	v
filename	thinkphp/library/think/cache/driver/File.php	/^    private function filename($name)$/;"	f
filename	thinkphp/library/think/cache/driver/Lite.php	/^        $filename = $this->filename($name);$/;"	v
filename	thinkphp/library/think/cache/driver/Lite.php	/^        $filename = $this->filename('*');$/;"	v
filename	thinkphp/library/think/cache/driver/Lite.php	/^    private function filename($name)$/;"	f
filename	thinkphp/mode/console/App.php	/^                    $filename = APP_PATH . $file . EXT;$/;"	v
files	thinkphp/library/think/Debug.php	/^            $files = get_included_files();$/;"	v
files	thinkphp/library/think/process/pipes/Windows.php	/^            $this->files = [$/;"	v
files	thinkphp/library/think/process/pipes/Windows.php	/^        $this->files = [];$/;"	v
files	thinkphp/library/think/process/pipes/Windows.php	/^    private $files = [];$/;"	v
filter	thinkphp/library/think/Input.php	/^    private static function filter(&$value, $key, $filters)$/;"	f
filter	thinkphp/library/think/Validate.php	/^    protected function filter($value, $rule)$/;"	f
filterExp	thinkphp/library/think/Input.php	/^    public static function filterExp(&$value)$/;"	f
filters	thinkphp/library/think/Input.php	/^            $filters         = Config::get('default_filter');$/;"	v
filters	thinkphp/library/think/Input.php	/^            $filters = static::parseFilter($filter, $merge);$/;"	v
filters	thinkphp/library/think/Input.php	/^    public static $filters;$/;"	v
find	thinkphp/library/think/Console.php	/^    public function find($name)$/;"	f
find	thinkphp/library/think/Template.php	/^            $find    = ['~>\\s+<~', '~>(\\s+\\n|\\r)~'];$/;"	v
find	thinkphp/library/think/db/Query.php	/^    public function find($data = [])$/;"	f
findAlternatives	thinkphp/library/think/Console.php	/^    private function findAlternatives($name, $collection)$/;"	f
findFileInComposer	thinkphp/library/think/Loader.php	/^    private static function findFileInComposer($class, $ext = '.php')$/;"	f
findNamespace	thinkphp/library/think/Console.php	/^    public function findNamespace($namespace)$/;"	f
first	thinkphp/library/think/Error.php	/^        $first = ($line - 9 > 0) ? $line - 9 : 1;$/;"	v
first	thinkphp/library/think/Loader.php	/^        $first = $class[0];$/;"	v
first	thinkphp/library/think/Template.php	/^                            $first = substr($str, 0, 1);$/;"	v
first	thinkphp/library/think/Template.php	/^                        $first = array_shift($vars);$/;"	v
fk	thinkphp/library/think/model/Merge.php	/^            $this->fk = strtolower($this->name) . '_id';$/;"	v
fk	thinkphp/library/think/model/Merge.php	/^    protected $fk                   = ''; \/\/  外键名 默认为主表名_id$/;"	v
flag	thinkphp/library/think/Template.php	/^                $flag = substr($str, 0, 1);$/;"	v
flag	thinkphp/library/think/db/connector/Oracle.php	/^            $flag        = (boolean) $this->query("SELECT * FROM all_sequences WHERE sequence_name='" . strtoupper($this->table) . "'");$/;"	v
flag	thinkphp/library/think/db/connector/Oracle.php	/^        $flag = false;$/;"	v
flag	thinkphp/library/think/template/TagLib.php	/^        $flag = substr($name, 0, 1);$/;"	v
flag	thinkphp/library/think/template/taglib/Cx.php	/^            $flag  = substr($value, 0, 1);$/;"	v
flag	thinkphp/library/think/template/taglib/Cx.php	/^        $flag     = substr($name, 0, 1);$/;"	v
flag	thinkphp/library/think/template/taglib/Cx.php	/^        $flag  = substr($value, 0, 1);$/;"	v
flag	thinkphp/library/think/template/taglib/Cx.php	/^        $flag = substr($tag['value'], 0, 1);$/;"	v
flag	thinkphp/library/think/template/taglib/Cx.php	/^        $flag = substr($value, 0, 1);$/;"	v
flag2	thinkphp/library/think/Template.php	/^                        $flag2 = substr($str, 1, 1);$/;"	v
force	thinkphp/library/think/db/Query.php	/^    public function force($force)$/;"	f
foreground	thinkphp/library/think/console/output/formatter/Style.php	/^            $this->foreground = null;$/;"	v
foreground	thinkphp/library/think/console/output/formatter/Style.php	/^        $this->foreground = static::$availableForegroundColors[$color];$/;"	v
foreground	thinkphp/library/think/console/output/formatter/Style.php	/^    private $foreground;$/;"	v
foreignKey	thinkphp/library/think/Model.php	/^        $foreignKey = $foreignKey ?: Loader::parseName($this->name) . '_id';$/;"	v
foreignKey	thinkphp/library/think/Model.php	/^        $foreignKey = $foreignKey ?: Loader::parseName(basename(str_replace('\\\\', '\/', $model))) . '_id';$/;"	v
foreignKey	thinkphp/library/think/model/Relation.php	/^            $foreignKey = $this->foreignKey;$/;"	v
foreignKey	thinkphp/library/think/model/Relation.php	/^        $foreignKey = $this->foreignKey;$/;"	v
foreignKey	thinkphp/library/think/model/Relation.php	/^        $this->foreignKey = $foreignKey;$/;"	v
foreignKey	thinkphp/library/think/model/Relation.php	/^    protected $foreignKey;$/;"	v
format	thinkphp/library/think/Model.php	/^                    $format = !empty($param) ? $param : $this->dateFormat;$/;"	v
format	thinkphp/library/think/console/output/Formatter.php	/^    public function format($message)$/;"	f
formatBlock	thinkphp/library/think/console/helper/Formatter.php	/^    public function formatBlock($messages, $style, $large = false)$/;"	f
formatDefaultValue	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^    private function formatDefaultValue($default)$/;"	f
formatMemory	thinkphp/library/think/console/helper/Helper.php	/^    public static function formatMemory($memory)$/;"	f
formatSection	thinkphp/library/think/console/helper/Formatter.php	/^    public function formatSection($section, $message, $style = 'info')$/;"	f
formatTime	thinkphp/library/think/console/helper/Helper.php	/^    public static function formatTime($secs)$/;"	f
formatter	thinkphp/library/think/Console.php	/^            $formatter = $output->getFormatter();$/;"	v
formatter	thinkphp/library/think/console/helper/Process.php	/^        $formatter = $this->getHelperSet()->get('debug_formatter');$/;"	v
formatter	thinkphp/library/think/console/output/Stream.php	/^        $this->formatter = $formatter ?: new Formatter();$/;"	v
formatter	thinkphp/library/think/console/output/Stream.php	/^        $this->formatter = $formatter;$/;"	v
formatter	thinkphp/library/think/console/output/Stream.php	/^    private $formatter;$/;"	v
free	thinkphp/library/think/db/Connection.php	/^    public function free()$/;"	f
freeBytes	thinkphp/library/think/cache/driver/Secache.php	/^        $freeBytes    = $this->max_size - $this->_get_dcur_pos();$/;"	v
fun	thinkphp/library/think/Route.php	/^            $fun = '';$/;"	v
fun	thinkphp/library/think/Template.php	/^                $fun = trim($args[0]);$/;"	v
fun	thinkphp/library/think/controller/Rest.php	/^            $fun = $method . '_' . $this->_method . '_' . $this->_type;$/;"	v
fun	thinkphp/library/think/controller/Rest.php	/^            $fun = $method . '_' . $this->_method;$/;"	v
fun	thinkphp/library/think/controller/Rest.php	/^            $fun = $method . '_' . $this->_type;$/;"	v
fun	thinkphp/library/think/template/taglib/Cx.php	/^            $fun      = ('in' == $type) ? 'in_array' : '!in_array';$/;"	v
func	thinkphp/library/think/Template.php	/^        $func   = function ($template) use (&$func, &$regex, &$array, &$extend, &$blocks, &$baseBlocks) {$/;"	v
func	thinkphp/library/think/Template.php	/^        $func  = function ($template) use (&$func, &$regex, &$content) {$/;"	v
func	thinkphp/library/think/cache/driver/Redis.php	/^        $func          = $this->options['persistent'] ? 'pconnect' : 'connect';$/;"	v
func	thinkphp/library/think/cache/driver/Sqlite.php	/^        $func          = $this->options['persistent'] ? 'sqlite_popen' : 'sqlite_open';$/;"	v
func	thinkphp/library/think/session/driver/Redis.php	/^        $func = $this->config['persistent'] ? 'pconnect' : 'connect';$/;"	v
function	thinkphp/library/think/Console.php	/^                    $function = $trace[$i]['function'];$/;"	v
gc	thinkphp/library/think/session/driver/Memcache.php	/^    public function gc($sessMaxLifeTime)$/;"	f
gc	thinkphp/library/think/session/driver/Memcached.php	/^    public function gc($sessMaxLifeTime)$/;"	f
gc	thinkphp/library/think/session/driver/Redis.php	/^    public function gc($sessMaxLifeTime)$/;"	f
get	thinkphp/library/think/Config.php	/^    public static function get($name = null, $range = '')$/;"	f
get	thinkphp/library/think/Console.php	/^    public function get($name)$/;"	f
get	thinkphp/library/think/Cookie.php	/^    public static function get($name, $prefix = null)$/;"	f
get	thinkphp/library/think/Hook.php	/^    public static function get($tag = '')$/;"	f
get	thinkphp/library/think/Input.php	/^    public static function get($name = '', $default = null, $filter = null, $merge = false)$/;"	f
get	thinkphp/library/think/Lang.php	/^    public static function get($name = null, $vars = [], $range = '')$/;"	f
get	thinkphp/library/think/Model.php	/^    public static function get($data = '', $with = [], $cache = false)$/;"	f
get	thinkphp/library/think/Route.php	/^    public static function get($rule, $route = '', $option = [], $pattern = [])$/;"	f
get	thinkphp/library/think/Session.php	/^    public static function get($name = '', $prefix = null)$/;"	f
get	thinkphp/library/think/Template.php	/^    public function get($name = '')$/;"	f
get	thinkphp/library/think/cache/driver/Apc.php	/^    public function get($name)$/;"	f
get	thinkphp/library/think/cache/driver/Db.php	/^    public function get($name)$/;"	f
get	thinkphp/library/think/cache/driver/File.php	/^    public function get($name)$/;"	f
get	thinkphp/library/think/cache/driver/Lite.php	/^    public function get($name)$/;"	f
get	thinkphp/library/think/cache/driver/Memcache.php	/^    public function get($name)$/;"	f
get	thinkphp/library/think/cache/driver/Memcached.php	/^    public function get($name)$/;"	f
get	thinkphp/library/think/cache/driver/Redis.php	/^    public function get($name)$/;"	f
get	thinkphp/library/think/cache/driver/Sae.php	/^    public function get($name)$/;"	f
get	thinkphp/library/think/cache/driver/Secache.php	/^    public function get($name)$/;"	f
get	thinkphp/library/think/cache/driver/Sqlite.php	/^    public function get($name)$/;"	f
get	thinkphp/library/think/cache/driver/Test.php	/^    public function get($name)$/;"	f
get	thinkphp/library/think/cache/driver/Wincache.php	/^    public function get($name)$/;"	f
get	thinkphp/library/think/cache/driver/Xcache.php	/^    public function get($name)$/;"	f
get	thinkphp/library/think/console/helper/Set.php	/^    public function get($name)$/;"	f
get	thinkphp/library/think/controller/Hprose.php	/^    protected $get             = true;$/;"	v
get	thinkphp/library/think/model/Merge.php	/^    public static function get($data = '', $with = [], $cache = false)$/;"	f
get	thinkphp/library/think/template/driver/Sae.php	/^    private function get($filename, $name)$/;"	f
getAbbreviationSuggestions	thinkphp/library/think/Console.php	/^    private function getAbbreviationSuggestions($abbrevs)$/;"	f
getAbbreviations	thinkphp/library/think/Console.php	/^    public static function getAbbreviations($names)$/;"	f
getAcceptType	thinkphp/library/think/controller/Rest.php	/^    public static function getAcceptType()$/;"	f
getAliases	thinkphp/library/think/console/command/Command.php	/^    public function getAliases()$/;"	f
getArgument	thinkphp/library/think/console/Input.php	/^    public function getArgument($name)$/;"	f
getArgument	thinkphp/library/think/console/input/Definition.php	/^    public function getArgument($name)$/;"	f
getArgumentCount	thinkphp/library/think/console/input/Definition.php	/^    public function getArgumentCount()$/;"	f
getArgumentDefaults	thinkphp/library/think/console/input/Definition.php	/^    public function getArgumentDefaults()$/;"	f
getArgumentRequiredCount	thinkphp/library/think/console/input/Definition.php	/^    public function getArgumentRequiredCount()$/;"	f
getArguments	thinkphp/library/think/console/Input.php	/^    public function getArguments()$/;"	f
getArguments	thinkphp/library/think/console/input/Definition.php	/^    public function getArguments()$/;"	f
getAutocompleterValues	thinkphp/library/think/console/helper/question/Question.php	/^    public function getAutocompleterValues()$/;"	f
getBind	thinkphp/library/think/db/Query.php	/^    public function getBind()$/;"	f
getBindSql	thinkphp/library/think/db/Connection.php	/^    protected function getBindSql($sql, array $bind = [])$/;"	f
getBorder	thinkphp/library/think/console/helper/Debug.php	/^    private function getBorder($id)$/;"	f
getChoices	thinkphp/library/think/console/helper/question/Choice.php	/^    public function getChoices()$/;"	f
getClientArg	thinkphp/library/think/log/driver/Socket.php	/^    protected function getClientArg($name)$/;"	f
getCode	thinkphp/library/think/Error.php	/^    private static function getCode($exception)$/;"	f
getColumnWidth	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^    private function getColumnWidth(array $commands)$/;"	f
getCommand	thinkphp/library/think/console/helper/Set.php	/^    public function getCommand()$/;"	f
getCommand	thinkphp/library/think/console/helper/descriptor/Console.php	/^    public function getCommand($name)$/;"	f
getCommandLine	thinkphp/library/think/Process.php	/^    public function getCommandLine()$/;"	f
getCommandName	thinkphp/library/think/Console.php	/^    protected function getCommandName(Input $input)$/;"	f
getCommands	thinkphp/library/think/console/helper/descriptor/Console.php	/^    public function getCommands()$/;"	f
getConfig	thinkphp/library/think/db/Connection.php	/^    public function getConfig($config)$/;"	f
getConsole	thinkphp/library/think/console/command/Command.php	/^    public function getConsole()$/;"	f
getConsoleMode	thinkphp/library/think/Console.php	/^    private function getConsoleMode()$/;"	f
getCurrent	thinkphp/library/think/console/output/formatter/Stack.php	/^    public function getCurrent()$/;"	f
getData	thinkphp/library/think/Model.php	/^    public function getData($name = '')$/;"	f
getDataValue	thinkphp/library/think/Validate.php	/^    protected function getDataValue($data, $key)$/;"	f
getDefault	thinkphp/library/think/console/helper/question/Question.php	/^    public function getDefault()$/;"	f
getDefault	thinkphp/library/think/console/input/Argument.php	/^    public function getDefault()$/;"	f
getDefault	thinkphp/library/think/console/input/Option.php	/^    public function getDefault()$/;"	f
getDefaultCommands	thinkphp/library/think/Console.php	/^    protected function getDefaultCommands()$/;"	f
getDefaultHelperSet	thinkphp/library/think/Console.php	/^    protected function getDefaultHelperSet()$/;"	f
getDefaultInputDefinition	thinkphp/library/think/Console.php	/^    protected function getDefaultInputDefinition()$/;"	f
getDefaultNormalizer	thinkphp/library/think/console/helper/question/Confirmation.php	/^    private function getDefaultNormalizer()$/;"	f
getDefaultValidator	thinkphp/library/think/console/helper/question/Choice.php	/^    private function getDefaultValidator()$/;"	f
getDefinition	thinkphp/library/think/Console.php	/^    public function getDefinition()$/;"	f
getDefinition	thinkphp/library/think/console/command/Command.php	/^    public function getDefinition()$/;"	f
getDescription	thinkphp/library/think/console/command/Command.php	/^    public function getDescription()$/;"	f
getDescription	thinkphp/library/think/console/input/Argument.php	/^    public function getDescription()$/;"	f
getDescription	thinkphp/library/think/console/input/Option.php	/^    public function getDescription()$/;"	f
getDescriptors	thinkphp/library/think/Process.php	/^    private function getDescriptors()$/;"	f
getDescriptors	thinkphp/library/think/process/pipes/Unix.php	/^    public function getDescriptors()$/;"	f
getDescriptors	thinkphp/library/think/process/pipes/Windows.php	/^    public function getDescriptors()$/;"	f
getDriverName	thinkphp/library/think/db/Connection.php	/^    public function getDriverName()$/;"	f
getEmptyStyle	thinkphp/library/think/console/output/formatter/Stack.php	/^    public function getEmptyStyle()$/;"	f
getEnhanceSigchildCompatibility	thinkphp/library/think/Process.php	/^    public function getEnhanceSigchildCompatibility()$/;"	f
getEnhanceWindowsCompatibility	thinkphp/library/think/Process.php	/^    public function getEnhanceWindowsCompatibility()$/;"	f
getEnv	thinkphp/library/think/Process.php	/^    public function getEnv()$/;"	f
getError	thinkphp/library/think/Model.php	/^    public function getError()$/;"	f
getError	thinkphp/library/think/Validate.php	/^    public function getError()$/;"	f
getError	thinkphp/library/think/db/Connection.php	/^    public function getError()$/;"	f
getErrorOutput	thinkphp/library/think/Process.php	/^    public function getErrorOutput()$/;"	f
getErrorOutput	thinkphp/library/think/console/Output.php	/^    public function getErrorOutput()$/;"	f
getExceededTimeout	thinkphp/library/think/process/exception/Timeout.php	/^    public function getExceededTimeout()$/;"	f
getExecuteTimes	thinkphp/library/think/db/Connection.php	/^    public function getExecuteTimes()$/;"	f
getExitCode	thinkphp/library/think/Process.php	/^    public function getExitCode()$/;"	f
getExitCodeText	thinkphp/library/think/Process.php	/^    public function getExitCodeText()$/;"	f
getExplain	thinkphp/library/think/db/connector/Mysql.php	/^    protected function getExplain($sql)$/;"	f
getExplain	thinkphp/library/think/db/connector/Oracle.php	/^    protected function getExplain($sql)$/;"	f
getExplain	thinkphp/library/think/db/connector/Pgsql.php	/^    protected function getExplain($sql)$/;"	f
getExplain	thinkphp/library/think/db/connector/Sqlite.php	/^    protected function getExplain($sql)$/;"	f
getExplain	thinkphp/library/think/db/connector/Sqlsrv.php	/^    protected function getExplain($sql)$/;"	f
getExtendData	thinkphp/library/think/Error.php	/^    private static function getExtendData($exception)$/;"	f
getFields	thinkphp/library/think/db/connector/Mysql.php	/^    public function getFields($tableName)$/;"	f
getFields	thinkphp/library/think/db/connector/Oracle.php	/^    public function getFields($tableName)$/;"	f
getFields	thinkphp/library/think/db/connector/Pgsql.php	/^    public function getFields($tableName)$/;"	f
getFields	thinkphp/library/think/db/connector/Sqlite.php	/^    public function getFields($tableName)$/;"	f
getFields	thinkphp/library/think/db/connector/Sqlsrv.php	/^    public function getFields($tableName)$/;"	f
getFile	thinkphp/library/think/Debug.php	/^    public static function getFile($detail = false)$/;"	f
getFiles	thinkphp/library/think/process/pipes/Unix.php	/^    public function getFiles()$/;"	f
getFiles	thinkphp/library/think/process/pipes/Windows.php	/^    public function getFiles()$/;"	f
getFilter	thinkphp/library/think/Input.php	/^    private static function getFilter()$/;"	f
getFirstArgument	thinkphp/library/think/console/Input.php	/^    public function getFirstArgument()$/;"	f
getFormatter	thinkphp/library/think/console/output/Nothing.php	/^    public function getFormatter()$/;"	f
getFormatter	thinkphp/library/think/console/output/Stream.php	/^    public function getFormatter()$/;"	f
getHelp	thinkphp/library/think/Console.php	/^    public function getHelp()$/;"	f
getHelp	thinkphp/library/think/console/command/Command.php	/^    public function getHelp()$/;"	f
getHelper	thinkphp/library/think/console/command/Command.php	/^    public function getHelper($name)$/;"	f
getHelperSet	thinkphp/library/think/Console.php	/^    public function getHelperSet()$/;"	f
getHelperSet	thinkphp/library/think/console/command/Command.php	/^    public function getHelperSet()$/;"	f
getHelperSet	thinkphp/library/think/console/helper/Helper.php	/^    public function getHelperSet()$/;"	f
getHiddenResponse	thinkphp/library/think/console/helper/Question.php	/^    private function getHiddenResponse(Output $output, $inputStream)$/;"	f
getIdleTimeout	thinkphp/library/think/Process.php	/^    public function getIdleTimeout()$/;"	f
getIncludeTagLib	thinkphp/library/think/Template.php	/^    private function getIncludeTagLib(&$content)$/;"	f
getIncrementalErrorOutput	thinkphp/library/think/Process.php	/^    public function getIncrementalErrorOutput()$/;"	f
getIncrementalOutput	thinkphp/library/think/Process.php	/^    public function getIncrementalOutput()$/;"	f
getInput	thinkphp/library/think/Process.php	/^    public function getInput()$/;"	f
getInputStream	thinkphp/library/think/console/helper/Question.php	/^    public function getInputStream()$/;"	f
getIterator	thinkphp/library/think/console/helper/Set.php	/^    public function getIterator()$/;"	f
getKv	thinkphp/library/think/cache/driver/Sae.php	/^    private function getKv()$/;"	f
getLastInsID	thinkphp/library/think/db/Connection.php	/^    public function getLastInsID()$/;"	f
getLastSql	thinkphp/library/think/db/Connection.php	/^    public function getLastSql()$/;"	f
getList	application/admin/model/Article.php	/^    public function getList($limit = 10) {$/;"	f
getLog	thinkphp/library/think/Log.php	/^    public static function getLog()$/;"	f
getLongVersion	thinkphp/library/think/Console.php	/^    public function getLongVersion()$/;"	f
getMaxAttempts	thinkphp/library/think/console/helper/question/Question.php	/^    public function getMaxAttempts()$/;"	f
getMemPeak	thinkphp/library/think/Debug.php	/^    public static function getMemPeak($start, $end, $dec = 2)$/;"	f
getModelField	thinkphp/library/think/model/Merge.php	/^    protected static function getModelField($name, $table = '', $map = [])$/;"	f
getName	thinkphp/library/think/Console.php	/^    public function getName()$/;"	f
getName	thinkphp/library/think/console/command/Command.php	/^    public function getName()$/;"	f
getName	thinkphp/library/think/console/helper/Debug.php	/^    public function getName()$/;"	f
getName	thinkphp/library/think/console/helper/Descriptor.php	/^    public function getName()$/;"	f
getName	thinkphp/library/think/console/helper/Formatter.php	/^    public function getName()$/;"	f
getName	thinkphp/library/think/console/helper/Process.php	/^    public function getName()$/;"	f
getName	thinkphp/library/think/console/helper/Question.php	/^    public function getName()$/;"	f
getName	thinkphp/library/think/console/input/Argument.php	/^    public function getName()$/;"	f
getName	thinkphp/library/think/console/input/Option.php	/^    public function getName()$/;"	f
getNamespaces	thinkphp/library/think/Console.php	/^    public function getNamespaces()$/;"	f
getNamespaces	thinkphp/library/think/console/helper/descriptor/Console.php	/^    public function getNamespaces()$/;"	f
getNativeDefinition	thinkphp/library/think/console/command/Command.php	/^    public function getNativeDefinition()$/;"	f
getNativeDefinition	thinkphp/library/think/console/command/Lists.php	/^    public function getNativeDefinition()$/;"	f
getNormalizer	thinkphp/library/think/console/helper/question/Question.php	/^    public function getNormalizer()$/;"	f
getOption	thinkphp/library/think/console/Input.php	/^    public function getOption($name)$/;"	f
getOption	thinkphp/library/think/console/input/Definition.php	/^    public function getOption($name)$/;"	f
getOptionDefaults	thinkphp/library/think/console/input/Definition.php	/^    public function getOptionDefaults()$/;"	f
getOptionForShortcut	thinkphp/library/think/console/input/Definition.php	/^    public function getOptionForShortcut($shortcut)$/;"	f
getOptions	thinkphp/library/think/Process.php	/^    public function getOptions()$/;"	f
getOptions	thinkphp/library/think/console/Input.php	/^    public function getOptions()$/;"	f
getOptions	thinkphp/library/think/console/input/Definition.php	/^    public function getOptions()$/;"	f
getOptions	thinkphp/library/think/db/Query.php	/^    public function getOptions($name = '')$/;"	f
getOutput	thinkphp/library/think/Process.php	/^    public function getOutput()$/;"	f
getParameterOption	thinkphp/library/think/console/Input.php	/^    public function getParameterOption($values, $default = false)$/;"	f
getPdo	thinkphp/library/think/db/Connection.php	/^    public function getPdo()$/;"	f
getPid	thinkphp/library/think/Process.php	/^    public function getPid()$/;"	f
getPk	thinkphp/library/think/Model.php	/^    public function getPk($table = '')$/;"	f
getPk	thinkphp/library/think/db/Query.php	/^    public function getPk($table = '')$/;"	f
getProcess	thinkphp/library/think/process/Builder.php	/^    public function getProcess()$/;"	f
getProcess	thinkphp/library/think/process/exception/Faild.php	/^    public function getProcess()$/;"	f
getProcess	thinkphp/library/think/process/exception/Timeout.php	/^    public function getProcess()$/;"	f
getProcessedHelp	thinkphp/library/think/console/command/Command.php	/^    public function getProcessedHelp()$/;"	f
getPrompt	thinkphp/library/think/console/helper/question/Choice.php	/^    public function getPrompt()$/;"	f
getQueryTimes	thinkphp/library/think/db/Connection.php	/^    public function getQueryTimes($execute = false)$/;"	f
getQuestion	thinkphp/library/think/console/helper/question/Question.php	/^    public function getQuestion()$/;"	f
getRangeMem	thinkphp/library/think/Debug.php	/^    public static function getRangeMem($start, $end, $dec = 2)$/;"	f
getRangeTime	thinkphp/library/think/Debug.php	/^    public static function getRangeTime($start, $end, $dec = 6)$/;"	f
getRegex	thinkphp/library/think/Template.php	/^    private function getRegex($tagName)$/;"	f
getRegex	thinkphp/library/think/template/TagLib.php	/^    private function getRegex($tags, $close)$/;"	f
getRelation	thinkphp/library/think/model/Relation.php	/^    public function getRelation($name)$/;"	f
getRelationInfo	thinkphp/library/think/Model.php	/^    public function getRelationInfo($name = '')$/;"	f
getRelationInfo	thinkphp/library/think/model/Relation.php	/^    public function getRelationInfo($name = '')$/;"	f
getResult	thinkphp/library/think/db/Connection.php	/^    protected function getResult()$/;"	f
getRouteAlias	thinkphp/library/think/Url.php	/^    private static function getRouteAlias()$/;"	f
getRouteUrl	thinkphp/library/think/Url.php	/^    public static function getRouteUrl($alias, &$vars = [])$/;"	f
getRow	application/admin/model/Article.php	/^    public function getRow($id) {$/;"	f
getRuleMsg	thinkphp/library/think/Validate.php	/^    protected function getRuleMsg($attribute, $title, $type, $rule)$/;"	f
getRules	thinkphp/library/think/Route.php	/^    public static function getRules($method = '')$/;"	f
getScene	thinkphp/library/think/Validate.php	/^    protected function getScene($scene = '')$/;"	f
getShell	thinkphp/library/think/console/helper/Question.php	/^    private function getShell()$/;"	f
getShortcut	thinkphp/library/think/console/input/Option.php	/^    public function getShortcut()$/;"	f
getSourceCode	thinkphp/library/think/Error.php	/^    private static function getSourceCode($exception)$/;"	f
getStatus	thinkphp/library/think/Process.php	/^    public function getStatus()$/;"	f
getStopSignal	thinkphp/library/think/Process.php	/^    public function getStopSignal()$/;"	f
getStream	thinkphp/library/think/console/output/Stream.php	/^    public function getStream()$/;"	f
getSttyColumns	thinkphp/library/think/Console.php	/^    private function getSttyColumns()$/;"	f
getStyle	thinkphp/library/think/console/output/Formatter.php	/^    public function getStyle($name)$/;"	f
getStyleStack	thinkphp/library/think/console/output/Formatter.php	/^    public function getStyleStack()$/;"	f
getSynopsis	thinkphp/library/think/console/command/Command.php	/^    public function getSynopsis($short = false)$/;"	f
getSynopsis	thinkphp/library/think/console/input/Definition.php	/^    public function getSynopsis($short = false)$/;"	f
getTPConst	thinkphp/library/think/Error.php	/^    private static function getTPConst()$/;"	f
getTable	thinkphp/library/think/db/Query.php	/^    public function getTable()$/;"	f
getTableInfo	thinkphp/library/think/db/Query.php	/^    public function getTableInfo($tableName = '', $fetch = '')$/;"	f
getTables	thinkphp/library/think/db/connector/Mysql.php	/^    public function getTables($dbName = '')$/;"	f
getTables	thinkphp/library/think/db/connector/Oracle.php	/^    public function getTables()$/;"	f
getTables	thinkphp/library/think/db/connector/Pgsql.php	/^    public function getTables($dbName = '')$/;"	f
getTables	thinkphp/library/think/db/connector/Sqlite.php	/^    public function getTables($dbName = '')$/;"	f
getTables	thinkphp/library/think/db/connector/Sqlsrv.php	/^    public function getTables($dbName = '')$/;"	f
getTags	thinkphp/library/think/template/TagLib.php	/^    public function getTags()$/;"	f
getTermSignal	thinkphp/library/think/Process.php	/^    public function getTermSignal()$/;"	f
getTerminalDimensions	thinkphp/library/think/Console.php	/^    public function getTerminalDimensions()$/;"	f
getTerminalHeight	thinkphp/library/think/Console.php	/^    protected function getTerminalHeight()$/;"	f
getTerminalWidth	thinkphp/library/think/Console.php	/^    protected function getTerminalWidth()$/;"	f
getThroughputRate	thinkphp/library/think/Debug.php	/^    public static function getThroughputRate()$/;"	f
getTimeout	thinkphp/library/think/Process.php	/^    public function getTimeout()$/;"	f
getUsages	thinkphp/library/think/console/command/Command.php	/^    public function getUsages()$/;"	f
getUseMem	thinkphp/library/think/Debug.php	/^    public static function getUseMem($dec = 2)$/;"	f
getUseTime	thinkphp/library/think/Debug.php	/^    public static function getUseTime($dec = 6)$/;"	f
getValidator	thinkphp/library/think/console/helper/question/Question.php	/^    public function getValidator()$/;"	f
getVerbosity	thinkphp/library/think/console/output/Nothing.php	/^    public function getVerbosity()$/;"	f
getVerbosity	thinkphp/library/think/console/output/Stream.php	/^    public function getVerbosity()$/;"	f
getVersion	thinkphp/library/think/Console.php	/^    public function getVersion()$/;"	f
getWorkingDirectory	thinkphp/library/think/Process.php	/^    public function getWorkingDirectory()$/;"	f
globals	thinkphp/library/think/Input.php	/^    public static function globals($name = '', $default = null, $filter = null, $merge = false)$/;"	f
group	thinkphp/library/think/Route.php	/^    public static function group($name, $routes = [], $type = '*', $option = [], $pattern = [])$/;"	f
group	thinkphp/library/think/db/Query.php	/^    public function group($group)$/;"	f
gt	thinkphp/library/think/Validate.php	/^    protected function gt($value, $rule)$/;"	f
guid	thinkphp/library/think/db/Query.php	/^            $guid   = is_string($cache['key']) ? $cache['key'] : md5($field . serialize($this->options));$/;"	v
guid	thinkphp/library/think/db/Query.php	/^            $guid = md5($this->name . '_' . $field . '_' . serialize($condition));$/;"	v
guid	thinkphp/library/think/db/Query.php	/^        $guid = md5($tableName);$/;"	v
handler	thinkphp/library/think/Cache.php	/^    protected static $handler = null;$/;"	v
handler	thinkphp/library/think/Response.php	/^                    $handler = !empty($_GET[Config::get('var_jsonp_handler')]) ? $_GET[Config::get('var_jsonp_handler')] : Config::get('default_jsonp_handler');$/;"	v
handler	thinkphp/library/think/cache/driver/Db.php	/^        $this->handler = \\think\\Db::connect((!empty($this->options['hostname']) || !empty($this->options['dsn'])) ? $this->options : []);$/;"	v
handler	thinkphp/library/think/cache/driver/Db.php	/^    protected $handler = null;$/;"	v
handler	thinkphp/library/think/cache/driver/Memcache.php	/^        $this->handler = new \\Memcache;$/;"	v
handler	thinkphp/library/think/cache/driver/Memcache.php	/^    protected $handler = null;$/;"	v
handler	thinkphp/library/think/cache/driver/Memcached.php	/^        $this->handler = new \\Memcached;$/;"	v
handler	thinkphp/library/think/cache/driver/Memcached.php	/^    protected $handler = null;$/;"	v
handler	thinkphp/library/think/cache/driver/Redis.php	/^        $this->handler = new \\Redis;$/;"	v
handler	thinkphp/library/think/cache/driver/Redis.php	/^    protected $handler = null;$/;"	v
handler	thinkphp/library/think/cache/driver/Sae.php	/^        $this->handler = memcache_init();$/;"	v
handler	thinkphp/library/think/cache/driver/Sae.php	/^    protected $handler = null;$/;"	v
handler	thinkphp/library/think/cache/driver/Secache.php	/^        $this->handler = new SecacheClient;$/;"	v
handler	thinkphp/library/think/cache/driver/Secache.php	/^    protected $handler = null;$/;"	v
handler	thinkphp/library/think/cache/driver/Sqlite.php	/^        $this->handler = $func($this->options['db']);$/;"	v
handler	thinkphp/library/think/session/driver/Memcache.php	/^        $this->handler = new \\Memcache;$/;"	v
handler	thinkphp/library/think/session/driver/Memcache.php	/^        $this->handler = null;$/;"	v
handler	thinkphp/library/think/session/driver/Memcache.php	/^    protected $handler = null;$/;"	v
handler	thinkphp/library/think/session/driver/Memcached.php	/^        $this->handler = new \\Memcached;$/;"	v
handler	thinkphp/library/think/session/driver/Memcached.php	/^        $this->handler = null;$/;"	v
handler	thinkphp/library/think/session/driver/Memcached.php	/^    protected $handler = null;$/;"	v
handler	thinkphp/library/think/session/driver/Redis.php	/^        $this->handler = new \\Redis;$/;"	v
handler	thinkphp/library/think/session/driver/Redis.php	/^        $this->handler = null;$/;"	v
handler	thinkphp/library/think/session/driver/Redis.php	/^    protected $handler = null;$/;"	v
has	thinkphp/helper.php	/^        $has = '';$/;"	v
has	thinkphp/helper.php	/^        $has = '?';$/;"	v
has	thinkphp/library/think/Config.php	/^    public static function has($name, $range = '')$/;"	f
has	thinkphp/library/think/Console.php	/^    public function has($name)$/;"	f
has	thinkphp/library/think/Input.php	/^    public static function has($name, $data)$/;"	f
has	thinkphp/library/think/Model.php	/^    public static function has($relation, $operator = '>=', $count = 1, $id = '*')$/;"	f
has	thinkphp/library/think/Session.php	/^    public static function has($name, $prefix = null)$/;"	f
has	thinkphp/library/think/console/helper/Set.php	/^    public function has($name)$/;"	f
hasAnArrayArgument	thinkphp/library/think/console/input/Definition.php	/^            $this->hasAnArrayArgument = true;$/;"	v
hasAnArrayArgument	thinkphp/library/think/console/input/Definition.php	/^        $this->hasAnArrayArgument = false;$/;"	v
hasAnArrayArgument	thinkphp/library/think/console/input/Definition.php	/^    private $hasAnArrayArgument = false;$/;"	v
hasArgument	thinkphp/library/think/console/Input.php	/^    public function hasArgument($name)$/;"	f
hasArgument	thinkphp/library/think/console/input/Definition.php	/^    public function hasArgument($name)$/;"	f
hasBeenSignaled	thinkphp/library/think/Process.php	/^    public function hasBeenSignaled()$/;"	f
hasBeenStopped	thinkphp/library/think/Process.php	/^    public function hasBeenStopped()$/;"	f
hasColorSupport	thinkphp/library/think/console/output/Stream.php	/^    protected function hasColorSupport()$/;"	f
hasMany	thinkphp/library/think/Model.php	/^    public function hasMany($model, $foreignKey = '', $localKey = '')$/;"	f
hasMany	thinkphp/library/think/model/Relation.php	/^    public function hasMany($model, $foreignKey, $localKey)$/;"	f
hasOne	thinkphp/library/think/Model.php	/^    public function hasOne($model, $foreignKey = '', $localKey = '')$/;"	f
hasOne	thinkphp/library/think/model/Relation.php	/^    public function hasOne($model, $foreignKey, $localKey)$/;"	f
hasOption	thinkphp/library/think/console/Input.php	/^    public function hasOption($name)$/;"	f
hasOption	thinkphp/library/think/console/input/Definition.php	/^    public function hasOption($name)$/;"	f
hasOptional	thinkphp/library/think/console/input/Definition.php	/^            $this->hasOptional = true;$/;"	v
hasOptional	thinkphp/library/think/console/input/Definition.php	/^        $this->hasOptional        = false;$/;"	v
hasOptional	thinkphp/library/think/console/input/Definition.php	/^    private $hasOptional;$/;"	v
hasParameterOption	thinkphp/library/think/console/Input.php	/^    public function hasParameterOption($values)$/;"	f
hasShortcut	thinkphp/library/think/console/input/Definition.php	/^    public function hasShortcut($name)$/;"	f
hasStdoutSupport	thinkphp/library/think/console/Output.php	/^    protected function hasStdoutSupport()$/;"	f
hasSttyAvailable	thinkphp/library/think/console/helper/Question.php	/^    private function hasSttyAvailable()$/;"	f
hasStyle	thinkphp/library/think/console/output/Formatter.php	/^    public function hasStyle($name)$/;"	f
hasSystemCallBeenInterrupted	thinkphp/library/think/process/pipes/Pipes.php	/^    protected function hasSystemCallBeenInterrupted()$/;"	f
hasWhere	thinkphp/library/think/Model.php	/^    public static function hasWhere($relation, $where = [])$/;"	f
has_key	thinkphp/library/think/cache/driver/Secache.php	/^            $has_key   = $this->search($key, $list_idx_offset);$/;"	v
having	thinkphp/library/think/db/Query.php	/^    public function having($having)$/;"	f
hdseq	thinkphp/library/think/cache/driver/Secache.php	/^                $hdseq = $list_idx_offset;$/;"	v
hdseq	thinkphp/library/think/cache/driver/Secache.php	/^                $hdseq = $this->_alloc_idx(array($/;"	v
header	thinkphp/library/think/Response.php	/^    public static function header($name, $value)$/;"	f
header_padding	thinkphp/library/think/cache/driver/Secache.php	/^    public $header_padding   = 20; \/\/保留空间 放置php标记防止下载$/;"	v
headers	thinkphp/library/think/Response.php	/^        $headers = [$/;"	v
headers	thinkphp/library/think/log/driver/Socket.php	/^        $headers = [$/;"	v
hello	application/admin/controller/Index.php	/^    public function hello()$/;"	f
hello	application/index/controller/Index.php	/^    public function hello()$/;"	f
help	thinkphp/library/think/console/command/Command.php	/^        $this->help = $help;$/;"	v
help	thinkphp/library/think/console/command/Command.php	/^    private $help;$/;"	v
helpCommand	thinkphp/library/think/Console.php	/^            $helpCommand = $this->get('help');$/;"	v
helper	thinkphp/library/think/console/command/Help.php	/^        $helper = new DescriptorHelper();$/;"	v
helper	thinkphp/library/think/console/command/Lists.php	/^        $helper = new DescriptorHelper();$/;"	v
helperSet	thinkphp/library/think/Console.php	/^        $this->helperSet      = $this->getDefaultHelperSet();$/;"	v
helperSet	thinkphp/library/think/Console.php	/^        $this->helperSet = $helperSet;$/;"	v
helperSet	thinkphp/library/think/Console.php	/^    private $helperSet;$/;"	v
helperSet	thinkphp/library/think/console/command/Command.php	/^            $this->helperSet = null;$/;"	v
helperSet	thinkphp/library/think/console/command/Command.php	/^        $this->helperSet = $helperSet;$/;"	v
helperSet	thinkphp/library/think/console/command/Command.php	/^    private $helperSet;$/;"	v
helperSet	thinkphp/library/think/console/helper/Helper.php	/^        $this->helperSet = $helperSet;$/;"	v
helperSet	thinkphp/library/think/console/helper/Helper.php	/^    protected $helperSet = null;$/;"	v
helpers	thinkphp/library/think/console/helper/Set.php	/^    private $helpers = [];$/;"	v
hidden	thinkphp/library/think/console/helper/question/Question.php	/^        $this->hidden = (bool)$hidden;$/;"	v
hidden	thinkphp/library/think/console/helper/question/Question.php	/^    private $hidden         = false;$/;"	v
hiddenFallback	thinkphp/library/think/console/helper/question/Question.php	/^        $this->hiddenFallback = (bool)$fallback;$/;"	v
hiddenFallback	thinkphp/library/think/console/helper/question/Question.php	/^    private $hiddenFallback = true;$/;"	v
hits	thinkphp/library/think/cache/driver/Secache.php	/^        $hits       = $miss       = 0;$/;"	v
hosts	thinkphp/library/think/cache/driver/Memcache.php	/^        $hosts = explode(',', $this->options['host']);$/;"	v
hosts	thinkphp/library/think/cache/driver/Memcached.php	/^        $hosts = explode(',', $this->options['host']);$/;"	v
hosts	thinkphp/library/think/session/driver/Memcache.php	/^        $hosts = explode(',', $this->config['host']);$/;"	v
hosts	thinkphp/library/think/session/driver/Memcached.php	/^        $hosts = explode(',', $this->config['host']);$/;"	v
httpStatus	thinkphp/library/think/Exception.php	/^    protected $httpStatus = 500;$/;"	v
httpStatus	thinkphp/library/think/exception/NotFoundException.php	/^    protected $httpStatus = 404;$/;"	v
http_response_code	thinkphp/library/think/Response.php	/^            $http_response_code = $params;$/;"	v
http_response_code	thinkphp/library/think/Response.php	/^        $http_response_code = 301;$/;"	v
i	thinkphp/library/think/Validate.php	/^            $i = 0;$/;"	v
i	thinkphp/library/think/cache/driver/Secache.php	/^            $i         = 0;$/;"	v
i	thinkphp/library/think/console/helper/Question.php	/^                        $i = strlen($ret);$/;"	v
i	thinkphp/library/think/console/helper/Question.php	/^        $i          = 0;$/;"	v
i	thinkphp/library/think/db/Query.php	/^        $i            = 0;$/;"	v
id	application/index/controller/News.php	/^        $id = Input::get('id');$/;"	v
id	thinkphp/library/think/model/Relation.php	/^            $id         = $data->$relationFk;$/;"	v
id	thinkphp/library/think/model/Relation.php	/^            $id         = $model->$relationFk;$/;"	v
id	thinkphp/library/think/model/Relation.php	/^            $id = $data;$/;"	v
id	thinkphp/library/think/template/taglib/Cx.php	/^        $id     = $tag['id'];$/;"	v
identify	thinkphp/library/think/Loader.php	/^        $identify         = $class . $method;$/;"	v
idleTimeout	thinkphp/library/think/Process.php	/^        $this->idleTimeout = $this->validateTimeout($timeout);$/;"	v
idleTimeout	thinkphp/library/think/Process.php	/^    private $idleTimeout;$/;"	v
idx_base_pos	thinkphp/library/think/cache/driver/Secache.php	/^    public $idx_base_pos  = 444; \/\/40+20+24*16$/;"	v
idx_free_pos	thinkphp/library/think/cache/driver/Secache.php	/^    public $idx_free_pos  = 48; \/\/id 空闲链表入口地址$/;"	v
idx_node_base	thinkphp/library/think/cache/driver/Secache.php	/^        $this->idx_node_base    = $this->data_base_pos + $this->max_size;$/;"	v
idx_node_size	thinkphp/library/think/cache/driver/Secache.php	/^    public $idx_node_size    = 40;$/;"	v
idx_seq_pos	thinkphp/library/think/cache/driver/Secache.php	/^    public $idx_seq_pos   = 40; \/\/id 计数器节点地址$/;"	v
ignoreValidationErrors	thinkphp/library/think/console/command/Command.php	/^        $this->ignoreValidationErrors = true;$/;"	v
ignoreValidationErrors	thinkphp/library/think/console/command/Command.php	/^    private $ignoreValidationErrors          = false;$/;"	v
ignoreValidationErrors	thinkphp/library/think/console/command/Command.php	/^    public function ignoreValidationErrors()$/;"	f
import	thinkphp/helper.php	/^function import($class, $baseUrl = '', $ext = EXT)$/;"	f
import	thinkphp/library/think/Hook.php	/^    public static function import(array $tags, $recursive = true)$/;"	f
import	thinkphp/library/think/Loader.php	/^    public static function import($class, $baseUrl = '', $ext = EXT)$/;"	f
in	thinkphp/library/think/Validate.php	/^    protected function in($value, $rule)$/;"	f
includeFile	thinkphp/library/think/Template.php	/^        $includeFile = unserialize($matches[1]);$/;"	v
includeFile	thinkphp/library/think/Template.php	/^        $this->includeFile = [];$/;"	v
includeFile	thinkphp/library/think/Template.php	/^    private $includeFile = []; \/\/ 记录所有模板包含的文件路径及更新时间$/;"	v
includeFiles	thinkphp/library/think/Loader.php	/^            $includeFiles = require VENDOR_PATH . 'composer\/autoload_files.php';$/;"	v
incrementalErrorOutputOffset	thinkphp/library/think/Process.php	/^        $this->incrementalErrorOutputOffset = 0;$/;"	v
incrementalErrorOutputOffset	thinkphp/library/think/Process.php	/^        $this->incrementalErrorOutputOffset = strlen($data);$/;"	v
incrementalErrorOutputOffset	thinkphp/library/think/Process.php	/^    private $incrementalErrorOutputOffset = 0;$/;"	v
incrementalOutputOffset	thinkphp/library/think/Process.php	/^        $this->incrementalOutputOffset      = 0;$/;"	v
incrementalOutputOffset	thinkphp/library/think/Process.php	/^        $this->incrementalOutputOffset = 0;$/;"	v
incrementalOutputOffset	thinkphp/library/think/Process.php	/^        $this->incrementalOutputOffset = strlen($data);$/;"	v
incrementalOutputOffset	thinkphp/library/think/Process.php	/^    private $incrementalOutputOffset      = 0;$/;"	v
index	application/admin/controller/Article.php	/^    public function index()$/;"	f
index	application/admin/controller/Index.php	/^    public function index()$/;"	f
index	application/index/controller/Api.php	/^    public function index()$/;"	f
index	application/index/controller/Index.php	/^    public function index()$/;"	f
index	application/index/controller/News.php	/^    public function index()$/;"	f
index	application/index/controller/Test.php	/^    public function index()$/;"	f
index	application/index/controller/Web.php	/^    public function index()$/;"	f
index	thinkphp/library/think/db/Builder.php	/^            $index = join(",", $index);$/;"	v
index	thinkphp/library/think/template/taglib/Cx.php	/^            $index = $tag['index'];$/;"	v
info	application/admin/controller/Index.php	/^    public function info()$/;"	f
info	application/index/controller/Index.php	/^    public function info()$/;"	f
info	thinkphp/library/think/Console.php	/^            $info = stream_get_contents($pipes[1]);$/;"	v
info	thinkphp/library/think/Db.php	/^        $info = parse_url($dsnStr);$/;"	v
info	thinkphp/library/think/Debug.php	/^            $info  = [];$/;"	v
info	thinkphp/library/think/Debug.php	/^    protected static $info = [];$/;"	v
info	thinkphp/library/think/Loader.php	/^        $info   = pathinfo($url);$/;"	v
info	thinkphp/library/think/Model.php	/^            $info = $this->validate;$/;"	v
info	thinkphp/library/think/Model.php	/^        $info  = $class->getRelationInfo();$/;"	v
info	thinkphp/library/think/Route.php	/^            $info = parse_url($url);$/;"	v
info	thinkphp/library/think/UploadFile.php	/^        $this->info = $file;$/;"	v
info	thinkphp/library/think/UploadFile.php	/^    protected $info = [];$/;"	v
info	thinkphp/library/think/Url.php	/^        $info = parse_url($url);$/;"	v
info	thinkphp/library/think/Validate.php	/^                        $info = $rule;$/;"	v
info	thinkphp/library/think/Validate.php	/^                        $info = $type = $key;$/;"	v
info	thinkphp/library/think/Validate.php	/^                        $info = $type;$/;"	v
info	thinkphp/library/think/Validate.php	/^        $info = date_parse_from_format($rule, $value);$/;"	v
info	thinkphp/library/think/cache/driver/Secache.php	/^                $info = $this->_get_node($hdseq);$/;"	v
info	thinkphp/library/think/cache/driver/Secache.php	/^            $info      = $this->_get_node($offset);$/;"	v
info	thinkphp/library/think/cache/driver/Secache.php	/^            $info = $this->_get_node($node);$/;"	v
info	thinkphp/library/think/cache/driver/Secache.php	/^            $info = unpack('V1' . implode('\/V1', $this->schema_struct), fread($this->_rs, $this->schema_item_size));$/;"	v
info	thinkphp/library/think/cache/driver/Secache.php	/^            $info = unpack('V1max_size\/a*ver', fread($this->_rs, $this->info_size));$/;"	v
info	thinkphp/library/think/cache/driver/Secache.php	/^        $info           = unpack('V1next\/V1prev\/V1data\/V1size\/V1lru_right\/V1lru_left\/H*key', fread($this->_rs, $this->idx_node_size));$/;"	v
info	thinkphp/library/think/cache/driver/Secache.php	/^        $info = $this->_get_node($offset);$/;"	v
info	thinkphp/library/think/cache/driver/Secache.php	/^        $info = array_flip($this->schema_struct);$/;"	v
info	thinkphp/library/think/db/Connection.php	/^                $info = array_change_key_case($info);$/;"	v
info	thinkphp/library/think/db/Connection.php	/^                $info = array_change_key_case($info, CASE_UPPER);$/;"	v
info	thinkphp/library/think/db/Query.php	/^            $info   = $this->connection->getFields($tableName);$/;"	v
info	thinkphp/library/think/db/Query.php	/^            $info  = $class->getRelationInfo();$/;"	v
info	thinkphp/library/think/db/connector/Mysql.php	/^        $info   = [];$/;"	v
info	thinkphp/library/think/db/connector/Oracle.php	/^        $info            = [];$/;"	v
info	thinkphp/library/think/db/connector/Oracle.php	/^        $info   = [];$/;"	v
info	thinkphp/library/think/db/connector/Pgsql.php	/^        $info            = [];$/;"	v
info	thinkphp/library/think/db/connector/Pgsql.php	/^        $info   = [];$/;"	v
info	thinkphp/library/think/db/connector/Sqlite.php	/^        $info            = [];$/;"	v
info	thinkphp/library/think/db/connector/Sqlite.php	/^        $info = [];$/;"	v
info	thinkphp/library/think/db/connector/Sqlsrv.php	/^        $info = [];$/;"	v
info	thinkphp/library/think/log/driver/File.php	/^        $info = '';$/;"	v
info	thinkphp/library/think/log/driver/Sae.php	/^        $info = '';$/;"	v
info	thinkphp/library/think/log/driver/Trace.php	/^        $info = Debug::getFile(true);$/;"	v
info	thinkphp/library/think/model/Relation.php	/^        $info = [$/;"	v
info	thinkphp/library/think/template/driver/Sae.php	/^        $info = array($/;"	v
info_size	thinkphp/library/think/cache/driver/Secache.php	/^    public $info_size        = 20; \/\/保留空间 4+16 maxsize|ver$/;"	v
inheritEnv	thinkphp/library/think/process/Builder.php	/^        $this->inheritEnv = $inheritEnv;$/;"	v
inheritEnv	thinkphp/library/think/process/Builder.php	/^    private $inheritEnv     = true;$/;"	v
inheritEnvironmentVariables	thinkphp/library/think/process/Builder.php	/^    public function inheritEnvironmentVariables($inheritEnv = true)$/;"	f
init	thinkphp/library/think/Cookie.php	/^    public static function init(array $config = [])$/;"	f
init	thinkphp/library/think/Log.php	/^    public static function init($config = [])$/;"	f
init	thinkphp/library/think/Model.php	/^    protected static function init()$/;"	f
init	thinkphp/library/think/Session.php	/^    public static function init(array $config = [])$/;"	f
init	thinkphp/library/think/cache/driver/File.php	/^    private function init()$/;"	f
init	thinkphp/mode/console/App.php	/^    private static function init()$/;"	f
initConnect	thinkphp/library/think/db/Connection.php	/^    protected function initConnect($master = true)$/;"	f
initModule	thinkphp/library/think/App.php	/^    private static function initModule($module, $config)$/;"	f
initialize	thinkphp/library/think/Model.php	/^    protected function initialize()$/;"	f
initialize	thinkphp/library/think/console/command/Command.php	/^    protected function initialize(Input $input, Output $output)$/;"	f
initialized	thinkphp/library/think/Model.php	/^    protected static $initialized = [];$/;"	v
input	thinkphp/helper.php	/^function input($key, $default = null, $filter = null, $merge = false)$/;"	f
input	thinkphp/library/think/Console.php	/^                $input = new Input(['help']);$/;"	v
input	thinkphp/library/think/Console.php	/^            $input = new Input([$this->defaultCommand]);$/;"	v
input	thinkphp/library/think/Console.php	/^        $input  = new Input();$/;"	v
input	thinkphp/library/think/Input.php	/^            $input = explode($depr, trim($_SERVER['PATH_INFO'], $depr));$/;"	v
input	thinkphp/library/think/Process.php	/^        $this->input = $input;$/;"	v
input	thinkphp/library/think/Process.php	/^        $this->input = Utils::validateInput(sprintf('%s::%s', __CLASS__, __FUNCTION__), $input);$/;"	v
input	thinkphp/library/think/Process.php	/^    private $input;$/;"	v
input	thinkphp/library/think/process/Builder.php	/^        $this->input = Utils::validateInput(sprintf('%s::%s', __CLASS__, __FUNCTION__), $input);$/;"	v
input	thinkphp/library/think/process/Builder.php	/^    private $input;$/;"	v
input	thinkphp/library/think/process/pipes/Pipes.php	/^    protected $input;$/;"	v
input	thinkphp/library/think/process/pipes/Unix.php	/^                    $this->input = null;$/;"	v
input	thinkphp/library/think/process/pipes/Unix.php	/^            $this->input = $input;$/;"	v
input	thinkphp/library/think/process/pipes/Windows.php	/^                $this->input = null;$/;"	v
input	thinkphp/library/think/process/pipes/Windows.php	/^            $this->input = $input;$/;"	v
inputBuffer	thinkphp/library/think/process/pipes/Pipes.php	/^    protected $inputBuffer = '';$/;"	v
inputBuffer	thinkphp/library/think/process/pipes/Unix.php	/^                    $this->inputBuffer = (string)substr($this->inputBuffer, $written);$/;"	v
inputBuffer	thinkphp/library/think/process/pipes/Unix.php	/^            $this->inputBuffer = (string)$input;$/;"	v
inputBuffer	thinkphp/library/think/process/pipes/Windows.php	/^                    $this->inputBuffer = (string)substr($this->inputBuffer, $written);$/;"	v
inputBuffer	thinkphp/library/think/process/pipes/Windows.php	/^            $this->inputBuffer = $input;$/;"	v
inputStream	thinkphp/library/think/Console.php	/^            $inputStream = $this->getHelperSet()->get('question')->getInputStream();$/;"	v
inputStream	thinkphp/library/think/console/helper/Question.php	/^        $inputStream  = $this->inputStream ?: STDIN;$/;"	v
inputStream	thinkphp/library/think/console/helper/Question.php	/^        $this->inputStream = $stream;$/;"	v
inputStream	thinkphp/library/think/console/helper/Question.php	/^    private        $inputStream;$/;"	v
insert	thinkphp/library/think/Model.php	/^    protected $insert = [];$/;"	v
insert	thinkphp/library/think/db/Builder.php	/^    public function insert(array $data, $options = [], $replace = false)$/;"	f
insert	thinkphp/library/think/db/Query.php	/^    public function insert(array $data, $replace = false, $getLastInsID = false)$/;"	f
insertAll	thinkphp/library/think/db/Builder.php	/^    public function insertAll($dataSet, $options)$/;"	f
insertAll	thinkphp/library/think/db/Query.php	/^    public function insertAll(array $dataSet)$/;"	f
insertAllSql	thinkphp/library/think/db/Builder.php	/^    protected $insertAllSql = 'INSERT INTO %TABLE% (%FIELD%) %DATA% %COMMENT%';$/;"	v
insertGetId	thinkphp/library/think/db/Query.php	/^    public function insertGetId(array $data, $replace = false)$/;"	f
insertId	thinkphp/library/think/Model.php	/^                $insertId = self::db()->getLastInsID();$/;"	v
insertId	thinkphp/library/think/model/Merge.php	/^                    $insertId = self::db()->getLastInsID();$/;"	v
insertSql	thinkphp/library/think/db/Builder.php	/^    protected $insertSql    = '%INSERT% INTO %TABLE% (%FIELD%) VALUES (%DATA%) %COMMENT%';$/;"	v
inspectConsole	thinkphp/library/think/console/helper/descriptor/Console.php	/^    private function inspectConsole()$/;"	f
instance	thinkphp/library/think/App.php	/^        $instance = Loader::controller(CONTROLLER_NAME, '', Config::get('empty_controller'));$/;"	v
instance	thinkphp/library/think/Cache.php	/^    protected static $instance = [];$/;"	v
instance	thinkphp/library/think/Db.php	/^    private static $instance = null;$/;"	v
instance	thinkphp/library/think/Loader.php	/^    public static function instance($class, $method = '')$/;"	f
instance	thinkphp/library/think/Validate.php	/^    protected static $instance = null;$/;"	v
instance	thinkphp/library/think/View.php	/^    protected static $instance;$/;"	v
instance	thinkphp/library/think/View.php	/^    public static function instance($engine = [], $replace = [])$/;"	f
instance	thinkphp/library/traits/think/Instance.php	/^    protected static $instance = null;$/;"	v
instance	thinkphp/library/traits/think/Instance.php	/^    public static function instance($options = [])$/;"	f
instances	thinkphp/library/think/Db.php	/^    private static $instances = [];$/;"	v
interact	thinkphp/library/think/console/command/Command.php	/^    protected function interact(Input $input, Output $output)$/;"	f
interactive	thinkphp/library/think/console/Input.php	/^        $this->interactive = (bool)$interactive;$/;"	v
interactive	thinkphp/library/think/console/Input.php	/^    protected $interactive = true;$/;"	v
interviewer	thinkphp/library/think/console/helper/Question.php	/^        $interviewer = function () use ($output, $question) {$/;"	v
invokeFunction	thinkphp/library/think/App.php	/^    public static function invokeFunction($function, $vars = [])$/;"	f
invokeMethod	thinkphp/library/think/App.php	/^    public static function invokeMethod($method, $vars = [])$/;"	f
ip	thinkphp/library/think/Validate.php	/^    protected function ip($value, $rule)$/;"	f
is	thinkphp/library/think/Validate.php	/^    protected function is($value, $rule)$/;"	f
isArray	thinkphp/library/think/console/input/Argument.php	/^    public function isArray()$/;"	f
isArray	thinkphp/library/think/console/input/Option.php	/^    public function isArray()$/;"	f
isAssoc	thinkphp/library/think/console/helper/question/Choice.php	/^        $isAssoc      = $this->isAssoc($choices);$/;"	v
isAssoc	thinkphp/library/think/console/helper/question/Question.php	/^    protected function isAssoc($array)$/;"	f
isBind	thinkphp/library/think/db/Query.php	/^    public function isBind($key)$/;"	f
isBreak	thinkphp/library/think/template/taglib/Cx.php	/^        $isBreak  = isset($tag['break']) ? $tag['break'] : '';$/;"	v
isCache	thinkphp/library/think/Template.php	/^    public function isCache($cacheId)$/;"	f
isDebug	thinkphp/library/think/console/output/Nothing.php	/^    public function isDebug()$/;"	f
isDebug	thinkphp/library/think/console/output/Stream.php	/^    public function isDebug()$/;"	f
isDecorated	thinkphp/library/think/console/helper/Helper.php	/^        $isDecorated = $formatter->isDecorated();$/;"	v
isDecorated	thinkphp/library/think/console/output/Formatter.php	/^    public function isDecorated()$/;"	f
isDecorated	thinkphp/library/think/console/output/Nothing.php	/^    public function isDecorated()$/;"	f
isDecorated	thinkphp/library/think/console/output/Stream.php	/^    public function isDecorated()$/;"	f
isDoStart	thinkphp/library/think/Session.php	/^            $isDoStart = true;$/;"	v
isDoStart	thinkphp/library/think/Session.php	/^        $isDoStart = false;$/;"	v
isEnabled	thinkphp/library/think/console/command/Command.php	/^    public function isEnabled()$/;"	f
isExit	thinkphp/library/think/Response.php	/^    protected static $isExit = false;$/;"	v
isExit	thinkphp/library/think/Response.php	/^    public static function isExit($exit = null)$/;"	f
isGeneralTimeout	thinkphp/library/think/process/exception/Timeout.php	/^    public function isGeneralTimeout()$/;"	f
isHidden	thinkphp/library/think/console/helper/question/Question.php	/^    public function isHidden()$/;"	f
isHiddenFallback	thinkphp/library/think/console/helper/question/Question.php	/^    public function isHiddenFallback()$/;"	f
isIdleTimeout	thinkphp/library/think/process/exception/Timeout.php	/^    public function isIdleTimeout()$/;"	f
isInteractive	thinkphp/library/think/console/Input.php	/^    public function isInteractive()$/;"	f
isOutputDisabled	thinkphp/library/think/Process.php	/^    public function isOutputDisabled()$/;"	f
isPk	thinkphp/library/think/Model.php	/^    protected function isPk($key)$/;"	f
isPty	thinkphp/library/think/Process.php	/^    public function isPty()$/;"	f
isPtySupported	thinkphp/library/think/Process.php	/^    public static function isPtySupported()$/;"	f
isQuiet	thinkphp/library/think/console/output/Nothing.php	/^    public function isQuiet()$/;"	f
isQuiet	thinkphp/library/think/console/output/Stream.php	/^    public function isQuiet()$/;"	f
isRequired	thinkphp/library/think/console/input/Argument.php	/^    public function isRequired()$/;"	f
isRunning	thinkphp/library/think/Process.php	/^    public function isRunning()$/;"	f
isSigchildEnabled	thinkphp/library/think/Process.php	/^    protected function isSigchildEnabled()$/;"	f
isSsl	thinkphp/library/think/Route.php	/^    public static function isSsl()$/;"	f
isSsl	thinkphp/library/think/Url.php	/^    public static function isSsl()$/;"	f
isStarted	thinkphp/library/think/Process.php	/^    public function isStarted()$/;"	f
isSuccessful	thinkphp/library/think/Process.php	/^    public function isSuccessful()$/;"	f
isSurroundedBy	thinkphp/library/think/process/Utils.php	/^    private static function isSurroundedBy($arg, $char)$/;"	f
isTerminated	thinkphp/library/think/Process.php	/^    public function isTerminated()$/;"	f
isTty	thinkphp/library/think/Process.php	/^    public function isTty()$/;"	f
isUpdate	thinkphp/library/think/Model.php	/^                $this->isUpdate = true;$/;"	v
isUpdate	thinkphp/library/think/Model.php	/^        $this->isUpdate = $update;$/;"	v
isUpdate	thinkphp/library/think/Model.php	/^        $this->isUpdate = true;$/;"	v
isUpdate	thinkphp/library/think/Model.php	/^    protected $isUpdate = false;$/;"	v
isUpdate	thinkphp/library/think/Model.php	/^    public function isUpdate($update = true)$/;"	f
isUpdate	thinkphp/library/think/model/Merge.php	/^                $this->isUpdate = true;$/;"	v
isValid	thinkphp/library/think/UploadFile.php	/^    public function isValid($rule = [])$/;"	f
isValueOptional	thinkphp/library/think/console/input/Option.php	/^    public function isValueOptional()$/;"	f
isValueRequired	thinkphp/library/think/console/input/Option.php	/^    public function isValueRequired()$/;"	f
isVerbose	thinkphp/library/think/console/output/Nothing.php	/^    public function isVerbose()$/;"	f
isVerbose	thinkphp/library/think/console/output/Stream.php	/^    public function isVerbose()$/;"	f
isVeryVerbose	thinkphp/library/think/console/output/Nothing.php	/^    public function isVeryVerbose()$/;"	f
isVeryVerbose	thinkphp/library/think/console/output/Stream.php	/^    public function isVeryVerbose()$/;"	f
is_debug	thinkphp/library/think/log/driver/Sae.php	/^            $is_debug = in_array($_SERVER['HTTP_APPVERSION'], explode(',', $appSettings['debug'])) ? true : false;$/;"	v
is_debug	thinkphp/library/think/log/driver/Sae.php	/^        static $is_debug = null;$/;"	v
item	thinkphp/library/think/Model.php	/^        $item = [];$/;"	v
item	thinkphp/library/think/Route.php	/^                $item  = [];$/;"	v
item	thinkphp/library/think/Route.php	/^                $item = substr($item, 1, -1);$/;"	v
item	thinkphp/library/think/db/Builder.php	/^                        $item  = [];$/;"	v
item	thinkphp/library/think/db/Builder.php	/^                $item = $this->parseKey($key);$/;"	v
item	thinkphp/library/think/db/Builder.php	/^            $item = array_pop($val);$/;"	v
item	thinkphp/library/think/model/Merge.php	/^        $item = [];$/;"	v
item	thinkphp/library/think/template/taglib/Cx.php	/^        $item   = !empty($tag['id']) ? $tag['id'] : $tag['item'];$/;"	v
join	thinkphp/library/think/db/Query.php	/^                $join = trim($join);$/;"	v
join	thinkphp/library/think/db/Query.php	/^    public function join($join, $condition = null, $type = 'INNER')$/;"	f
joinName	thinkphp/library/think/db/Query.php	/^                    $joinName  = Loader::parseName(basename(str_replace('\\\\', '\/', $this->options['model'])));$/;"	v
joinStr	thinkphp/library/think/db/Builder.php	/^            $joinStr = ' ' . implode(' ', $join) . ' ';$/;"	v
joinStr	thinkphp/library/think/db/Builder.php	/^        $joinStr = '';$/;"	v
joinTable	thinkphp/library/think/db/Query.php	/^                    $joinTable = $this->getTable();$/;"	v
jsonData	thinkphp/library/think/cache/driver/Redis.php	/^        $jsonData  = json_decode( $value, true );$/;"	v
jsonFormatProtect	thinkphp/library/think/Cookie.php	/^    private static function jsonFormatProtect(&$val, $key, $type = 'encode')$/;"	f
jsonSerialize	thinkphp/library/think/Model.php	/^    public function jsonSerialize()$/;"	f
key	thinkphp/helper.php	/^            $key = substr($key, $pos + 1);$/;"	v
key	thinkphp/helper.php	/^        $key = substr($key, 1);$/;"	v
key	thinkphp/library/think/Lang.php	/^        $key   = strtolower($name);$/;"	v
key	thinkphp/library/think/Route.php	/^                            $key = array_shift($route);$/;"	v
key	thinkphp/library/think/Route.php	/^                        $key    = substr($key, 1, -1);$/;"	v
key	thinkphp/library/think/Route.php	/^                        $key = array_shift($val);$/;"	v
key	thinkphp/library/think/Route.php	/^                    $key = self::$bind['group'];$/;"	v
key	thinkphp/library/think/Url.php	/^                        $key = array_shift($route);$/;"	v
key	thinkphp/library/think/Validate.php	/^                $key  = $item[0];$/;"	v
key	thinkphp/library/think/Validate.php	/^        $key = strval(isset($rule[3]) ? $rule[3] : $db->getPk());$/;"	v
key	thinkphp/library/think/cache/driver/Apc.php	/^                    $key = array_shift($queue);$/;"	v
key	thinkphp/library/think/cache/driver/Db.php	/^                    $key = array_shift($queue);$/;"	v
key	thinkphp/library/think/cache/driver/File.php	/^                    $key = array_shift($queue);$/;"	v
key	thinkphp/library/think/cache/driver/Memcache.php	/^                    $key = array_shift($queue);$/;"	v
key	thinkphp/library/think/cache/driver/Memcached.php	/^                    $key = array_shift($queue);$/;"	v
key	thinkphp/library/think/cache/driver/Redis.php	/^                    $key = array_shift($queue);$/;"	v
key	thinkphp/library/think/cache/driver/Sae.php	/^            $key = array_shift($value);$/;"	v
key	thinkphp/library/think/cache/driver/Secache.php	/^                    $key = array_shift($queue);$/;"	v
key	thinkphp/library/think/cache/driver/Secache.php	/^        $key  = md5($name);$/;"	v
key	thinkphp/library/think/cache/driver/Wincache.php	/^                    $key = array_shift($queue);$/;"	v
key	thinkphp/library/think/cache/driver/Xcache.php	/^                    $key = array_shift($queue);$/;"	v
key	thinkphp/library/think/console/command/Command.php	/^        $key = $short ? 'short' : 'long';$/;"	v
key	thinkphp/library/think/console/helper/descriptor/Console.php	/^                $key = '_global';$/;"	v
key	thinkphp/library/think/console/helper/descriptor/Console.php	/^            $key = $this->console->extractNamespace($name, 1);$/;"	v
key	thinkphp/library/think/db/Builder.php	/^            $key = $this->parseKey($key);$/;"	v
key	thinkphp/library/think/db/Query.php	/^                $key       = $key ?: $key1;$/;"	v
key	thinkphp/library/think/db/Query.php	/^            $key       = is_string($cache['key']) ? $cache['key'] : md5(serialize($options));$/;"	v
key	thinkphp/library/think/db/Query.php	/^            $key    = is_string($cache['key']) ? $cache['key'] : md5($field . serialize($this->options));$/;"	v
key	thinkphp/library/think/db/Query.php	/^            $key    = is_string($cache['key']) ? $cache['key'] : md5(serialize($options));$/;"	v
key	thinkphp/library/think/db/Query.php	/^            $key    = true;$/;"	v
key	thinkphp/library/think/db/Query.php	/^            $key = isset($alias) ? $alias . '.' . $pk : $pk;$/;"	v
key	thinkphp/library/think/db/builder/Mysql.php	/^            $key                = 'jsn_extract(' . $field . ', \\'$.\\'.' . $name . ')';$/;"	v
key	thinkphp/library/think/db/builder/Mysql.php	/^            $key = '`' . $key . '`';$/;"	v
key	thinkphp/library/think/db/builder/Mysql.php	/^        $key = trim($key);$/;"	v
key	thinkphp/library/think/db/builder/Oracle.php	/^            $key                = $field . '."' . $name . '"';$/;"	v
key	thinkphp/library/think/db/builder/Oracle.php	/^        $key = trim($key);$/;"	v
key	thinkphp/library/think/db/builder/Pgsql.php	/^            $key                = $field . '->>\\'' . $name . '\\'';$/;"	v
key	thinkphp/library/think/db/builder/Pgsql.php	/^        $key = trim($key);$/;"	v
key	thinkphp/library/think/db/builder/Sqlsrv.php	/^            $key = '[' . $key . ']';$/;"	v
key	thinkphp/library/think/db/builder/Sqlsrv.php	/^        $key = trim($key);$/;"	v
key	thinkphp/library/think/log/driver/Socket.php	/^            $key = 'HTTP_SOCKETLOG';$/;"	v
key	thinkphp/library/think/log/driver/Socket.php	/^        $key = 'HTTP_USER_AGENT';$/;"	v
key	thinkphp/library/think/template/taglib/Cx.php	/^        $key    = !empty($tag['key']) ? $tag['key'] : 'i';$/;"	v
key	thinkphp/library/think/template/taglib/Cx.php	/^        $key    = !empty($tag['key']) ? $tag['key'] : 'key';$/;"	v
key1	thinkphp/library/think/db/Query.php	/^                $key1      = array_shift($fields);$/;"	v
key2	thinkphp/library/think/db/Query.php	/^                $key2      = $fields ? array_shift($fields) : '';$/;"	v
kv	thinkphp/library/think/cache/driver/Sae.php	/^            $kv = new \\SaeKV();$/;"	v
kv	thinkphp/library/think/cache/driver/Sae.php	/^        $kv         = $this->getKv();$/;"	v
kv	thinkphp/library/think/cache/driver/Sae.php	/^        static $kv;$/;"	v
label	thinkphp/library/think/Debug.php	/^        $label = (null === $label) ? '' : rtrim($label) . ':';$/;"	v
lang	thinkphp/helper.php	/^function lang($name, $vars = [], $lang = '')$/;"	f
lang	thinkphp/library/think/Lang.php	/^            $lang = array_change_key_case($_lang) + $lang;$/;"	v
lang	thinkphp/library/think/Lang.php	/^        $lang = [];$/;"	v
lang	thinkphp/library/think/Lang.php	/^    private static $lang = [];$/;"	v
langCookieVar	thinkphp/library/think/Lang.php	/^    protected static $langCookieVar = 'think_var';$/;"	v
langDetectVar	thinkphp/library/think/Lang.php	/^    protected static $langDetectVar = 'lang';$/;"	v
langSet	thinkphp/library/think/Lang.php	/^            $langSet = strtolower($_GET[self::$langDetectVar]);$/;"	v
langSet	thinkphp/library/think/Lang.php	/^            $langSet = strtolower($matches[1]);$/;"	v
langSet	thinkphp/library/think/Lang.php	/^            $langSet = strtolower(Cookie::get(self::$langCookieVar));$/;"	v
langSet	thinkphp/library/think/Lang.php	/^        $langSet = '';$/;"	v
last	thinkphp/library/think/Route.php	/^                $last  = array_pop($array);$/;"	v
lastError	thinkphp/library/think/process/pipes/Pipes.php	/^        $lastError = error_get_last();$/;"	v
lastId	thinkphp/library/think/db/Query.php	/^            $lastId    = is_array($end) ? $end[$column] : $end->$column;$/;"	v
lastInsID	thinkphp/library/think/db/Connection.php	/^                $this->lastInsID = $this->linkID->lastInsertId();$/;"	v
lastInsID	thinkphp/library/think/db/Connection.php	/^    protected $lastInsID;$/;"	v
lastInsID	thinkphp/library/think/db/connector/Oracle.php	/^                $this->lastInsID = $this->linkID->lastInsertId();$/;"	v
lastOutputTime	thinkphp/library/think/Process.php	/^        $this->lastOutputTime = microtime(true);$/;"	v
lastOutputTime	thinkphp/library/think/Process.php	/^    private $lastOutputTime;$/;"	v
laterOptions	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^            $laterOptions = [];$/;"	v
latest	thinkphp/library/think/Process.php	/^        $latest = substr($data, $this->incrementalErrorOutputOffset);$/;"	v
latest	thinkphp/library/think/Process.php	/^        $latest = substr($data, $this->incrementalOutputOffset);$/;"	v
latestSignal	thinkphp/library/think/Process.php	/^        $this->latestSignal                 = null;$/;"	v
latestSignal	thinkphp/library/think/Process.php	/^        $this->latestSignal = $signal;$/;"	v
latestSignal	thinkphp/library/think/Process.php	/^    private $latestSignal;$/;"	v
layer	thinkphp/library/think/Loader.php	/^        $layer            = $layer ?: CONTROLLER_LAYER;$/;"	v
layer	thinkphp/library/think/Loader.php	/^        $layer            = $layer ?: VALIDATE_LAYER;$/;"	v
layout	thinkphp/library/think/Template.php	/^    public function layout($name)$/;"	f
layoutFile	thinkphp/library/think/Template.php	/^                $layoutFile = $this->parseTemplateFile($array['name']);$/;"	v
layoutFile	thinkphp/library/think/Template.php	/^                $layoutFile = $this->parseTemplateFile($this->config['layout_name']);$/;"	v
lazyWrite	thinkphp/library/think/db/Query.php	/^    protected function lazyWrite($guid, $step, $lazyTime)$/;"	f
len	thinkphp/library/think/Console.php	/^                    $len = max($lineLength, $len);$/;"	v
len	thinkphp/library/think/Console.php	/^            $len = $this->stringWidth($title);$/;"	v
len	thinkphp/library/think/cache/driver/File.php	/^            $len = $this->options['path_level'];$/;"	v
len	thinkphp/library/think/console/Input.php	/^        $len = strlen($name);$/;"	v
len	thinkphp/library/think/console/helper/Formatter.php	/^            $len     = max($this->strlen($message) + ($large ? 4 : 2), $len);$/;"	v
len	thinkphp/library/think/console/helper/Formatter.php	/^        $len   = 0;$/;"	v
len1	thinkphp/library/think/Route.php	/^        $len1 = substr_count($url, '\/');$/;"	v
len2	thinkphp/library/think/Route.php	/^        $len2 = substr_count($rule, '\/');$/;"	v
length	thinkphp/library/think/Loader.php	/^                $length = strlen($namespace);$/;"	v
length	thinkphp/library/think/Template.php	/^                        $length               = $match[0][1] - $start;$/;"	v
length	thinkphp/library/think/Template.php	/^            $length = count($varArray);$/;"	v
length	thinkphp/library/think/Validate.php	/^        $length = strlen((string) $value); \/\/ 当前数据长度$/;"	v
length	thinkphp/library/think/Validate.php	/^        $length = strlen((string) $value);$/;"	v
length	thinkphp/library/think/Validate.php	/^    protected function length($value, $rule)$/;"	f
length	thinkphp/library/think/template/taglib/Cx.php	/^        $length = !empty($tag['length']) && is_numeric($tag['length']) ? intval($tag['length']) : 'null';$/;"	v
lev	thinkphp/library/think/Console.php	/^                $lev = levenshtein($subname, $parts[$i]);$/;"	v
lev	thinkphp/library/think/Console.php	/^            $lev = levenshtein($name, $item);$/;"	v
limit	thinkphp/library/think/db/Query.php	/^    public function limit($offset, $length = null)$/;"	f
limit	thinkphp/library/think/db/builder/Oracle.php	/^            $limit = explode(',', $limit);$/;"	v
limit	thinkphp/library/think/db/builder/Pgsql.php	/^            $limit = explode(',', $limit);$/;"	v
limit	thinkphp/library/think/db/builder/Sqlite.php	/^            $limit = explode(',', $limit);$/;"	v
limit	thinkphp/library/think/db/builder/Sqlsrv.php	/^        $limit = explode(',', $limit);$/;"	v
limitStr	thinkphp/library/think/db/builder/Oracle.php	/^                $limitStr = "(numrow>" . $limit[0] . ") AND (numrow<=" . ($limit[0] + $limit[1]) . ")";$/;"	v
limitStr	thinkphp/library/think/db/builder/Oracle.php	/^                $limitStr = "(numrow>0 AND numrow<=" . $limit[0] . ")";$/;"	v
limitStr	thinkphp/library/think/db/builder/Oracle.php	/^        $limitStr = '';$/;"	v
limitStr	thinkphp/library/think/db/builder/Pgsql.php	/^        $limitStr = '';$/;"	v
limitStr	thinkphp/library/think/db/builder/Sqlite.php	/^        $limitStr = '';$/;"	v
limitStr	thinkphp/library/think/db/builder/Sqlsrv.php	/^            $limitStr = '(T1.ROW_NUMBER BETWEEN ' . $limit[0] . ' + 1 AND ' . $limit[0] . ' + ' . $limit[1] . ')';$/;"	v
limitStr	thinkphp/library/think/db/builder/Sqlsrv.php	/^            $limitStr = '(T1.ROW_NUMBER BETWEEN 1 AND ' . $limit[0] . ")";$/;"	v
line	thinkphp/library/think/Console.php	/^                    $line     = isset($trace[$i]['line']) ? $trace[$i]['line'] : 'n\/a';$/;"	v
line	thinkphp/library/think/Console.php	/^            $line    = $char;$/;"	v
line	thinkphp/library/think/Console.php	/^        $line       = '';$/;"	v
line	thinkphp/library/think/Error.php	/^        $line  = $exception->getLine();$/;"	v
line	thinkphp/library/think/exception/ErrorException.php	/^        $this->line     = $line;$/;"	v
lineLength	thinkphp/library/think/Console.php	/^                    $lineLength = $this->stringWidth(preg_replace('\/\\[[^m]*m\/', '', $formatter->format($line))) + 4;$/;"	v
lines	thinkphp/library/think/Console.php	/^            $lines     = [];$/;"	v
lines	thinkphp/library/think/Console.php	/^        $lines      = [];$/;"	v
lines	thinkphp/library/think/console/helper/Formatter.php	/^        $lines = [];$/;"	v
linkID	thinkphp/library/think/db/Connection.php	/^                $this->linkID = $this->multiConnect($master);$/;"	v
linkID	thinkphp/library/think/db/Connection.php	/^                $this->linkID = $this->transPDO;$/;"	v
linkID	thinkphp/library/think/db/Connection.php	/^            $this->linkID = $this->connect();$/;"	v
linkID	thinkphp/library/think/db/Connection.php	/^        $this->linkID = null;$/;"	v
linkID	thinkphp/library/think/db/Connection.php	/^    protected $linkID;$/;"	v
links	thinkphp/library/think/Model.php	/^    private static $links = [];$/;"	v
links	thinkphp/library/think/db/Connection.php	/^    protected $links = [];$/;"	v
list	thinkphp/library/think/Build.php	/^            $list = [$/;"	v
list	thinkphp/library/think/model/Relation.php	/^        $list = $model->where($where)->where($closure)->with($subRelation)->select();$/;"	v
list	thinkphp/library/think/model/Relation.php	/^        $list = $this->belongsToManyQuery($model, $this->middle, $localKey, $foreignKey, $where)->with($subRelation)->select();$/;"	v
listAll	application/admin/controller/Article.php	/^    public function listAll()$/;"	f
listOne	application/admin/controller/Article.php	/^    public function listOne()$/;"	f
listRows	thinkphp/library/think/db/Query.php	/^            $listRows              = $listRows > 0 ? $listRows : (is_numeric($options['limit']) ? $options['limit'] : 20);$/;"	v
listen	thinkphp/library/think/Hook.php	/^    public static function listen($tag, &$params = null)$/;"	f
listen	thinkphp/library/think/db/Connection.php	/^    public function listen($callback)$/;"	f
literal	thinkphp/library/think/Template.php	/^                $this->literal = [];$/;"	v
literal	thinkphp/library/think/Template.php	/^    private $literal     = [];$/;"	v
load	thinkphp/library/think/Config.php	/^    public static function load($file, $name = '', $range = '')$/;"	f
load	thinkphp/library/think/Lang.php	/^    public static function load($file, $range = '')$/;"	f
load	thinkphp/library/think/Loader.php	/^    protected static $load = [];$/;"	v
load_trait	thinkphp/helper.php	/^function load_trait($class, $ext = EXT)$/;"	f
localKey	thinkphp/library/think/Model.php	/^        $localKey   = $localKey ?: $name . '_id';$/;"	v
localKey	thinkphp/library/think/Model.php	/^        $localKey   = $localKey ?: $this->getPk();$/;"	v
localKey	thinkphp/library/think/model/Relation.php	/^            $localKey   = $this->localKey;$/;"	v
localKey	thinkphp/library/think/model/Relation.php	/^        $localKey   = $this->localKey;$/;"	v
localKey	thinkphp/library/think/model/Relation.php	/^        $this->localKey   = $localKey;$/;"	v
localKey	thinkphp/library/think/model/Relation.php	/^        $this->localKey   = $otherKey;$/;"	v
localKey	thinkphp/library/think/model/Relation.php	/^    protected $localKey;$/;"	v
lock	thinkphp/library/think/cache/driver/Secache.php	/^    public function lock($is_block, $whatever = false)$/;"	f
lock	thinkphp/library/think/db/Query.php	/^    public function lock($lock = false)$/;"	f
locked	thinkphp/library/think/cache/driver/Secache.php	/^            $locked = true;$/;"	v
locked	thinkphp/library/think/cache/driver/Secache.php	/^        $locked = false;$/;"	v
lockfile	thinkphp/library/think/Build.php	/^        $lockfile = APP_PATH . 'build.lock';$/;"	v
log	thinkphp/library/think/Error.php	/^            $log = "[{$data['code']}]{$data['message']}";$/;"	v
log	thinkphp/library/think/Error.php	/^            $log = "[{$data['code']}]{$data['message']}[{$data['file']}:{$data['line']}]";$/;"	v
log	thinkphp/library/think/Log.php	/^    protected static $log = [];$/;"	v
log	thinkphp/library/think/db/Connection.php	/^                $log     = $this->queryStr . ' [ RunTime:' . $runtime . 's ]';$/;"	v
logicalPathPsr0	thinkphp/library/think/Loader.php	/^            $logicalPathPsr0 = strtr($class, '_', DS) . $ext;$/;"	v
logicalPathPsr0	thinkphp/library/think/Loader.php	/^            $logicalPathPsr0 = substr($logicalPathPsr4, 0, $pos + 1)$/;"	v
logicalPathPsr4	thinkphp/library/think/Loader.php	/^        $logicalPathPsr4 = strtr($class, '\\\\', DS) . $ext;$/;"	v
logs	thinkphp/library/think/log/driver/Socket.php	/^        $logs = array($/;"	v
logstr	thinkphp/library/think/log/driver/Sae.php	/^        $logstr = "[{$now}] {$_SERVER['SERVER_ADDR']} {$_SERVER['REMOTE_ADDR']} {$_SERVER['REQUEST_URI']}\\r\\n{$info}\\r\\n";$/;"	v
lru_head	thinkphp/library/think/cache/driver/Secache.php	/^        $lru_head = $this->_get_schema($schema_id, 'lru_head');$/;"	v
lru_tail	thinkphp/library/think/cache/driver/Secache.php	/^        $lru_tail = $this->_get_schema($schema_id, 'lru_tail');$/;"	v
lt	thinkphp/library/think/Validate.php	/^    protected function lt($value, $rule)$/;"	f
m	thinkphp/library/think/db/Connection.php	/^        $m = floor(mt_rand(0, $this->config['master_num'] - 1));$/;"	v
m1	thinkphp/library/think/Route.php	/^        $m1  = explode('\/', $url);$/;"	v
m2	thinkphp/library/think/Route.php	/^        $m2  = explode('\/', $rule);$/;"	v
make	thinkphp/library/think/Validate.php	/^    public static function make($rules = [], $message = [])$/;"	f
map	thinkphp/library/think/Loader.php	/^            $map = require VENDOR_PATH . 'composer\/autoload_namespaces.php';$/;"	v
map	thinkphp/library/think/Loader.php	/^            $map = require VENDOR_PATH . 'composer\/autoload_psr4.php';$/;"	v
map	thinkphp/library/think/Loader.php	/^    protected static $map = [];$/;"	v
map	thinkphp/library/think/Route.php	/^    private static $map = [];$/;"	v
map	thinkphp/library/think/Route.php	/^    public static function map($map = '', $route = '')$/;"	f
mapFields	thinkphp/library/think/model/Merge.php	/^    protected $mapFields            = []; \/\/  需要处理的模型映射字段，避免混淆 array( id => 'user.id'  )$/;"	v
maps	thinkphp/library/think/Url.php	/^        $maps = Route::map();$/;"	v
master	thinkphp/library/think/db/Query.php	/^    public function master()$/;"	f
master	thinkphp/library/think/model/Merge.php	/^        $master = basename(str_replace('\\\\', '\/', get_called_class()));$/;"	v
match	thinkphp/library/think/Route.php	/^                    $match = array_slice($match, 0, count($value));$/;"	v
match	thinkphp/library/think/Route.php	/^    private static function match($url, $rule, $pattern)$/;"	f
match	thinkphp/library/think/Template.php	/^                $match = array_pop($matches[0]);$/;"	v
match	thinkphp/library/think/Url.php	/^                $match = true;$/;"	v
match	thinkphp/library/think/model/Relation.php	/^    protected function match($model, $relation, &$result)$/;"	f
matches	thinkphp/library/think/console/helper/Question.php	/^                    $matches    = $autocomplete;$/;"	v
matches	thinkphp/library/think/console/helper/Question.php	/^        $matches    = $autocomplete;$/;"	v
max	thinkphp/library/think/Validate.php	/^    protected function max($value, $rule)$/;"	f
max	thinkphp/library/think/db/Query.php	/^    public function max($field = '*')$/;"	f
max_size	thinkphp/library/think/cache/driver/Secache.php	/^                $this->max_size = $info['max_size'];$/;"	v
max_size	thinkphp/library/think/cache/driver/Secache.php	/^            $this->max_size = $this->_parse_str_size(SECACHE_SIZE, 15728640); \/\/default:15m$/;"	v
mc	thinkphp/library/think/template/driver/Sae.php	/^        $this->mc = @memcache_init();$/;"	v
mc	thinkphp/library/think/template/driver/Sae.php	/^    private $mc;$/;"	v
md5	thinkphp/library/think/Cache.php	/^        $md5 = md5(serialize($options));$/;"	v
md5	thinkphp/library/think/Db.php	/^        $md5 = md5(serialize($config));$/;"	v
mem	thinkphp/library/think/Debug.php	/^    protected static $mem = [];$/;"	v
mem	thinkphp/library/think/log/driver/Trace.php	/^        $mem     = number_format((memory_get_usage() - START_MEM) \/ 1024, 2);$/;"	v
memory_str	thinkphp/library/think/log/driver/File.php	/^        $memory_str = " [内存消耗：{$memory_use}kb]";$/;"	v
memory_str	thinkphp/library/think/log/driver/Sae.php	/^        $memory_str = " [内存消耗：{$memory_use}kb]";$/;"	v
memory_str	thinkphp/library/think/log/driver/Socket.php	/^        $memory_str = " [内存消耗：{$memory_use}kb]";$/;"	v
memory_use	thinkphp/library/think/log/driver/File.php	/^        $memory_use = number_format((memory_get_usage() - START_MEM) \/ 1024, 2);$/;"	v
memory_use	thinkphp/library/think/log/driver/Sae.php	/^        $memory_use = number_format((memory_get_usage() - START_MEM) \/ 1024, 2);$/;"	v
memory_use	thinkphp/library/think/log/driver/Socket.php	/^        $memory_use = number_format((memory_get_usage() - START_MEM) \/ 1024, 2);$/;"	v
mergeConsoleDefinition	thinkphp/library/think/console/command/Command.php	/^    public function mergeConsoleDefinition($mergeArgs = true)$/;"	f
message	thinkphp/library/think/Console.php	/^            $message = sprintf('Command "%s" is not defined.', $name);$/;"	v
message	thinkphp/library/think/Console.php	/^            $message = sprintf('There are no commands defined in the "%s" namespace.', $namespace);$/;"	v
message	thinkphp/library/think/Validate.php	/^                        $message = $msg[$i];$/;"	v
message	thinkphp/library/think/Validate.php	/^                        $message = $this->getRuleMsg($field, $title, $info, $rule);$/;"	v
message	thinkphp/library/think/Validate.php	/^            $this->message = array_merge($this->message, $name);$/;"	v
message	thinkphp/library/think/Validate.php	/^        $this->message = array_merge($this->message, $message);$/;"	v
message	thinkphp/library/think/Validate.php	/^    protected $message = [];$/;"	v
message	thinkphp/library/think/Validate.php	/^    public function message($name, $message = '')$/;"	f
message	thinkphp/library/think/console/helper/Debug.php	/^        $message = '';$/;"	v
message	thinkphp/library/think/console/helper/Debug.php	/^        $message = sprintf("%s%s<bg=red;fg=white> %s <\/> <fg=red>%s<\/>\\n", $trailingEOL, $this->getBorder($id), $prefix, $message);$/;"	v
message	thinkphp/library/think/console/helper/Formatter.php	/^            $message = OutputFormatter::escape($message);$/;"	v
message	thinkphp/library/think/console/helper/Process.php	/^            $message = $process->isSuccessful() ? 'Command ran successfully' : sprintf('%s Command did not run successfully', $process->getExitCode());$/;"	v
message	thinkphp/library/think/console/helper/Question.php	/^            $message = $question->getPrompt();$/;"	v
message	thinkphp/library/think/console/helper/Question.php	/^            $message = $this->getHelperSet()->get('formatter')->formatBlock($error->getMessage(), 'error');$/;"	v
message	thinkphp/library/think/console/helper/Question.php	/^            $message = '<error>' . $error->getMessage() . '<\/error>';$/;"	v
message	thinkphp/library/think/console/helper/Question.php	/^        $message = $question->getQuestion();$/;"	v
message	thinkphp/library/think/console/output/Stream.php	/^                    $message = $this->formatter->format($message);$/;"	v
message	thinkphp/library/think/console/output/Stream.php	/^                    $message = strip_tags($this->formatter->format($message));$/;"	v
message	thinkphp/library/think/exception/DbException.php	/^        $this->message  = $message;$/;"	v
message	thinkphp/library/think/exception/ErrorException.php	/^        $this->message  = $message;$/;"	v
messages	thinkphp/library/think/Console.php	/^            $messages   = ['', ''];$/;"	v
messages	thinkphp/library/think/console/helper/Formatter.php	/^            $messages = [$messages];$/;"	v
messages	thinkphp/library/think/console/helper/Formatter.php	/^        $messages = $large ? [str_repeat(' ', $len)] : [];$/;"	v
messages	thinkphp/library/think/console/helper/Question.php	/^            $messages = (array)$question->getQuestion();$/;"	v
messages	thinkphp/library/think/console/output/Stream.php	/^        $messages = (array)$messages;$/;"	v
method	thinkphp/helper.php	/^            $method = 'param';$/;"	v
method	thinkphp/helper.php	/^        $method = 'param';$/;"	v
method	thinkphp/helper.php	/^        $method = substr($key, 0, $pos);$/;"	v
method	thinkphp/library/think/App.php	/^                $method = new \\ReflectionMethod($instance, '_empty');$/;"	v
method	thinkphp/library/think/Input.php	/^                $method = 'delete';$/;"	v
method	thinkphp/library/think/Input.php	/^                $method = 'get';$/;"	v
method	thinkphp/library/think/Input.php	/^                $method = 'post';$/;"	v
method	thinkphp/library/think/Input.php	/^                $method = 'put';$/;"	v
method	thinkphp/library/think/Model.php	/^                $method = 'scope' . $scope;$/;"	v
method	thinkphp/library/think/Model.php	/^            $method = 'scope' . $method;$/;"	v
method	thinkphp/library/think/Model.php	/^            $method = 'set' . Loader::parseName($name, 1) . 'Attr';$/;"	v
method	thinkphp/library/think/Model.php	/^        $method = 'get' . Loader::parseName($name, 1) . 'Attr';$/;"	v
method	thinkphp/library/think/Route.php	/^                    $method = !empty($array[1]) ? $array[1] : Config::get('default_action');$/;"	v
method	thinkphp/library/think/Validate.php	/^    protected function method($value, $rule)$/;"	f
method	thinkphp/library/think/View.php	/^        $method = $renderContent ? 'display' : 'fetch';$/;"	v
method	thinkphp/library/think/controller/Rest.php	/^            $method = $this->restDefaultMethod;$/;"	v
method	thinkphp/library/think/controller/Rest.php	/^        $method = strtolower($_SERVER['REQUEST_METHOD']);$/;"	v
method	thinkphp/library/think/log/driver/File.php	/^        $method = REQUEST_METHOD;$/;"	v
method	thinkphp/library/think/template/TagLib.php	/^                    $method = '_' . $name;$/;"	v
method	thinkphp/library/think/template/TagLib.php	/^                $method = '_' . $name;$/;"	v
methodPrefix	thinkphp/library/think/Route.php	/^    private static $methodPrefix = [$/;"	v
methods	thinkphp/library/think/controller/Hprose.php	/^            $methods = $this->allowMethodList;$/;"	v
methods	thinkphp/library/think/controller/Hprose.php	/^            $methods = array_diff($methods, array('__construct', '__call', '_initialize'));$/;"	v
methods	thinkphp/library/think/controller/Hprose.php	/^            $methods = get_class_methods($this);$/;"	v
methods	thinkphp/library/think/controller/Rpc.php	/^            $methods = $this->allowMethodList;$/;"	v
methods	thinkphp/library/think/controller/Rpc.php	/^            $methods = array_diff($methods, array('__construct', '__call', '_initialize'));$/;"	v
methods	thinkphp/library/think/controller/Rpc.php	/^            $methods = get_class_methods($this);$/;"	v
middle	thinkphp/library/think/model/Relation.php	/^        $this->middle     = $table;$/;"	v
middle	thinkphp/library/think/model/Relation.php	/^    protected $middle;$/;"	v
min	thinkphp/library/think/Validate.php	/^    protected function min($value, $rule)$/;"	f
min	thinkphp/library/think/db/Query.php	/^    public function min($field = '*')$/;"	f
min_size	thinkphp/library/think/cache/driver/Secache.php	/^    public $min_size      = 10240; \/\/10M最小值$/;"	v
mod	thinkphp/library/think/template/taglib/Cx.php	/^                $mod = (int) $tag['mod'];$/;"	v
mod	thinkphp/library/think/template/taglib/Cx.php	/^        $mod    = isset($tag['mod']) ? $tag['mod'] : '2';$/;"	v
mode	thinkphp/library/think/console/input/Argument.php	/^            $mode = self::OPTIONAL;$/;"	v
mode	thinkphp/library/think/console/input/Argument.php	/^        $this->mode        = $mode;$/;"	v
mode	thinkphp/library/think/console/input/Argument.php	/^    private $mode;$/;"	v
mode	thinkphp/library/think/console/input/Option.php	/^            $mode = self::VALUE_NONE;$/;"	v
mode	thinkphp/library/think/console/input/Option.php	/^        $this->mode        = $mode;$/;"	v
mode	thinkphp/library/think/console/input/Option.php	/^    private $mode;$/;"	v
mode	thinkphp/start.php	/^$mode = require MODE_PATH . APP_MODE . EXT;$/;"	v
model	thinkphp/helper.php	/^function model($name = '', $layer = MODEL_LAYER)$/;"	f
model	thinkphp/library/think/Loader.php	/^                $model = new $class();$/;"	v
model	thinkphp/library/think/Loader.php	/^            $model = new $class();$/;"	v
model	thinkphp/library/think/Loader.php	/^    public static function model($name = '', $layer = MODEL_LAYER)$/;"	f
model	thinkphp/library/think/Model.php	/^            $model = implode('\\\\', $path);$/;"	v
model	thinkphp/library/think/Model.php	/^        $model      = $this->parseModel($model);$/;"	v
model	thinkphp/library/think/Model.php	/^        $model = $class->$relation();$/;"	v
model	thinkphp/library/think/Model.php	/^        $model = get_called_class();$/;"	v
model	thinkphp/library/think/Model.php	/^        $model = new static();$/;"	v
model	thinkphp/library/think/db/Query.php	/^                $model = $options['model'];$/;"	v
model	thinkphp/library/think/db/Query.php	/^            $model = $class->$relation();$/;"	v
model	thinkphp/library/think/db/Query.php	/^    public function model($model)$/;"	f
model	thinkphp/library/think/model/Relation.php	/^                $model                   = new $this->model;$/;"	v
model	thinkphp/library/think/model/Relation.php	/^            $model      = $this->parent->$relation();$/;"	v
model	thinkphp/library/think/model/Relation.php	/^            $model = $this->model;$/;"	v
model	thinkphp/library/think/model/Relation.php	/^            $model = $this->parent->$relation();$/;"	v
model	thinkphp/library/think/model/Relation.php	/^            $model = new $this->model;$/;"	v
model	thinkphp/library/think/model/Relation.php	/^        $this->model      = $model;$/;"	v
model	thinkphp/library/think/model/Relation.php	/^    protected $model;$/;"	v
modelName	thinkphp/library/think/model/Relation.php	/^        $modelName = Loader::parseName(basename(str_replace('\\\\', '\/', $model)));$/;"	v
module	thinkphp/library/think/App.php	/^                    $module = $maps[MODULE_ALIAS];$/;"	v
module	thinkphp/library/think/App.php	/^                    $module = '';$/;"	v
module	thinkphp/library/think/App.php	/^            $module = strtolower($result[0] ?: $config['default_module']);$/;"	v
module	thinkphp/library/think/App.php	/^        $module = (COMMON_MODULE == $module || !APP_MULTI_MODULE) ? '' : $module . DS;$/;"	v
module	thinkphp/library/think/App.php	/^    private static function module($result, $config)$/;"	f
module	thinkphp/library/think/Build.php	/^        $module = APP_MULTI_MODULE ? $module : '';$/;"	v
module	thinkphp/library/think/Build.php	/^    public static function module($module = '', $list = [])$/;"	f
module	thinkphp/library/think/Loader.php	/^            $module = APP_MULTI_MODULE ? MODULE_NAME : '';$/;"	v
module	thinkphp/library/think/Loader.php	/^        $module = '.' != $info['dirname'] ? $info['dirname'] : CONTROLLER_NAME;$/;"	v
module	thinkphp/library/think/Route.php	/^                $module     = APP_MULTI_MODULE && !empty($path) ? array_pop($path) : null;$/;"	v
module	thinkphp/library/think/Route.php	/^                $module     = APP_MULTI_MODULE ? array_shift($path) : null;$/;"	v
module	thinkphp/library/think/Url.php	/^                $module     = empty($path) ? $module : array_pop($path) . '\/';$/;"	v
module	thinkphp/library/think/Url.php	/^            $module = MODULE_NAME ? MODULE_NAME . '\/' : '';$/;"	v
modulePath	thinkphp/library/think/Build.php	/^            $modulePath = APP_PATH . $module . DS;$/;"	v
moveTo	thinkphp/library/think/UploadFile.php	/^    public function moveTo($path, $savename = '', $replace = true)$/;"	f
msg	thinkphp/library/think/Log.php	/^            $msg = var_export($msg, true);$/;"	v
msg	thinkphp/library/think/Response.php	/^            $msg  = '';$/;"	v
msg	thinkphp/library/think/Validate.php	/^                    $msg = [];$/;"	v
msg	thinkphp/library/think/Validate.php	/^                    $msg = is_string($item[2]) ? explode('|', $item[2]) : $item[2];$/;"	v
msg	thinkphp/library/think/Validate.php	/^                $msg  = [];$/;"	v
msg	thinkphp/library/think/Validate.php	/^            $msg = $this->message[$attribute . '.' . $type];$/;"	v
msg	thinkphp/library/think/Validate.php	/^            $msg = $this->message[$attribute];$/;"	v
msg	thinkphp/library/think/Validate.php	/^            $msg = $title . '规则错误';$/;"	v
msg	thinkphp/library/think/Validate.php	/^            $msg = self::$typeMsg[$type];$/;"	v
msg	thinkphp/library/think/Validate.php	/^            $msg = str_replace($/;"	v
msg	thinkphp/library/think/log/driver/Socket.php	/^        $msg     = @json_encode($logs);$/;"	v
mtime	thinkphp/library/think/cache/driver/Lite.php	/^            $mtime = filemtime($filename);$/;"	v
mtime	thinkphp/library/think/template/driver/Sae.php	/^        $mtime = $this->get($cacheFile, 'mtime');$/;"	v
multiConnect	thinkphp/library/think/db/Connection.php	/^    protected function multiConnect($master = false)$/;"	f
multiselect	thinkphp/library/think/console/helper/question/Choice.php	/^        $multiselect  = $this->multiselect;$/;"	v
multiselect	thinkphp/library/think/console/helper/question/Choice.php	/^        $this->multiselect = $multiselect;$/;"	v
multiselect	thinkphp/library/think/console/helper/question/Choice.php	/^    private $multiselect  = false;$/;"	v
multiselectChoices	thinkphp/library/think/console/helper/question/Choice.php	/^            $multiselectChoices = [];$/;"	v
must	thinkphp/library/think/template/TagLib.php	/^                $must = explode(',', $tag['must']);$/;"	v
mustRun	thinkphp/library/think/Process.php	/^    public function mustRun($callback = null)$/;"	f
mustRun	thinkphp/library/think/console/helper/Process.php	/^    public function mustRun(Output $output, $cmd, $error = null, $callback = null)$/;"	f
name	thinkphp/library/think/App.php	/^                $name = $param->getName();$/;"	v
name	thinkphp/library/think/Config.php	/^                $name                                                 = explode('.', $name);$/;"	v
name	thinkphp/library/think/Config.php	/^            $name   = explode('.', $name);$/;"	v
name	thinkphp/library/think/Config.php	/^            $name = strtolower($name);$/;"	v
name	thinkphp/library/think/Console.php	/^                $name  = 'help';$/;"	v
name	thinkphp/library/think/Console.php	/^            $name  = $this->defaultCommand;$/;"	v
name	thinkphp/library/think/Console.php	/^        $name = $this->getCommandName($input);$/;"	v
name	thinkphp/library/think/Console.php	/^        $this->name    = $name;$/;"	v
name	thinkphp/library/think/Console.php	/^        $this->name = $name;$/;"	v
name	thinkphp/library/think/Console.php	/^    private $name;$/;"	v
name	thinkphp/library/think/Cookie.php	/^        $name   = $prefix . $name;$/;"	v
name	thinkphp/library/think/Cookie.php	/^        $name = $config['prefix'] . $name;$/;"	v
name	thinkphp/library/think/Input.php	/^            $name = (string) $name;$/;"	v
name	thinkphp/library/think/Input.php	/^            $name = explode(',', $name);$/;"	v
name	thinkphp/library/think/Loader.php	/^        $name  = str_replace(['\/', '.'], '\\\\', $name);$/;"	v
name	thinkphp/library/think/Model.php	/^                $name = is_string($info) ? $info : $this->name;$/;"	v
name	thinkphp/library/think/Model.php	/^            $name = basename(str_replace('\\\\', '\/', $model));$/;"	v
name	thinkphp/library/think/Model.php	/^        $name       = Loader::parseName(basename(str_replace('\\\\', '\/', $model)));$/;"	v
name	thinkphp/library/think/Model.php	/^        $this->name = basename(str_replace('\\\\', '\/', get_class($this)));$/;"	v
name	thinkphp/library/think/Model.php	/^    protected $name;$/;"	v
name	thinkphp/library/think/Route.php	/^                        $name      = substr($name, 0, -1);$/;"	v
name	thinkphp/library/think/Route.php	/^                $name = substr($val, 1);$/;"	v
name	thinkphp/library/think/Template.php	/^                                    $name    = "$fun($args[1])";$/;"	v
name	thinkphp/library/think/Template.php	/^                                    $name = "$fun($name)";$/;"	v
name	thinkphp/library/think/Template.php	/^                                    $name = "$fun($name,$args[1])";$/;"	v
name	thinkphp/library/think/Template.php	/^                            $name  = $array[0];$/;"	v
name	thinkphp/library/think/Template.php	/^                            $name = '(' . $name . ' !== \\'\\'?' . $name . ':' . $args[1] . ')';$/;"	v
name	thinkphp/library/think/Template.php	/^                            $name = '(isset(' . $name . ') && (' . $name . ' !== \\'\\')?' . $name . ':' . $args[1] . ')';$/;"	v
name	thinkphp/library/think/Template.php	/^                        $name = 'name';$/;"	v
name	thinkphp/library/think/Template.php	/^                    $name = 'file';$/;"	v
name	thinkphp/library/think/Template.php	/^            $name = array_shift($varArray);$/;"	v
name	thinkphp/library/think/Url.php	/^                        $name     = substr($name, 0, -1);$/;"	v
name	thinkphp/library/think/Url.php	/^                $name       = substr($val, 1);$/;"	v
name	thinkphp/library/think/cache/driver/Apc.php	/^        $name = $this->options['prefix'] . $name;$/;"	v
name	thinkphp/library/think/cache/driver/Db.php	/^        $name   = $this->options['prefix'] . addslashes($name);$/;"	v
name	thinkphp/library/think/cache/driver/Db.php	/^        $name = $this->options['prefix'] . addslashes($name);$/;"	v
name	thinkphp/library/think/cache/driver/File.php	/^        $name = md5($name);$/;"	v
name	thinkphp/library/think/cache/driver/Memcache.php	/^        $name = $this->options['prefix'] . $name;$/;"	v
name	thinkphp/library/think/cache/driver/Memcached.php	/^        $name   = $this->options['prefix'] . $name;$/;"	v
name	thinkphp/library/think/cache/driver/Memcached.php	/^        $name = $this->options['prefix'] . $name;$/;"	v
name	thinkphp/library/think/cache/driver/Redis.php	/^        $name = $this->options['prefix'] . $name;$/;"	v
name	thinkphp/library/think/cache/driver/Sae.php	/^        $name = $_SERVER['HTTP_APPVERSION'] . '\/' . $this->options['prefix'] . $name;$/;"	v
name	thinkphp/library/think/cache/driver/Sae.php	/^        $name = $this->options['prefix'] . $name;$/;"	v
name	thinkphp/library/think/cache/driver/Secache.php	/^        $name = $this->options['prefix'] . $name;$/;"	v
name	thinkphp/library/think/cache/driver/Secache.php	/^    public $name          = '系统默认缓存(文件型)';$/;"	v
name	thinkphp/library/think/cache/driver/Sqlite.php	/^        $name   = $this->options['prefix'] . sqlite_escape_string($name);$/;"	v
name	thinkphp/library/think/cache/driver/Sqlite.php	/^        $name  = $this->options['prefix'] . sqlite_escape_string($name);$/;"	v
name	thinkphp/library/think/cache/driver/Sqlite.php	/^        $name = $this->options['prefix'] . sqlite_escape_string($name);$/;"	v
name	thinkphp/library/think/cache/driver/Wincache.php	/^        $name = $this->options['prefix'] . $name;$/;"	v
name	thinkphp/library/think/cache/driver/Xcache.php	/^        $name = $this->options['prefix'] . $name;$/;"	v
name	thinkphp/library/think/console/Input.php	/^        $name = substr($token, 1);$/;"	v
name	thinkphp/library/think/console/Input.php	/^        $name = substr($token, 2);$/;"	v
name	thinkphp/library/think/console/command/Command.php	/^        $name = $this->name;$/;"	v
name	thinkphp/library/think/console/command/Command.php	/^        $this->name = $name;$/;"	v
name	thinkphp/library/think/console/command/Command.php	/^    private $name;$/;"	v
name	thinkphp/library/think/console/input/Argument.php	/^        $this->name        = $name;$/;"	v
name	thinkphp/library/think/console/input/Argument.php	/^    private $name;$/;"	v
name	thinkphp/library/think/console/input/Option.php	/^            $name = substr($name, 2);$/;"	v
name	thinkphp/library/think/console/input/Option.php	/^        $this->name        = $name;$/;"	v
name	thinkphp/library/think/console/input/Option.php	/^    private $name;$/;"	v
name	thinkphp/library/think/db/Connection.php	/^    protected $name = '';$/;"	v
name	thinkphp/library/think/db/Query.php	/^                $name  = Loader::parseName(basename(str_replace('\\\\', '\/', $info['model'])));$/;"	v
name	thinkphp/library/think/db/Query.php	/^            $name         = Loader::parseName(substr($method, 10));$/;"	v
name	thinkphp/library/think/db/Query.php	/^    public function name($name)$/;"	f
name	thinkphp/library/think/log/driver/Trace.php	/^            $name = strtolower($name);$/;"	v
name	thinkphp/library/think/model/Merge.php	/^                        $name  = is_int($key) ? $model : $key;$/;"	v
name	thinkphp/library/think/model/Merge.php	/^                    $name  = is_int($key) ? $model : $key;$/;"	v
name	thinkphp/library/think/model/Merge.php	/^            $name  = is_int($key) ? $model : $key;$/;"	v
name	thinkphp/library/think/template/TagLib.php	/^                        $name = $match[2][0];$/;"	v
name	thinkphp/library/think/template/TagLib.php	/^                    $name  = $tags[1][$node['name']];$/;"	v
name	thinkphp/library/think/template/TagLib.php	/^                $name  = $tags[0][$matches[1]];$/;"	v
name	thinkphp/library/think/template/TagLib.php	/^            $name = '$' . $name;$/;"	v
name	thinkphp/library/think/template/TagLib.php	/^            $name = substr($name, 1);$/;"	v
name	thinkphp/library/think/template/taglib/Cx.php	/^                    $name = $value;$/;"	v
name	thinkphp/library/think/template/taglib/Cx.php	/^            $name = $tag['value'];$/;"	v
name	thinkphp/library/think/template/taglib/Cx.php	/^            $name = $this->autoBuildVar($name);$/;"	v
name	thinkphp/library/think/template/taglib/Cx.php	/^            $name = $var;$/;"	v
name	thinkphp/library/think/template/taglib/Cx.php	/^            $name = '$_result';$/;"	v
name	thinkphp/library/think/template/taglib/Cx.php	/^            $name = 'isset(' . $name . ')';$/;"	v
name	thinkphp/library/think/template/taglib/Cx.php	/^        $name       = 'i';$/;"	v
name	thinkphp/library/think/template/taglib/Cx.php	/^        $name     = !empty($tag['expression']) ? $tag['expression'] : $tag['name'];$/;"	v
name	thinkphp/library/think/template/taglib/Cx.php	/^        $name     = $tag['name'];$/;"	v
name	thinkphp/library/think/template/taglib/Cx.php	/^        $name     = $this->autoBuildVar($name);$/;"	v
name	thinkphp/library/think/template/taglib/Cx.php	/^        $name   = $tag['name'];$/;"	v
name	thinkphp/library/think/template/taglib/Cx.php	/^        $name  = $tag['name'];$/;"	v
name	thinkphp/library/think/template/taglib/Cx.php	/^        $name  = $this->autoBuildVar($name);$/;"	v
name	thinkphp/library/think/template/taglib/Cx.php	/^        $name = !empty($tag['name']) ? $tag['name'] : 'func';$/;"	v
name	thinkphp/library/think/template/taglib/Cx.php	/^        $name = $this->autoBuildVar($name);$/;"	v
name	thinkphp/library/think/template/taglib/Cx.php	/^        $name = $this->autoBuildVar($tag['name']);$/;"	v
name	thinkphp/library/think/template/taglib/Cx.php	/^        $name = '\\'' . $tag['name'] . '\\'';$/;"	v
name	thinkphp/start.php	/^        $name = ENV_PREFIX . $key;$/;"	v
nameLength	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^            $nameLength = 4 + strlen($option->getName()) + 2; \/\/ - + shortcut + , + whitespace + name + --$/;"	v
names	thinkphp/library/think/Model.php	/^            $names = explode(',', $name);$/;"	v
names	thinkphp/library/think/console/helper/descriptor/Console.php	/^            $names = [];$/;"	v
names	thinkphp/library/think/log/driver/Trace.php	/^                        $names  = explode('|', $name);$/;"	v
namespace	thinkphp/library/think/Build.php	/^                    $namespace = APP_NAMESPACE . '\\\\' . ($module ? $module . '\\\\' : '') . $path;$/;"	v
namespace	thinkphp/library/think/Loader.php	/^            $namespace = dirname($class);$/;"	v
namespace	thinkphp/library/think/Loader.php	/^    protected static $namespace = [];$/;"	v
namespace	thinkphp/library/think/console/helper/descriptor/Console.php	/^        $this->namespace = $namespace;$/;"	v
namespace	thinkphp/library/think/console/helper/descriptor/Console.php	/^    private $namespace;$/;"	v
namespaceAlias	thinkphp/library/think/Loader.php	/^    protected static $namespaceAlias = [];$/;"	v
namespacedCommands	thinkphp/library/think/console/helper/descriptor/Console.php	/^        $namespacedCommands = [];$/;"	v
namespaces	thinkphp/library/think/Console.php	/^                $namespaces = array_merge($namespaces, $this->extractAllNamespaces($alias));$/;"	v
namespaces	thinkphp/library/think/Console.php	/^            $namespaces = array_merge($namespaces, $this->extractAllNamespaces($command->getName()));$/;"	v
namespaces	thinkphp/library/think/Console.php	/^        $namespaces = [];$/;"	v
namespaces	thinkphp/library/think/Console.php	/^        $namespaces = preg_grep('{^' . $expr . '}', $allNamespaces);$/;"	v
namespaces	thinkphp/library/think/console/helper/descriptor/Console.php	/^        $this->namespaces = [];$/;"	v
namespaces	thinkphp/library/think/console/helper/descriptor/Console.php	/^    private $namespaces;$/;"	v
next	thinkphp/library/think/console/Input.php	/^            $next = array_shift($this->parsed);$/;"	v
next_free_node	thinkphp/library/think/cache/driver/Secache.php	/^                    $next_free_node = $ds_offset;$/;"	v
next_free_node	thinkphp/library/think/cache/driver/Secache.php	/^                $next_free_node = 0;$/;"	v
nodes	thinkphp/library/think/template/TagLib.php	/^            $nodes = [];$/;"	v
normalizer	thinkphp/library/think/console/helper/question/Question.php	/^        $this->normalizer = $normalizer;$/;"	v
normalizer	thinkphp/library/think/console/helper/question/Question.php	/^    private $normalizer;$/;"	v
notBetween	thinkphp/library/think/Validate.php	/^    protected function notBetween($value, $rule)$/;"	f
notIn	thinkphp/library/think/Validate.php	/^    protected function notIn($value, $rule)$/;"	f
now	thinkphp/library/think/log/driver/File.php	/^        $now         = date($this->config['time_format']);$/;"	v
now	thinkphp/library/think/log/driver/Sae.php	/^        $now             = date($this->config['log_time_format']);$/;"	v
nullstream	thinkphp/library/think/process/pipes/Unix.php	/^            $nullstream = fopen('\/dev\/null', 'c');$/;"	v
nullstream	thinkphp/library/think/process/pipes/Windows.php	/^            $nullstream = fopen('NUL', 'c');$/;"	v
numMatches	thinkphp/library/think/console/helper/Question.php	/^                    $numMatches = 0;$/;"	v
numMatches	thinkphp/library/think/console/helper/Question.php	/^                    $numMatches = count($matches);$/;"	v
numMatches	thinkphp/library/think/console/helper/Question.php	/^                $numMatches = 0;$/;"	v
numMatches	thinkphp/library/think/console/helper/Question.php	/^        $numMatches = count($matches);$/;"	v
numRows	thinkphp/library/think/db/Connection.php	/^            $this->numRows = $this->PDOStatement->rowCount();$/;"	v
numRows	thinkphp/library/think/db/Connection.php	/^        $this->numRows = count($result);$/;"	v
numRows	thinkphp/library/think/db/Connection.php	/^    protected $numRows = 0;$/;"	v
numRows	thinkphp/library/think/db/connector/Oracle.php	/^            $this->numRows = $this->PDOStatement->rowCount();$/;"	v
o	thinkphp/library/think/Loader.php	/^                $o = new $class();$/;"	v
obj	thinkphp/library/think/Hook.php	/^        $obj = new $class();$/;"	v
offset	thinkphp/library/think/console/output/Formatter.php	/^            $offset = $pos + strlen($text);$/;"	v
offset	thinkphp/library/think/console/output/Formatter.php	/^        $offset   = 0;$/;"	v
offset	thinkphp/library/think/db/Query.php	/^            $offset                = $listRows * ($page - 1);$/;"	v
offset	thinkphp/library/think/template/taglib/Cx.php	/^        $offset = !empty($tag['offset']) && is_numeric($tag['offset']) ? intval($tag['offset']) : 0;$/;"	v
offsetExists	thinkphp/library/think/Model.php	/^    public function offsetExists($name)$/;"	f
offsetGet	thinkphp/library/think/Model.php	/^    public function offsetGet($name)$/;"	f
offsetSet	thinkphp/library/think/Model.php	/^    public function offsetSet($name, $value)$/;"	f
offsetUnset	thinkphp/library/think/Model.php	/^    public function offsetUnset($name)$/;"	f
ofs	thinkphp/library/think/console/helper/Question.php	/^                        $ofs = 0;$/;"	v
ofs	thinkphp/library/think/console/helper/Question.php	/^                    $ofs        = -1;$/;"	v
ofs	thinkphp/library/think/console/helper/Question.php	/^                    $ofs = ($numMatches + $ofs) % $numMatches;$/;"	v
ofs	thinkphp/library/think/console/helper/Question.php	/^                $ofs        = 0;$/;"	v
ofs	thinkphp/library/think/console/helper/Question.php	/^        $ofs        = -1;$/;"	v
open	thinkphp/library/think/session/driver/Memcache.php	/^    public function open($savePath, $sessName)$/;"	f
open	thinkphp/library/think/session/driver/Memcached.php	/^    public function open($savePath, $sessName)$/;"	f
open	thinkphp/library/think/session/driver/Redis.php	/^    public function open($savePath, $sessName)$/;"	f
option	thinkphp/library/think/Cookie.php	/^                $option = ['expire' => $option];$/;"	v
option	thinkphp/library/think/Route.php	/^                            $option  = array_merge($option, $option1);$/;"	v
option	thinkphp/library/think/Route.php	/^                $option  = $val['option'];$/;"	v
option	thinkphp/library/think/console/Input.php	/^            $option = $this->definition->getOptionForShortcut($name[$i]);$/;"	v
option	thinkphp/library/think/console/Input.php	/^        $option = $this->definition->getOption($name);$/;"	v
option1	thinkphp/library/think/Route.php	/^                            $option1 = $route[1];$/;"	v
optional	thinkphp/library/think/Url.php	/^                        $optional = false;$/;"	v
optional	thinkphp/library/think/Url.php	/^                        $optional = true;$/;"	v
optional	thinkphp/library/think/Url.php	/^                $optional = true;$/;"	v
optional	thinkphp/library/think/Url.php	/^            $optional = false;$/;"	v
options	thinkphp/library/think/Db.php	/^            $options = self::parseConfig($config);$/;"	v
options	thinkphp/library/think/Process.php	/^        $this->options                      = array_replace([$/;"	v
options	thinkphp/library/think/Process.php	/^        $this->options = $options;$/;"	v
options	thinkphp/library/think/Process.php	/^    private $options;$/;"	v
options	thinkphp/library/think/View.php	/^            $options = [];$/;"	v
options	thinkphp/library/think/cache/driver/Apc.php	/^            $this->options = array_merge($this->options, $options);$/;"	v
options	thinkphp/library/think/cache/driver/Apc.php	/^    protected $options = [$/;"	v
options	thinkphp/library/think/cache/driver/Db.php	/^            $this->options = array_merge($this->options, $options);$/;"	v
options	thinkphp/library/think/cache/driver/Db.php	/^    protected $options = [$/;"	v
options	thinkphp/library/think/cache/driver/File.php	/^            $this->options = array_merge($this->options, $options);$/;"	v
options	thinkphp/library/think/cache/driver/File.php	/^    protected $options = [$/;"	v
options	thinkphp/library/think/cache/driver/Lite.php	/^            $this->options = array_merge($this->options, $options);$/;"	v
options	thinkphp/library/think/cache/driver/Lite.php	/^    protected $options = [$/;"	v
options	thinkphp/library/think/cache/driver/Memcache.php	/^            $this->options = array_merge($this->options, $options);$/;"	v
options	thinkphp/library/think/cache/driver/Memcache.php	/^    protected $options = [$/;"	v
options	thinkphp/library/think/cache/driver/Memcached.php	/^            $this->options = array_merge($this->options, $options);$/;"	v
options	thinkphp/library/think/cache/driver/Memcached.php	/^    protected $options = [$/;"	v
options	thinkphp/library/think/cache/driver/Redis.php	/^            $this->options = array_merge($this->options, $options);$/;"	v
options	thinkphp/library/think/cache/driver/Redis.php	/^    protected $options = [$/;"	v
options	thinkphp/library/think/cache/driver/Sae.php	/^            $this->options = array_merge($this->options, $options);$/;"	v
options	thinkphp/library/think/cache/driver/Sae.php	/^    protected $options = [$/;"	v
options	thinkphp/library/think/cache/driver/Secache.php	/^            $this->options = array_merge($this->options, $options);$/;"	v
options	thinkphp/library/think/cache/driver/Secache.php	/^    protected $options = [$/;"	v
options	thinkphp/library/think/cache/driver/Sqlite.php	/^            $this->options = array_merge($this->options, $options);$/;"	v
options	thinkphp/library/think/cache/driver/Sqlite.php	/^    protected $options = [$/;"	v
options	thinkphp/library/think/cache/driver/Wincache.php	/^            $this->options = array_merge($this->options, $options);$/;"	v
options	thinkphp/library/think/cache/driver/Wincache.php	/^    protected $options = [$/;"	v
options	thinkphp/library/think/cache/driver/Xcache.php	/^            $this->options = array_merge($this->options, $options);$/;"	v
options	thinkphp/library/think/cache/driver/Xcache.php	/^    protected $options = [$/;"	v
options	thinkphp/library/think/console/Input.php	/^        $this->options    = [];$/;"	v
options	thinkphp/library/think/console/Input.php	/^    protected $options = [];$/;"	v
options	thinkphp/library/think/console/helper/Descriptor.php	/^        $options = array_merge([$/;"	v
options	thinkphp/library/think/console/input/Definition.php	/^        $options   = [];$/;"	v
options	thinkphp/library/think/console/input/Definition.php	/^        $this->options   = [];$/;"	v
options	thinkphp/library/think/console/input/Definition.php	/^    private $options;$/;"	v
options	thinkphp/library/think/console/output/formatter/Style.php	/^        $this->options = [];$/;"	v
options	thinkphp/library/think/console/output/formatter/Style.php	/^    private $options = [];$/;"	v
options	thinkphp/library/think/db/Builder.php	/^    protected $options = [];$/;"	v
options	thinkphp/library/think/db/Query.php	/^            $this->options = [];$/;"	v
options	thinkphp/library/think/db/Query.php	/^        $options   = $this->getOptions();$/;"	v
options	thinkphp/library/think/db/Query.php	/^        $options = $this->options;$/;"	v
options	thinkphp/library/think/db/Query.php	/^        $options = $this->parseExpress();$/;"	v
options	thinkphp/library/think/db/Query.php	/^        $this->options = $options;$/;"	v
options	thinkphp/library/think/db/Query.php	/^        $this->options = [];$/;"	v
options	thinkphp/library/think/db/Query.php	/^    protected $options = [];$/;"	v
options	thinkphp/library/think/db/Query.php	/^    protected function options(array $options)$/;"	f
options	thinkphp/library/think/db/connector/Sqlsrv.php	/^    protected $options = [$/;"	v
options	thinkphp/library/think/process/Builder.php	/^        $options = $this->options;$/;"	v
options	thinkphp/library/think/process/Builder.php	/^    private $options        = [];$/;"	v
order	thinkphp/library/think/db/Builder.php	/^            $order = implode(',', $array);$/;"	v
order	thinkphp/library/think/db/Query.php	/^    public function order($field, $order = null)$/;"	f
original	thinkphp/library/think/Loader.php	/^                $original = self::$namespaceAlias[$namespace] . '\\\\' . basename($class);$/;"	v
otherKey	thinkphp/library/think/Model.php	/^        $otherKey   = $otherKey ?: (new $model)->getPk();$/;"	v
out	thinkphp/library/think/Process.php	/^        $out      = self::OUT;$/;"	v
output	thinkphp/library/think/Console.php	/^        $output = new Output();$/;"	v
output	thinkphp/library/think/Debug.php	/^                $output = htmlspecialchars($output, ENT_QUOTES);$/;"	v
output	thinkphp/library/think/Debug.php	/^            $output = '<pre>' . $label . $output . '<\/pre>';$/;"	v
output	thinkphp/library/think/Debug.php	/^            $output = PHP_EOL . $label . $output . PHP_EOL;$/;"	v
output	thinkphp/library/think/Debug.php	/^        $output = ob_get_clean();$/;"	v
output	thinkphp/library/think/Debug.php	/^        $output = preg_replace('\/\\]\\=\\>\\n(\\s+)\/m', '] => ', $output);$/;"	v
output	thinkphp/library/think/Error.php	/^    public static function output($exception, array $data)$/;"	f
output	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^        $this->output = $output;$/;"	v
output	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^    protected $output;$/;"	v
output	thinkphp/library/think/console/output/Formatter.php	/^        $output   = '';$/;"	v
outputDisabled	thinkphp/library/think/Process.php	/^        $this->outputDisabled = false;$/;"	v
outputDisabled	thinkphp/library/think/Process.php	/^        $this->outputDisabled = true;$/;"	v
outputDisabled	thinkphp/library/think/Process.php	/^    private $outputDisabled               = false;$/;"	v
outputDisabled	thinkphp/library/think/process/Builder.php	/^        $this->outputDisabled = false;$/;"	v
outputDisabled	thinkphp/library/think/process/Builder.php	/^        $this->outputDisabled = true;$/;"	v
outputDisabled	thinkphp/library/think/process/Builder.php	/^    private $outputDisabled = false;$/;"	v
outputStream	thinkphp/library/think/console/Output.php	/^            $outputStream = 'php:\/\/output';$/;"	v
outputStream	thinkphp/library/think/console/Output.php	/^        $outputStream = 'php:\/\/stdout';$/;"	v
page	application/index/controller/News.php	/^        $page = Input::get('page');$/;"	v
page	thinkphp/library/think/db/Query.php	/^            $page                  = $page > 0 ? $page : 1;$/;"	v
page	thinkphp/library/think/db/Query.php	/^    public function page($page, $listRows = null)$/;"	f
panDomain	thinkphp/library/think/Route.php	/^                            $panDomain = $domain2;$/;"	v
panDomain	thinkphp/library/think/Route.php	/^                        $panDomain = $domain3;$/;"	v
param	thinkphp/library/think/Input.php	/^    public static function param($name = '', $default = null, $filter = null, $merge = false)$/;"	f
param	thinkphp/library/think/Url.php	/^                    $param = [];$/;"	v
param	thinkphp/library/think/Url.php	/^                $param = [];$/;"	v
param	thinkphp/library/think/Url.php	/^            $param = [];$/;"	v
param	thinkphp/library/think/Validate.php	/^            $param = isset($rule[1]) ? $rule[1] : null;$/;"	v
param	thinkphp/library/think/Validate.php	/^            $param = null;$/;"	v
param	thinkphp/library/think/db/Connection.php	/^            $param = is_numeric($key) ? $key + 1 : ':' . $key;$/;"	v
param	thinkphp/library/think/db/Query.php	/^        $param = func_get_args();$/;"	v
params	thinkphp/library/think/App.php	/^            $params = $reflect->getParameters();$/;"	v
params	thinkphp/library/think/Response.php	/^            $params             = [];$/;"	v
params	thinkphp/library/think/db/Connection.php	/^                $params = $config['params'] + $this->params;$/;"	v
params	thinkphp/library/think/db/Connection.php	/^                $params = $this->params;$/;"	v
params	thinkphp/library/think/db/Connection.php	/^    protected $params = [$/;"	v
parent	thinkphp/library/think/Model.php	/^    protected $parent;$/;"	v
parent	thinkphp/library/think/Template.php	/^                            $parent = $val['parent'];$/;"	v
parent	thinkphp/library/think/model/Relation.php	/^        $this->parent = $model;$/;"	v
parent	thinkphp/library/think/model/Relation.php	/^    protected $parent;$/;"	v
parse	thinkphp/library/think/Config.php	/^    public static function parse($config, $type = '', $range = '')$/;"	f
parse	thinkphp/library/think/Template.php	/^    public function parse(&$content)$/;"	f
parse	thinkphp/library/think/config/driver/Ini.php	/^    public function parse($config)$/;"	f
parse	thinkphp/library/think/config/driver/Xml.php	/^    public function parse($config)$/;"	f
parse	thinkphp/library/think/console/Input.php	/^    protected function parse()$/;"	f
parse	thinkphp/library/think/template/TagLib.php	/^    protected $parse = [];$/;"	v
parseArgument	thinkphp/library/think/console/Input.php	/^    private function parseArgument($token)$/;"	f
parseAttr	thinkphp/library/think/Template.php	/^    public function parseAttr($str, $name = null)$/;"	f
parseAttr	thinkphp/library/think/template/TagLib.php	/^    public function parseAttr($str, $name, $alias = '')$/;"	f
parseBlock	thinkphp/library/think/Template.php	/^    private function parseBlock(&$content, $sort = false)$/;"	f
parseClass	thinkphp/library/think/Loader.php	/^    public static function parseClass($module, $layer, $name)$/;"	f
parseClosure	thinkphp/library/think/db/Builder.php	/^    protected function parseClosure($call, $show = true)$/;"	f
parseComment	thinkphp/library/think/db/Builder.php	/^    protected function parseComment($comment)$/;"	f
parseCondition	thinkphp/library/think/template/TagLib.php	/^    public function parseCondition($condition)$/;"	f
parseConfig	thinkphp/library/think/Db.php	/^    private static function parseConfig($config)$/;"	f
parseData	thinkphp/library/think/db/Builder.php	/^    protected function parseData($data, $options)$/;"	f
parseData	thinkphp/library/think/model/Merge.php	/^    protected function parseData($model, $data, $insert = false)$/;"	f
parseDistinct	thinkphp/library/think/db/Builder.php	/^    protected function parseDistinct($distinct)$/;"	f
parseDomain	thinkphp/library/think/Url.php	/^    protected static function parseDomain(&$url, $domain)$/;"	f
parseDsn	thinkphp/library/think/Db.php	/^    private static function parseDsn($dsnStr)$/;"	f
parseDsn	thinkphp/library/think/db/connector/Mysql.php	/^    protected function parseDsn($config)$/;"	f
parseDsn	thinkphp/library/think/db/connector/Oracle.php	/^    protected function parseDsn($config)$/;"	f
parseDsn	thinkphp/library/think/db/connector/Pgsql.php	/^    protected function parseDsn($config)$/;"	f
parseDsn	thinkphp/library/think/db/connector/Sqlite.php	/^    protected function parseDsn($config)$/;"	f
parseDsn	thinkphp/library/think/db/connector/Sqlsrv.php	/^    protected function parseDsn($config)$/;"	f
parseExpress	thinkphp/library/think/db/Query.php	/^    public function parseExpress()$/;"	f
parseExtend	thinkphp/library/think/Template.php	/^    private function parseExtend(&$content)$/;"	f
parseField	thinkphp/library/think/db/Builder.php	/^    protected function parseField($fields)$/;"	f
parseFilter	thinkphp/library/think/Input.php	/^    private static function parseFilter($filter, $merge = false)$/;"	f
parseForce	thinkphp/library/think/db/Builder.php	/^    protected function parseForce($index)$/;"	f
parseGroup	thinkphp/library/think/db/Builder.php	/^    protected function parseGroup($group)$/;"	f
parseHaving	thinkphp/library/think/db/Builder.php	/^    protected function parseHaving($having)$/;"	f
parseInclude	thinkphp/library/think/Template.php	/^    private function parseInclude(&$content)$/;"	f
parseJoin	thinkphp/library/think/db/Builder.php	/^    protected function parseJoin($join)$/;"	f
parseKey	thinkphp/library/think/db/Builder.php	/^    protected function parseKey($key)$/;"	f
parseKey	thinkphp/library/think/db/builder/Mysql.php	/^    protected function parseKey($key)$/;"	f
parseKey	thinkphp/library/think/db/builder/Oracle.php	/^    protected function parseKey($key)$/;"	f
parseKey	thinkphp/library/think/db/builder/Pgsql.php	/^    protected function parseKey($key)$/;"	f
parseKey	thinkphp/library/think/db/builder/Sqlsrv.php	/^    protected function parseKey($key)$/;"	f
parseLayout	thinkphp/library/think/Template.php	/^    private function parseLayout(&$content)$/;"	f
parseLimit	thinkphp/library/think/db/Builder.php	/^    protected function parseLimit($limit)$/;"	f
parseLimit	thinkphp/library/think/db/builder/Oracle.php	/^    public function parseLimit($limit)$/;"	f
parseLimit	thinkphp/library/think/db/builder/Pgsql.php	/^    public function parseLimit($limit)$/;"	f
parseLimit	thinkphp/library/think/db/builder/Sqlite.php	/^    public function parseLimit($limit)$/;"	f
parseLimit	thinkphp/library/think/db/builder/Sqlsrv.php	/^    protected function parseLimit($limit)$/;"	f
parseLiteral	thinkphp/library/think/Template.php	/^    private function parseLiteral(&$content, $restore = false)$/;"	f
parseLock	thinkphp/library/think/db/Builder.php	/^    protected function parseLock($lock = false)$/;"	f
parseLock	thinkphp/library/think/db/builder/Oracle.php	/^    protected function parseLock($lock = false)$/;"	f
parseLongOption	thinkphp/library/think/console/Input.php	/^    private function parseLongOption($token)$/;"	f
parseModel	thinkphp/library/think/Model.php	/^    protected function parseModel($model)$/;"	f
parseName	thinkphp/library/think/Input.php	/^    private static function parseName($name)$/;"	f
parseName	thinkphp/library/think/Loader.php	/^    public static function parseName($name, $type = 0)$/;"	f
parseOptions	thinkphp/library/think/console/Input.php	/^                $parseOptions = false;$/;"	v
parseOptions	thinkphp/library/think/console/Input.php	/^        $parseOptions = true;$/;"	v
parseOrder	thinkphp/library/think/db/Builder.php	/^    protected function parseOrder($order)$/;"	f
parseOrder	thinkphp/library/think/db/builder/Sqlsrv.php	/^    protected function parseOrder($order)$/;"	f
parsePathinfo	thinkphp/library/think/App.php	/^    private static function parsePathinfo(array $config)$/;"	f
parsePhp	thinkphp/library/think/Template.php	/^    private function parsePhp(&$content)$/;"	f
parsePkWhere	thinkphp/library/think/db/Query.php	/^    protected function parsePkWhere($data, &$options)$/;"	f
parseQuery	thinkphp/library/think/Model.php	/^    protected static function parseQuery(&$data, $with, $cache)$/;"	f
parseRand	thinkphp/library/think/db/builder/Mysql.php	/^    protected function parseRand()$/;"	f
parseRand	thinkphp/library/think/db/builder/Oracle.php	/^    protected function parseRand()$/;"	f
parseRand	thinkphp/library/think/db/builder/Pgsql.php	/^    protected function parseRand()$/;"	f
parseRand	thinkphp/library/think/db/builder/Sqlite.php	/^    protected function parseRand()$/;"	f
parseRand	thinkphp/library/think/db/builder/Sqlsrv.php	/^    protected function parseRand()$/;"	f
parseRoute	thinkphp/library/think/Route.php	/^    private static function parseRoute($url, $reverse = false)$/;"	f
parseRule	thinkphp/library/think/Route.php	/^    private static function parseRule($rule, $route, $pathinfo, $matches)$/;"	f
parseShortOption	thinkphp/library/think/console/Input.php	/^    private function parseShortOption($token)$/;"	f
parseShortOptionSet	thinkphp/library/think/console/Input.php	/^    private function parseShortOptionSet($name)$/;"	f
parseSqlTable	thinkphp/library/think/db/Builder.php	/^    protected function parseSqlTable($sql)$/;"	f
parseSqlTable	thinkphp/library/think/db/Connection.php	/^    public function parseSqlTable($sql)$/;"	f
parseStr	thinkphp/library/think/Template.php	/^                                    $parseStr = $first . '->' . implode('->', $vars);$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                                    $parseStr = $first . '[\\'' . implode('\\'][\\'', $vars) . '\\']';$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                                    $parseStr = '(is_array(' . $first . ')?' . $first . '[\\'' . implode('\\'][\\'', $vars) . '\\']:' . $first . '->' . implode('->', $vars) . ')';$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                            $parseStr = $this->parseThinkVar($vars);$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                            $parseStr = $vars[0];$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                        $parseStr = "date('Y-m-d g:i a',time())";$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                        $parseStr = '$_COOKIE[\\'' . $vars[1] . '\\'][\\'' . $vars[2] . '\\']';$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                        $parseStr = '$_SESSION[\\'' . $vars[1] . '\\'][\\'' . $vars[2] . '\\']';$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                        $parseStr = 'THINK_VERSION';$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                        $parseStr = '\\'' . ltrim($this->config['tpl_begin'], '\\\\') . '\\'';$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                        $parseStr = '\\'' . ltrim($this->config['tpl_end'], '\\\\') . '\\'';$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                        $parseStr = '\\\\think\\\\Cookie::get(\\'' . $vars[1] . '\\')';$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                        $parseStr = '\\\\think\\\\Session::get(\\'' . $vars[1] . '\\')';$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                        $parseStr = str_replace(':', '->', $match[0]);$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                        $parseStr = str_replace('[' . $k . ']', $v, $parseStr);$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                    $parseStr = $_varParseList[$match[0]];$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                    $parseStr = $this->parseTemplateName($file);$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                    $parseStr = '$_ENV[\\'' . strtoupper($vars[1]) . '\\']';$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                    $parseStr = '$_GET[\\'' . $vars[1] . '\\']';$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                    $parseStr = '$_POST[\\'' . $vars[1] . '\\']';$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                    $parseStr = '$_REQUEST[\\'' . $vars[1] . '\\']';$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                    $parseStr = '$_SERVER[\\'' . strtoupper($vars[1]) . '\\']';$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                    $parseStr = '\\'\\'';$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                    $parseStr = '\\\\think\\\\Config::get(\\'' . $vars[1] . '\\')';$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                    $parseStr = '\\\\think\\\\Lang::get(\\'' . $vars[1] . '\\')';$/;"	v
parseStr	thinkphp/library/think/Template.php	/^                    $parseStr = strtoupper($vars[1]);$/;"	v
parseStr	thinkphp/library/think/Template.php	/^        $parseStr = '';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^            $parseStr   = '<?php foreach(' . $expression . '): ?>';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^            $parseStr = '<?php $_RANGE_VAR_=' . $str . ';if(' . $name . '<$_RANGE_VAR_[0] || ' . $name . '>$_RANGE_VAR_[1]):?>' . $content . '<?php endif; ?>';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^            $parseStr = '<?php $_RANGE_VAR_=' . $str . ';if(' . $name . '>= $_RANGE_VAR_[0] && ' . $name . '<= $_RANGE_VAR_[1]):?>' . $content . '<?php endif; ?>';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^            $parseStr = '<?php if(' . $fun . '((' . $name . '), ' . $str . ')): ?>' . $content . '<?php endif; ?>';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr  = '<?php elseif(' . $condition . '): ?>';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr  = '<?php if(' . $condition . '): ?>' . $content . '<?php endif; ?>';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr = '';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr = '<?php $' . $name . '=function(' . $vars . ') use(' . implode(',', $use) . ') {';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr = '<?php $__FOR_START_' . $rand . '__=' . $start . ';$__FOR_END_' . $rand . '__=' . $end . ';';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr = '<?php ' . $content . ' ?>';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr = '<?php ' . $name . ' = ' . $value . '; ?>';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr = '<?php ' . $value . ' ?>' . $content;$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr = '<?php ';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr = '<?php default: ?>';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr = '<?php define(' . $name . ', ' . $value . '); ?>';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr = '<?php else: ?>';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr = '<?php if(!defined("' . $name . '")): ?>' . $content . '<?php endif; ?>';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr = '<?php if(!empty(' . $name . ')): ?>' . $content . '<?php endif; ?>';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr = '<?php if(!isset(' . $name . ')): ?>' . $content . '<?php endif; ?>';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr = '<?php if(' . $name . ' ' . $type . ' ' . $value . '): ?>' . $content . '<?php endif; ?>';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr = '<?php if(defined("' . $name . '")): ?>' . $content . '<?php endif; ?>';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr = '<?php if(empty(' . $name . ')): ?>' . $content . '<?php endif; ?>';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr = '<?php if(isset(' . $name . ')): ?>' . $content . '<?php endif; ?>';$/;"	v
parseStr	thinkphp/library/think/template/taglib/Cx.php	/^        $parseStr = '<?php switch(' . $name . '): ?>' . $content . '<?php endswitch; ?>';$/;"	v
parseSuffix	thinkphp/library/think/Url.php	/^    protected static function parseSuffix($suffix)$/;"	f
parseTable	thinkphp/library/think/db/Builder.php	/^    protected function parseTable($tables)$/;"	f
parseTag	thinkphp/library/think/Template.php	/^    private function parseTag(&$content)$/;"	f
parseTag	thinkphp/library/think/template/TagLib.php	/^    public function parseTag(&$content, $lib = '')$/;"	f
parseTagLib	thinkphp/library/think/Template.php	/^    public function parseTagLib($tagLib, &$content, $hide = false)$/;"	f
parseTemplate	thinkphp/library/think/view/driver/Php.php	/^    private function parseTemplate($template)$/;"	f
parseTemplate	thinkphp/library/think/view/driver/Think.php	/^    private function parseTemplate($template)$/;"	f
parseTemplateFile	thinkphp/library/think/Template.php	/^    private function parseTemplateFile($template)$/;"	f
parseTemplateName	thinkphp/library/think/Template.php	/^    private function parseTemplateName($templateName)$/;"	f
parseThinkVar	thinkphp/library/think/Template.php	/^    public function parseThinkVar(&$vars)$/;"	f
parseUnion	thinkphp/library/think/db/Builder.php	/^    protected function parseUnion($union)$/;"	f
parseUrl	thinkphp/library/think/Route.php	/^    public static function parseUrl($url, $depr = '\/')$/;"	f
parseUrl	thinkphp/library/think/Url.php	/^    protected static function parseUrl($url)$/;"	f
parseUrlParams	thinkphp/library/think/Route.php	/^    private static function parseUrlParams($url, $var)$/;"	f
parseValue	thinkphp/library/think/db/Builder.php	/^    protected function parseValue($value)$/;"	f
parseVar	thinkphp/library/think/Template.php	/^    public function parseVar(&$varStr)$/;"	f
parseVar	thinkphp/library/think/Url.php	/^    private static function parseVar($rule)$/;"	f
parseVarFunction	thinkphp/library/think/Template.php	/^    public function parseVarFunction(&$varStr)$/;"	f
parseWhere	thinkphp/library/think/db/Builder.php	/^    protected function parseWhere($where, $table)$/;"	f
parseWhereExp	thinkphp/library/think/db/Query.php	/^    protected function parseWhereExp($operator, $field, $op, $condition, $param = [])$/;"	f
parseWhereItem	thinkphp/library/think/db/Builder.php	/^    protected function parseWhereItem($key, $val, $rule = '')$/;"	f
parsed	thinkphp/library/think/console/Input.php	/^        $this->parsed = $this->tokens;$/;"	v
parsed	thinkphp/library/think/console/Input.php	/^    private $parsed;$/;"	v
parts	thinkphp/library/think/Console.php	/^        $parts      = explode(':', $name, -1);$/;"	v
parts	thinkphp/library/think/Console.php	/^        $parts = explode(':', $name);$/;"	v
path	thinkphp/library/think/App.php	/^            $path = APP_PATH . $module;$/;"	v
path	thinkphp/library/think/Input.php	/^    public static function path($name = '', $default = null, $filter = null, $merge = false)$/;"	f
path	thinkphp/library/think/Loader.php	/^                $path = EXTEND_PATH . $name . DS;$/;"	v
path	thinkphp/library/think/Loader.php	/^                $path = self::$namespace[$name];$/;"	v
path	thinkphp/library/think/Loader.php	/^        $path  = $array ? implode('\\\\', $array) . '\\\\' : '';$/;"	v
path	thinkphp/library/think/Model.php	/^            $path = explode('\\\\', get_called_class());$/;"	v
path	thinkphp/library/think/Route.php	/^            $path = [$url];$/;"	v
path	thinkphp/library/think/Route.php	/^            $path = explode('\/', $info['path'], APP_MULTI_MODULE ? 4 : 3);$/;"	v
path	thinkphp/library/think/Route.php	/^            $path = explode('\/', $url, APP_MULTI_MODULE ? 4 : 3);$/;"	v
path	thinkphp/library/think/Url.php	/^                $path       = explode('\/', $url);$/;"	v
path	thinkphp/library/think/view/driver/Php.php	/^            $path                    = APP_PATH . (APP_MULTI_MODULE ? $module . DS : '') . VIEW_LAYER . DS;$/;"	v
path	thinkphp/library/think/view/driver/Php.php	/^            $path = $this->config['view_path'];$/;"	v
path	thinkphp/library/think/view/driver/Think.php	/^            $path                    = APP_PATH . (APP_MULTI_MODULE ? $module . DS : '') . VIEW_LAYER . DS;$/;"	v
path	thinkphp/library/think/view/driver/Think.php	/^            $path = $this->config['view_path'];$/;"	v
paths	thinkphp/library/think/Route.php	/^        $paths = explode('\/', $pathinfo);$/;"	v
pattern	thinkphp/library/think/Route.php	/^                            $pattern = array_merge($pattern, isset($route[2]) ? $route[2] : []);$/;"	v
pattern	thinkphp/library/think/Route.php	/^                $pattern = $val['pattern'];$/;"	v
pattern	thinkphp/library/think/Route.php	/^            $pattern = array_merge(self::$pattern, $pattern);$/;"	v
pattern	thinkphp/library/think/Route.php	/^    private static $pattern = [];$/;"	v
pattern	thinkphp/library/think/Route.php	/^    public static function pattern($name = '', $rule = '')$/;"	f
pattern	thinkphp/library/think/Url.php	/^    protected static function pattern($pattern, $vars)$/;"	f
pause	thinkphp/library/think/Session.php	/^    public static function pause()$/;"	f
pdo	thinkphp/library/think/db/Query.php	/^            $pdo    = $this->field($field)->fetchPdo(true)->find();$/;"	v
pdo	thinkphp/library/think/db/Query.php	/^            $pdo = $this->field($field)->fetchPdo(true)->select();$/;"	v
pdo	thinkphp/library/think/db/connector/Mysql.php	/^        $pdo    = $this->linkID->query("EXPLAIN " . $sql);$/;"	v
pids	thinkphp/library/think/Process.php	/^                $pids = preg_split('\/\\s+\/', `ps -o pid --no-heading --ppid {$this->getPid()}`);$/;"	v
pipes	thinkphp/library/think/process/pipes/Pipes.php	/^        $this->pipes = [];$/;"	v
pipes	thinkphp/library/think/process/pipes/Pipes.php	/^    public $pipes = [];$/;"	v
pipes	thinkphp/library/think/process/pipes/Unix.php	/^                $this->pipes = [];$/;"	v
pipes	thinkphp/library/think/process/pipes/Windows.php	/^                $this->pipes = [];$/;"	v
pivot	thinkphp/library/think/model/Relation.php	/^                    $pivot = [];$/;"	v
pivot	thinkphp/library/think/model/Relation.php	/^            $pivot = [];$/;"	v
pk	thinkphp/library/think/Model.php	/^                $pk       = $this->getPk();$/;"	v
pk	thinkphp/library/think/Model.php	/^            $this->pk = self::db()->getTableInfo($table, 'pk');$/;"	v
pk	thinkphp/library/think/Model.php	/^        $pk = $this->getPk();$/;"	v
pk	thinkphp/library/think/Model.php	/^    protected $pk;$/;"	v
pk	thinkphp/library/think/db/Query.php	/^                $pk = count($pk) > 1 ? $pk : $pk[0];$/;"	v
pk	thinkphp/library/think/db/Query.php	/^                $pk = null;$/;"	v
pk	thinkphp/library/think/db/Query.php	/^            $pk = $this->getPk($options['table']);$/;"	v
pk	thinkphp/library/think/db/Query.php	/^        $pk = $this->getPk($options['table']);$/;"	v
pk	thinkphp/library/think/model/Merge.php	/^                $pk = $this->data[$this->getPk()];$/;"	v
pk	thinkphp/library/think/model/Relation.php	/^                        $pk = $result->$pk;$/;"	v
pk	thinkphp/library/think/model/Relation.php	/^                    $pk    = $resultSet[0]->getPk();$/;"	v
pk	thinkphp/library/think/model/Relation.php	/^                    $pk = $result->getPk();$/;"	v
pk	thinkphp/library/think/model/Relation.php	/^                $pk                                = $this->parent->getPk();$/;"	v
pk	thinkphp/library/think/model/Relation.php	/^            $pk                       = $this->parent->getPk();$/;"	v
pk	thinkphp/library/think/model/Relation.php	/^        $pk                       = $this->parent->getPk();$/;"	v
placeholders	thinkphp/library/think/console/command/Command.php	/^        $placeholders = [$/;"	v
pop	thinkphp/library/think/console/output/formatter/Stack.php	/^    public function pop(Style $style = null)$/;"	f
port	thinkphp/library/think/cache/driver/Memcache.php	/^            $port = isset($ports[$i]) ? $ports[$i] : $ports[0];$/;"	v
port	thinkphp/library/think/log/driver/Socket.php	/^    public $port = 1116; \/\/SocketLog 服务的http的端口号$/;"	v
port	thinkphp/library/think/session/driver/Memcache.php	/^            $port = isset($ports[$i]) ? $ports[$i] : $ports[0];$/;"	v
ports	thinkphp/library/think/cache/driver/Memcache.php	/^        $ports = explode(',', $this->options['port']);$/;"	v
ports	thinkphp/library/think/cache/driver/Memcached.php	/^        $ports = explode(',', $this->options['port']);$/;"	v
ports	thinkphp/library/think/session/driver/Memcache.php	/^        $ports = explode(',', $this->config['port']);$/;"	v
ports	thinkphp/library/think/session/driver/Memcached.php	/^        $ports = explode(',', $this->config['port']);$/;"	v
pos	thinkphp/library/think/Debug.php	/^        $pos  = 0;$/;"	v
pos	thinkphp/library/think/Route.php	/^                        $pos = array_search('*', $params);$/;"	v
pos	thinkphp/library/think/cache/driver/Secache.php	/^            $pos = $info['offset'];$/;"	v
pos	thinkphp/library/think/cache/driver/Secache.php	/^            $pos = $offset;$/;"	v
pos	thinkphp/library/think/cache/driver/Secache.php	/^            $pos = 0;$/;"	v
pos	thinkphp/library/think/console/output/Formatter.php	/^            $pos  = $match[1];$/;"	v
pos	thinkphp/library/think/console/output/formatter/Style.php	/^        $pos = array_search(static::$availableOptions[$option], $this->options);$/;"	v
post	thinkphp/library/think/Input.php	/^    public static function post($name = '', $default = null, $filter = null, $merge = false)$/;"	f
post	thinkphp/library/think/Route.php	/^    public static function post($rule, $route = '', $option = [], $pattern = [])$/;"	f
prefix	thinkphp/library/think/Cookie.php	/^        $prefix = !is_null($prefix) ? $prefix : $config['prefix'];$/;"	v
prefix	thinkphp/library/think/Cookie.php	/^        $prefix = !is_null($prefix) ? $prefix : self::$config['prefix'];$/;"	v
prefix	thinkphp/library/think/Cookie.php	/^    public static function prefix($prefix = '')$/;"	f
prefix	thinkphp/library/think/Session.php	/^        $prefix = !is_null($prefix) ? $prefix : self::$prefix;$/;"	v
prefix	thinkphp/library/think/Session.php	/^    protected static $prefix = '';$/;"	v
prefix	thinkphp/library/think/Session.php	/^    public static function prefix($prefix = '')$/;"	f
prefix	thinkphp/library/think/db/Connection.php	/^            $prefix = $this->config['prefix'];$/;"	v
prefix	thinkphp/library/think/db/Query.php	/^            $prefix = $prefix ?: $tableName;$/;"	v
prefix	thinkphp/library/think/db/Query.php	/^            $prefix = $this->connection->getConfig('prefix');$/;"	v
prefix	thinkphp/library/think/process/Builder.php	/^        $this->prefix = is_array($prefix) ? $prefix : [$prefix];$/;"	v
prefix	thinkphp/library/think/process/Builder.php	/^    private $prefix         = [];$/;"	v
prefixDirsPsr4	thinkphp/library/think/Loader.php	/^    private static $prefixDirsPsr4    = [];$/;"	v
prefixLengthsPsr4	thinkphp/library/think/Loader.php	/^    private static $prefixLengthsPsr4 = [];$/;"	v
prefixesPsr0	thinkphp/library/think/Loader.php	/^    private static $prefixesPsr0 = [];$/;"	v
proc	thinkphp/library/think/Process.php	/^        $proc = @proc_open('echo 1', [['pty'], ['pty'], ['pty']], $pipes);$/;"	v
process	thinkphp/library/think/Console.php	/^        $process        = proc_open('mode CON', $descriptorspec, $pipes, null, null, ['suppress_errors' => true]);$/;"	v
process	thinkphp/library/think/Console.php	/^        $process        = proc_open('stty -a | grep columns', $descriptorspec, $pipes, null, null, ['suppress_errors' => true]);$/;"	v
process	thinkphp/library/think/Process.php	/^        $process = clone $this;$/;"	v
process	thinkphp/library/think/Process.php	/^        $this->process                      = null;$/;"	v
process	thinkphp/library/think/Process.php	/^        $this->process = proc_open($commandline, $descriptors, $this->processPipes->pipes, $this->cwd, $this->env, $this->options);$/;"	v
process	thinkphp/library/think/Process.php	/^    private $process;$/;"	v
process	thinkphp/library/think/console/helper/Process.php	/^            $process = $cmd;$/;"	v
process	thinkphp/library/think/console/helper/Process.php	/^            $process = ProcessBuilder::create($cmd)->getProcess();$/;"	v
process	thinkphp/library/think/console/helper/Process.php	/^            $process = new ThinkProcess($cmd);$/;"	v
process	thinkphp/library/think/console/helper/Process.php	/^        $process = $this->run($output, $cmd, $error, $callback);$/;"	v
process	thinkphp/library/think/process/Builder.php	/^        $process = new Process($script, $this->cwd, $env, $this->input, $this->timeout, $options);$/;"	v
process	thinkphp/library/think/process/exception/Faild.php	/^        $this->process = $process;$/;"	v
process	thinkphp/library/think/process/exception/Faild.php	/^    private $process;$/;"	v
process	thinkphp/library/think/process/exception/Timeout.php	/^        $this->process     = $process;$/;"	v
process	thinkphp/library/think/process/exception/Timeout.php	/^    private $process;$/;"	v
processInformation	thinkphp/library/think/Process.php	/^        $this->processInformation           = null;$/;"	v
processInformation	thinkphp/library/think/Process.php	/^        $this->processInformation = proc_get_status($this->process);$/;"	v
processInformation	thinkphp/library/think/Process.php	/^    private $processInformation;$/;"	v
processPipes	thinkphp/library/think/Process.php	/^            $this->processPipes = UnixPipes::create($this, $this->input);$/;"	v
processPipes	thinkphp/library/think/Process.php	/^            $this->processPipes = WindowsPipes::create($this, $this->input);$/;"	v
processPipes	thinkphp/library/think/Process.php	/^    private $processPipes;$/;"	v
progress	thinkphp/library/think/console/helper/Debug.php	/^    public function progress($id, $buffer, $error = false, $prefix = 'OUT', $errorPrefix = 'ERR')$/;"	f
prompt	thinkphp/library/think/console/helper/question/Choice.php	/^        $this->prompt = $prompt;$/;"	v
prompt	thinkphp/library/think/console/helper/question/Choice.php	/^    private $prompt       = ' > ';$/;"	v
pty	thinkphp/library/think/Process.php	/^        $this->pty                          = false;$/;"	v
pty	thinkphp/library/think/Process.php	/^        $this->pty = (bool)$bool;$/;"	v
pty	thinkphp/library/think/Process.php	/^    private $pty;$/;"	v
ptyMode	thinkphp/library/think/process/pipes/Unix.php	/^        $this->ptyMode       = (bool)$ptyMode;$/;"	v
ptyMode	thinkphp/library/think/process/pipes/Unix.php	/^    private $ptyMode;$/;"	v
push	thinkphp/library/think/console/output/formatter/Stack.php	/^    public function push(Style $style)$/;"	f
put	thinkphp/library/think/Input.php	/^    public static function put($name = '', $default = null, $filter = null, $merge = false)$/;"	f
put	thinkphp/library/think/Route.php	/^    public static function put($rule, $route = '', $option = [], $pattern = [])$/;"	f
query	thinkphp/library/think/Model.php	/^        $query = self::parseQuery($data, $with, $cache);$/;"	v
query	thinkphp/library/think/db/Builder.php	/^                    $query = new Query($this->connection);$/;"	v
query	thinkphp/library/think/db/Builder.php	/^        $query = new Query($this->connection);$/;"	v
query	thinkphp/library/think/db/Builder.php	/^        $this->query = $query;$/;"	v
query	thinkphp/library/think/db/Builder.php	/^    protected $query;$/;"	v
query	thinkphp/library/think/db/Connection.php	/^        $this->query = new Query($this);$/;"	v
query	thinkphp/library/think/db/Connection.php	/^    public function query($sql, $bind = [], $fetch = false, $master = false, $returnPdo = false)$/;"	f
query	thinkphp/library/think/model/Merge.php	/^        $query = self::attachQuery($query);$/;"	v
query	thinkphp/library/think/model/Merge.php	/^        $query = self::parseQuery($data, $with, $cache);$/;"	v
queryStr	thinkphp/library/think/db/Connection.php	/^        $this->queryStr = $this->getBindSql($sql, $bind);$/;"	v
queryStr	thinkphp/library/think/db/Connection.php	/^    protected $queryStr = '';$/;"	v
queryStr	thinkphp/library/think/db/connector/Oracle.php	/^        $this->queryStr = $this->getBindSql($sql, $bind);$/;"	v
queryTimes	thinkphp/library/think/Db.php	/^    public static $queryTimes = 0;$/;"	v
question	thinkphp/library/think/console/helper/question/Question.php	/^        $this->question = $question;$/;"	v
question	thinkphp/library/think/console/helper/question/Question.php	/^    private $question;$/;"	v
queue	thinkphp/library/think/cache/driver/Apc.php	/^                    $queue = [];$/;"	v
queue	thinkphp/library/think/cache/driver/Apc.php	/^                $queue = apc_fetch('__info__');$/;"	v
queue	thinkphp/library/think/cache/driver/Db.php	/^                    $queue = [];$/;"	v
queue	thinkphp/library/think/cache/driver/Db.php	/^                    $queue = unserialize($result[0]['data']);$/;"	v
queue	thinkphp/library/think/cache/driver/Db.php	/^                $queue  = xcache_get('__info__');$/;"	v
queue	thinkphp/library/think/cache/driver/File.php	/^                    $queue = [];$/;"	v
queue	thinkphp/library/think/cache/driver/File.php	/^                $queue      = unserialize(file_get_contents($queue_file));$/;"	v
queue	thinkphp/library/think/cache/driver/Memcache.php	/^                    $queue = [];$/;"	v
queue	thinkphp/library/think/cache/driver/Memcache.php	/^                $queue = $this->handler->get('__info__');$/;"	v
queue	thinkphp/library/think/cache/driver/Memcached.php	/^                    $queue = [];$/;"	v
queue	thinkphp/library/think/cache/driver/Memcached.php	/^                $queue = $this->handler->get('__info__');$/;"	v
queue	thinkphp/library/think/cache/driver/Redis.php	/^                $queue = $this->handler->get('__info__');$/;"	v
queue	thinkphp/library/think/cache/driver/Redis.php	/^                $queue = explode(',', $queue);$/;"	v
queue	thinkphp/library/think/cache/driver/Sae.php	/^    protected function queue($key)$/;"	f
queue	thinkphp/library/think/cache/driver/Secache.php	/^                    $queue = [];$/;"	v
queue	thinkphp/library/think/cache/driver/Secache.php	/^                $queue = $this->handler->fetch(md5('__info__'));$/;"	v
queue	thinkphp/library/think/cache/driver/Wincache.php	/^                    $queue = [];$/;"	v
queue	thinkphp/library/think/cache/driver/Wincache.php	/^                $queue = wincache_ucache_get('__info__');$/;"	v
queue	thinkphp/library/think/cache/driver/Xcache.php	/^                    $queue = [];$/;"	v
queue	thinkphp/library/think/cache/driver/Xcache.php	/^                $queue = xcache_get('__info__');$/;"	v
queue_file	thinkphp/library/think/cache/driver/File.php	/^                $queue_file = dirname($filename) . '\/__info__.php';$/;"	v
queue_name	thinkphp/library/think/cache/driver/Sae.php	/^        $queue_name = isset($this->options['queue_name']) ? $this->options['queue_name'] : 'think_queue';$/;"	v
quote	thinkphp/library/think/db/Connection.php	/^    public function quote($str)$/;"	f
quote	thinkphp/library/think/process/Utils.php	/^                $quote = true;$/;"	v
quote	thinkphp/library/think/process/Utils.php	/^        $quote           = false;$/;"	v
r	thinkphp/library/think/console/command/Command.php	/^            $r = new \\ReflectionFunction($code);$/;"	v
r	thinkphp/library/think/db/Connection.php	/^                $r = $m;$/;"	v
r	thinkphp/library/think/db/Connection.php	/^                $r = $this->config['slave_no'];$/;"	v
r	thinkphp/library/think/db/Connection.php	/^                $r = floor(mt_rand($this->config['master_num'], count($_config['hostname']) - 1));$/;"	v
r	thinkphp/library/think/db/Connection.php	/^            $r = floor(mt_rand(0, count($_config['hostname']) - 1));$/;"	v
r	thinkphp/library/think/process/pipes/Unix.php	/^            $r = $this->pipes;$/;"	v
r	thinkphp/library/think/process/pipes/Unix.php	/^            $r = array_merge($this->pipes, ['input' => $this->input]);$/;"	v
r	thinkphp/library/think/process/pipes/Windows.php	/^        $r = null !== $this->input ? ['input' => $this->input] : null;$/;"	v
rand	thinkphp/library/think/template/taglib/Cx.php	/^        $rand       = rand(); \/\/添加随机数，防止嵌套变量冲突$/;"	v
range	thinkphp/library/think/Config.php	/^        $range                          = $range ?: self::$range;$/;"	v
range	thinkphp/library/think/Config.php	/^        $range = $range ?: self::$range;$/;"	v
range	thinkphp/library/think/Config.php	/^    private static $range = '_sys_';$/;"	v
range	thinkphp/library/think/Config.php	/^    public static function range($range)$/;"	f
range	thinkphp/library/think/Lang.php	/^        $range = $range ?: self::$range;$/;"	v
range	thinkphp/library/think/Lang.php	/^    private static $range = 'zh-cn';$/;"	v
range	thinkphp/library/think/Lang.php	/^    public static function range($range = '')$/;"	f
range	thinkphp/library/think/model/Relation.php	/^                    $range = [];$/;"	v
read	application/index/controller/News.php	/^    public function read() {$/;"	f
read	thinkphp/library/think/process/pipes/Unix.php	/^        $read = [];$/;"	v
read	thinkphp/library/think/process/pipes/Windows.php	/^        $read = [];$/;"	v
read	thinkphp/library/think/session/driver/Memcache.php	/^    public function read($sessID)$/;"	f
read	thinkphp/library/think/session/driver/Memcached.php	/^    public function read($sessID)$/;"	f
read	thinkphp/library/think/session/driver/Redis.php	/^    public function read($sessID)$/;"	f
read	thinkphp/library/think/template/driver/File.php	/^    public function read($cacheFile, $vars = [])$/;"	f
read	thinkphp/library/think/template/driver/Sae.php	/^    public function read($cacheFile, $vars = [])$/;"	f
readAndWrite	thinkphp/library/think/process/pipes/Unix.php	/^    public function readAndWrite($blocking, $close = false)$/;"	f
readAndWrite	thinkphp/library/think/process/pipes/Windows.php	/^    public function readAndWrite($blocking, $close = false)$/;"	f
readBytes	thinkphp/library/think/process/pipes/Windows.php	/^    private $readBytes = [$/;"	v
readCmd	thinkphp/library/think/console/helper/Question.php	/^            $readCmd = $shell === 'csh' ? 'set mypassword = $<' : 'read -r mypassword';$/;"	v
readPipes	thinkphp/library/think/Process.php	/^    private function readPipes($blocking, $close)$/;"	f
readTimes	thinkphp/library/think/Cache.php	/^    public static $readTimes   = 0;$/;"	v
record	thinkphp/library/think/Log.php	/^    public static function record($msg, $type = 'log')$/;"	f
redirect	thinkphp/library/think/Response.php	/^    public static function redirect($url, $params = [])$/;"	f
redirect	thinkphp/library/traits/controller/Jump.php	/^    public function redirect($url, $params = [])$/;"	f
reflect	thinkphp/library/think/App.php	/^            $reflect = new \\ReflectionMethod($class, $method[1]);$/;"	v
reflect	thinkphp/library/think/App.php	/^            $reflect = new \\ReflectionMethod($method);$/;"	v
reflect	thinkphp/library/think/App.php	/^        $reflect = new \\ReflectionFunction($function);$/;"	v
reflect	thinkphp/library/think/Route.php	/^                    $reflect    = new \\ReflectionFunction($rule);$/;"	v
regenerate	thinkphp/library/think/Session.php	/^    private static function regenerate()$/;"	f
regex	thinkphp/library/think/Template.php	/^                        $regex = $begin . $tagName . '\\b(?>(?:(?!' . $name . '=).)*)\\b' . $name . '=([\\'\\"])(?<name>[\\$\\w\\-\\\/\\.\\:@,\\\\\\\\]+)\\\\1(?>(?:(?!' . $end . ').)*)' . $end;$/;"	v
regex	thinkphp/library/think/Template.php	/^                        $regex = $begin . $tagName . '\\b(?>(?:(?!' . $name . '=).)*)\\b' . $name . '=([\\'\\"])(?<name>[\\$\\w\\-\\\/\\.\\:@,\\\\\\\\]+)\\\\1(?>[^' . $end . ']*)' . $end;$/;"	v
regex	thinkphp/library/think/Template.php	/^                        $regex = $begin . '(?:' . $tagName . '\\b(?>(?:(?!name=).)*)\\bname=([\\'\\"])(?<name>[\\$\\w\\-\\\/\\.]+)\\\\1(?>(?:(?!' . $end . ').)*)|\\\/' . $tagName . ')' . $end;$/;"	v
regex	thinkphp/library/think/Template.php	/^                        $regex = $begin . '(?:' . $tagName . '\\b(?>(?:(?!name=).)*)\\bname=([\\'\\"])(?<name>[\\$\\w\\-\\\/\\.]+)\\\\1(?>[^' . $end . ']*)|\\\/' . $tagName . ')' . $end;$/;"	v
regex	thinkphp/library/think/Template.php	/^                        $regex = '(' . $begin . $tagName . '\\b(?>(?:(?!' . $end . ').)*)' . $end . ')';$/;"	v
regex	thinkphp/library/think/Template.php	/^                        $regex = '(' . $begin . $tagName . '\\b(?>[^' . $end . ']*)' . $end . ')';$/;"	v
regex	thinkphp/library/think/Template.php	/^                    $regex = '<!--###literal(\\d+)###-->';$/;"	v
regex	thinkphp/library/think/Template.php	/^                $regex = $begin . '((?:[\\$]{1,2}[a-wA-w_]|[\\:\\~][\\$a-wA-w_]|[+]{2}[\\$][a-wA-w_]|[-]{2}[\\$][a-wA-w_]|\\\/[\\*\\\/])(?>(?:(?!' . $end . ').)*))' . $end;$/;"	v
regex	thinkphp/library/think/Template.php	/^                $regex = $begin . '((?:[\\$]{1,2}[a-wA-w_]|[\\:\\~][\\$a-wA-w_]|[+]{2}[\\$][a-wA-w_]|[-]{2}[\\$][a-wA-w_]|\\\/[\\*\\\/])(?>[^' . $end . ']*))' . $end;$/;"	v
regex	thinkphp/library/think/Template.php	/^        $regex  = $this->getRegex('block');$/;"	v
regex	thinkphp/library/think/Template.php	/^        $regex  = $this->getRegex('extend');$/;"	v
regex	thinkphp/library/think/Template.php	/^        $regex = $this->getRegex($restore ? 'restoreliteral' : 'literal');$/;"	v
regex	thinkphp/library/think/Template.php	/^        $regex = $this->getRegex('include');$/;"	v
regex	thinkphp/library/think/Template.php	/^        $regex = $this->getRegex('tag');$/;"	v
regex	thinkphp/library/think/Template.php	/^        $regex = '';$/;"	v
regex	thinkphp/library/think/Template.php	/^        $regex = '\/\\s+(?>(?<name>[\\w-]+)\\s*)=(?>\\s*)([\\"\\'])(?<value>(?:(?!\\\\2).)*)\\\\2\/is';$/;"	v
regex	thinkphp/library/think/Validate.php	/^    protected $regex = [];$/;"	v
regex	thinkphp/library/think/Validate.php	/^    protected function regex($value, $rule)$/;"	f
regex	thinkphp/library/think/console/helper/question/Confirmation.php	/^        $regex   = $this->trueAnswerRegex;$/;"	v
regex	thinkphp/library/think/template/TagLib.php	/^                $regex = $begin . '(' . $tagName . ')\\b(?>(?:(?!' . $end . ').)*)' . $end;$/;"	v
regex	thinkphp/library/think/template/TagLib.php	/^                $regex = $begin . '(' . $tagName . ')\\b(?>[^' . $end . ']*)' . $end;$/;"	v
regex	thinkphp/library/think/template/TagLib.php	/^                $regex = $begin . '(?:(' . $tagName . ')\\b(?>(?:(?!' . $end . ').)*)|\\\/(' . $tagName . '))' . $end;$/;"	v
regex	thinkphp/library/think/template/TagLib.php	/^                $regex = $begin . '(?:(' . $tagName . ')\\b(?>[^' . $end . ']*)|\\\/(' . $tagName . '))' . $end;$/;"	v
regex	thinkphp/library/think/template/TagLib.php	/^            $regex   = $this->getRegex(array_keys($tags[0]), 0);$/;"	v
regex	thinkphp/library/think/template/TagLib.php	/^            $regex = $this->getRegex(array_keys($tags[1]), 1);$/;"	v
regex	thinkphp/library/think/template/TagLib.php	/^        $regex  = '\/\\s+(?>(?<name>[\\w-]+)\\s*)=(?>\\s*)([\\"\\'])(?<value>(?:(?!\\\\2).)*)\\\\2\/is';$/;"	v
register	thinkphp/library/think/Console.php	/^    public function register($name)$/;"	f
register	thinkphp/library/think/Error.php	/^    public static function register()$/;"	f
register	thinkphp/library/think/Loader.php	/^    public static function register($autoload = '')$/;"	f
register	thinkphp/library/think/Route.php	/^    public static function register($rule, $route = '', $type = '*', $option = [], $pattern = [])$/;"	f
register	thinkphp/mode/console/Error.php	/^    public static function register()$/;"	f
registerComposerLoader	thinkphp/library/think/Loader.php	/^    private static function registerComposerLoader()$/;"	f
relation	thinkphp/library/think/Model.php	/^        $this->relation = new Relation($this);$/;"	v
relation	thinkphp/library/think/Model.php	/^    protected $relation;$/;"	v
relation	thinkphp/library/think/db/Query.php	/^                $relation   = $key;$/;"	v
relation	thinkphp/library/think/db/Query.php	/^    public function relation($relation)$/;"	f
relation	thinkphp/library/think/model/Relation.php	/^                $relation = $key;$/;"	v
relation	thinkphp/library/think/model/Relation.php	/^            $this->relation = [];$/;"	v
relation	thinkphp/library/think/model/Relation.php	/^        $relation   = $this->parent->$name();$/;"	v
relationFk	thinkphp/library/think/model/Relation.php	/^            $relationFk = $data->getPk();$/;"	v
relationFk	thinkphp/library/think/model/Relation.php	/^            $relationFk = $model->getPk();$/;"	v
relationFk	thinkphp/library/think/model/Relation.php	/^        $relationFk = $model->getPk();$/;"	v
relationModel	thinkphp/library/think/model/Merge.php	/^    protected static $relationModel = []; \/\/ HAS ONE 关联的模型列表$/;"	v
relationQuery	thinkphp/library/think/Model.php	/^    public function relationQuery($relations)$/;"	f
relations	thinkphp/library/think/Model.php	/^            $relations = explode(',', $relations);$/;"	v
relations	thinkphp/library/think/model/Relation.php	/^        $relations = is_string($relation) ? explode(',', $relation) : $relation;$/;"	v
remark	thinkphp/library/think/Debug.php	/^    public static function remark($name, $value = '')$/;"	f
remote	thinkphp/library/think/log/driver/File.php	/^        $remote = isset($_SERVER['REMOTE_ADDR']) ? $_SERVER['REMOTE_ADDR'] : '0.0.0.0';$/;"	v
removeFiles	thinkphp/library/think/process/pipes/Windows.php	/^    private function removeFiles()$/;"	f
renderException	thinkphp/library/think/Console.php	/^    public function renderException(\\Exception $e, Stream $output)$/;"	f
replace	thinkphp/library/think/Lang.php	/^                $replace = array_keys($vars);$/;"	v
replace	thinkphp/library/think/Template.php	/^                            $replace = str_replace($baseBlocks[$key]['begin'] . $baseBlocks[$key]['content'] . $baseBlocks[$key]['end'], $blocks[$key]['content'], $replace);$/;"	v
replace	thinkphp/library/think/Template.php	/^                        $replace = str_replace(['{__BLOCK__}', '{__block__}'], $replace, $blocks[$name]['content']);$/;"	v
replace	thinkphp/library/think/Template.php	/^                    $replace = $val['content'];$/;"	v
replace	thinkphp/library/think/Template.php	/^                    $replace = isset($array['replace']) ? $array['replace'] : $this->config['layout_item'];$/;"	v
replace	thinkphp/library/think/Template.php	/^            $replace = ['><', '>'];$/;"	v
replace	thinkphp/library/think/Template.php	/^        $replace = $this->config['tpl_replace_string'];$/;"	v
replace	thinkphp/library/think/View.php	/^            $this->replace = array_merge($this->replace, $content);$/;"	v
replace	thinkphp/library/think/View.php	/^        $this->replace = $replace;$/;"	v
replace	thinkphp/library/think/View.php	/^    protected $replace = [];$/;"	v
replace	thinkphp/library/think/View.php	/^    public function replace($content, $replace = '')$/;"	f
replace	thinkphp/library/think/template/TagLib.php	/^                    $replace = explode($break, $this->$method($attrs, $break));$/;"	v
replacements	thinkphp/library/think/console/command/Command.php	/^        $replacements = [$/;"	v
reqs	thinkphp/library/think/log/driver/File.php	/^        $reqs       = number_format(1 \/ number_format($runtime, 8), 2);$/;"	v
reqs	thinkphp/library/think/log/driver/Sae.php	/^        $reqs       = number_format(1 \/ number_format($runtime, 8), 2);$/;"	v
reqs	thinkphp/library/think/log/driver/Socket.php	/^        $reqs       = number_format(1 \/ number_format($runtime, 8), 2);$/;"	v
reqs	thinkphp/library/think/log/driver/Trace.php	/^        $reqs    = number_format(1 \/ number_format($runtime, 8), 2);$/;"	v
request	thinkphp/library/think/Input.php	/^    public static function request($name = '', $default = null, $filter = null, $merge = false)$/;"	f
requireCallback	thinkphp/library/think/Validate.php	/^    protected function requireCallback($value, $rule, $data)$/;"	f
requireIf	thinkphp/library/think/Validate.php	/^    protected function requireIf($value, $rule, $data)$/;"	f
requireProcessIsStarted	thinkphp/library/think/Process.php	/^    private function requireProcessIsStarted($functionName)$/;"	f
requireProcessIsTerminated	thinkphp/library/think/Process.php	/^    private function requireProcessIsTerminated($functionName)$/;"	f
requireWith	thinkphp/library/think/Validate.php	/^    protected function requireWith($value, $rule, $data)$/;"	f
requiredCount	thinkphp/library/think/console/input/Definition.php	/^        $this->requiredCount      = 0;$/;"	v
requiredCount	thinkphp/library/think/console/input/Definition.php	/^    private $requiredCount;$/;"	v
res	application/admin/controller/Article.php	/^        $res = $article -> add($data);$/;"	v
res	application/admin/controller/Article.php	/^        $res = $article -> getList(6);$/;"	v
res	application/admin/controller/Article.php	/^        $res = $article -> getRow(1);$/;"	v
res	application/admin/controller/Index.php	/^        $res = $_SERVER['PATH_INFO'];$/;"	v
res	application/index/controller/Index.php	/^        $res = $_SERVER['PATH_INFO'];$/;"	v
reset	thinkphp/library/think/Config.php	/^    public static function reset($range = '')$/;"	f
reset	thinkphp/library/think/console/output/formatter/Stack.php	/^    public function reset()$/;"	f
resetProcessData	thinkphp/library/think/Process.php	/^    private function resetProcessData()$/;"	f
resource	thinkphp/library/think/Route.php	/^    public static function resource($rule, $route = '', $option = [], $pattern = [])$/;"	f
response	thinkphp/library/think/controller/Rest.php	/^    protected function response($data, $type = '', $code = 200)$/;"	f
rest	thinkphp/library/think/Route.php	/^    private static $rest = [$/;"	v
rest	thinkphp/library/think/Route.php	/^    public static function rest($name, $resource = [])$/;"	f
restDefaultMethod	thinkphp/library/think/controller/Rest.php	/^    protected $restDefaultMethod = 'get';$/;"	v
restDefaultType	thinkphp/library/think/controller/Rest.php	/^    protected $restDefaultType   = 'html';$/;"	v
restMethodList	thinkphp/library/think/controller/Rest.php	/^    protected $restMethodList    = 'get|post|put|delete';$/;"	v
restOutputType	thinkphp/library/think/controller/Rest.php	/^    protected $restOutputType    = [ \/\/ REST允许输出的资源类型列表$/;"	v
restTypeList	thinkphp/library/think/controller/Rest.php	/^    protected $restTypeList      = 'html|xml|json|rss';$/;"	v
restart	thinkphp/library/think/Process.php	/^    public function restart($callback = null)$/;"	f
result	thinkphp/library/think/App.php	/^            $result = Route::check($_SERVER['PATH_INFO'], $depr, !IS_CLI ? $config['url_domain_deploy'] : false);$/;"	v
result	thinkphp/library/think/App.php	/^            $result = Route::parseUrl($_SERVER['PATH_INFO'], $depr);$/;"	v
result	thinkphp/library/think/App.php	/^        $result = false;$/;"	v
result	thinkphp/library/think/Config.php	/^            $result = getenv(ENV_PREFIX . $name);$/;"	v
result	thinkphp/library/think/Config.php	/^            $result = getenv(ENV_PREFIX . $name[0] . '_' . $name[1]);$/;"	v
result	thinkphp/library/think/Hook.php	/^                $result = self::exec($name, $tag, $params);$/;"	v
result	thinkphp/library/think/Input.php	/^                $result = $filter;$/;"	v
result	thinkphp/library/think/Input.php	/^                $result = [$filter];$/;"	v
result	thinkphp/library/think/Input.php	/^                $result = array_merge(self::getFilter(), array_diff($result, self::getFilter()));$/;"	v
result	thinkphp/library/think/Input.php	/^                $result = explode(',', $filter);$/;"	v
result	thinkphp/library/think/Input.php	/^            $result = [];$/;"	v
result	thinkphp/library/think/Input.php	/^            $result = self::getFilter();$/;"	v
result	thinkphp/library/think/Model.php	/^                    $result = call_user_func_array($callback, [ & $params]);$/;"	v
result	thinkphp/library/think/Model.php	/^                $result = $data->delete();$/;"	v
result	thinkphp/library/think/Model.php	/^                $result = $insertId;$/;"	v
result	thinkphp/library/think/Model.php	/^            $result = $data->with($with)->cache($cache);$/;"	v
result	thinkphp/library/think/Model.php	/^            $result = $this->isUpdate(false)->save($data, [], false);$/;"	v
result	thinkphp/library/think/Model.php	/^            $result = self::db()->insert($this->data);$/;"	v
result	thinkphp/library/think/Model.php	/^            $result = self::db()->where($where)->update($this->data);$/;"	v
result	thinkphp/library/think/Model.php	/^        $result    = false;$/;"	v
result	thinkphp/library/think/Model.php	/^        $result = self::db()->delete($this->data);$/;"	v
result	thinkphp/library/think/Model.php	/^        $result = self::with($with)->cache($cache);$/;"	v
result	thinkphp/library/think/Process.php	/^        $result = $this->processPipes->readAndWrite($blocking, $close);$/;"	v
result	thinkphp/library/think/Process.php	/^        static $result;$/;"	v
result	thinkphp/library/think/Response.php	/^            $result = \\think\\View::instance()->fetch(Config::get('dispatch_error_tmpl'), $result);$/;"	v
result	thinkphp/library/think/Response.php	/^            $result = \\think\\View::instance()->fetch(Config::get('dispatch_success_tmpl'), $result);$/;"	v
result	thinkphp/library/think/Response.php	/^        $result = [$/;"	v
result	thinkphp/library/think/Response.php	/^    public static function result($data, $code = 0, $msg = '', $type = '')$/;"	f
result	thinkphp/library/think/Route.php	/^                        $result = ['route' => $val, 'option' => $option, 'pattern' => $pattern];$/;"	v
result	thinkphp/library/think/Route.php	/^                        $result = ['route' => $val[0], 'option' => $val[1], 'pattern' => isset($val[2]) ? $val[2] : []];$/;"	v
result	thinkphp/library/think/Route.php	/^                        $result = ['routes' => $val, 'option' => $option, 'pattern' => $pattern];$/;"	v
result	thinkphp/library/think/Route.php	/^                        $result = self::checkRule($key, $route, $url1, $pattern, $option);$/;"	v
result	thinkphp/library/think/Route.php	/^                    $result = $array['path'];$/;"	v
result	thinkphp/library/think/Route.php	/^                    $result = $rule;$/;"	v
result	thinkphp/library/think/Route.php	/^                    $result = ['route' => $route, 'option' => $option, 'pattern' => $pattern];$/;"	v
result	thinkphp/library/think/Route.php	/^                    $result = ['routes' => $route, 'option' => $option, 'pattern' => $pattern];$/;"	v
result	thinkphp/library/think/Route.php	/^                    $result = self::checkRule($rule, $route, $url, $pattern, $option);$/;"	v
result	thinkphp/library/think/Route.php	/^            $result = ['type' => 'controller', 'controller' => substr($url, 1), 'params' => $matches];$/;"	v
result	thinkphp/library/think/Route.php	/^            $result = ['type' => 'method', 'method' => is_array($route) ? [$url, $route[1]] : $url, 'params' => $matches];$/;"	v
result	thinkphp/library/think/Route.php	/^            $result = ['type' => 'module', 'module' => $result['route']];$/;"	v
result	thinkphp/library/think/Route.php	/^            $result = ['type' => 'redirect', 'url' => $url, 'status' => (is_array($route) && isset($route[1])) ? $route[1] : 301];$/;"	v
result	thinkphp/library/think/Route.php	/^            $result = self::parseRoute($url);$/;"	v
result	thinkphp/library/think/Route.php	/^        $result = self::parseRoute($url, true);$/;"	v
result	thinkphp/library/think/Template.php	/^        $result = [];$/;"	v
result	thinkphp/library/think/Validate.php	/^                        $result = call_user_func_array($callback, [$value, $rule, &$data, $field]);$/;"	v
result	thinkphp/library/think/Validate.php	/^                        $result = true;$/;"	v
result	thinkphp/library/think/Validate.php	/^                    $result = $this->regex($value, $rule);$/;"	v
result	thinkphp/library/think/Validate.php	/^                    $result = call_user_func_array($rule, [$value, &$data]);$/;"	v
result	thinkphp/library/think/Validate.php	/^                    $result = call_user_func_array(self::$type[$rule], [$value]);$/;"	v
result	thinkphp/library/think/Validate.php	/^                $result = !empty($value) && '0' != $value;$/;"	v
result	thinkphp/library/think/Validate.php	/^                $result = $this->filter($value, FILTER_VALIDATE_BOOLEAN);$/;"	v
result	thinkphp/library/think/Validate.php	/^                $result = $this->filter($value, FILTER_VALIDATE_EMAIL);$/;"	v
result	thinkphp/library/think/Validate.php	/^                $result = $this->filter($value, FILTER_VALIDATE_FLOAT);$/;"	v
result	thinkphp/library/think/Validate.php	/^                $result = $this->filter($value, FILTER_VALIDATE_INT);$/;"	v
result	thinkphp/library/think/Validate.php	/^                $result = $this->filter($value, FILTER_VALIDATE_IP, FILTER_FLAG_IPV4 | FILTER_FLAG_IPV6);$/;"	v
result	thinkphp/library/think/Validate.php	/^                $result = $this->filter($value, FILTER_VALIDATE_URL);$/;"	v
result	thinkphp/library/think/Validate.php	/^                $result = $this->regex($value, '\/^[A-Za-z0-9\\-\\_]+$\/');$/;"	v
result	thinkphp/library/think/Validate.php	/^                $result = $this->regex($value, '\/^[A-Za-z0-9]+$\/');$/;"	v
result	thinkphp/library/think/Validate.php	/^                $result = $this->regex($value, '\/^[A-Za-z]+$\/');$/;"	v
result	thinkphp/library/think/Validate.php	/^                $result = checkdnsrr($value);$/;"	v
result	thinkphp/library/think/Validate.php	/^                $result = false !== strtotime($value);$/;"	v
result	thinkphp/library/think/Validate.php	/^                $result = in_array($value, ['1', 'on', 'yes']);$/;"	v
result	thinkphp/library/think/Validate.php	/^                $result = is_array($value);$/;"	v
result	thinkphp/library/think/Validate.php	/^            $result = $this->checkItem($key, $value, $rule, $data, $title, $msg);$/;"	v
result	thinkphp/library/think/Validate.php	/^            $result = call_user_func_array($rules, [$value, &$data]);$/;"	v
result	thinkphp/library/think/Validate.php	/^        $result = call_user_func_array($rule, [$value, $data]);$/;"	v
result	thinkphp/library/think/cache/driver/Db.php	/^                $result = $this->handler->query('SELECT `data`,`datacrc` FROM `' . $this->options['table'] . '` WHERE `cachekey`=\\'__info__\\' AND `expire` =0 LIMIT 0,1');$/;"	v
result	thinkphp/library/think/cache/driver/Db.php	/^            $result  = $result[0];$/;"	v
result	thinkphp/library/think/cache/driver/Db.php	/^            $result = $this->handler->execute('INSERT INTO ' . $this->options['table'] . ' (`cachekey`,`data`,`expire`) VALUES (\\'' . $name . '\\',\\'' . $data . '\\',' . $expire . ')');$/;"	v
result	thinkphp/library/think/cache/driver/Db.php	/^            $result = $this->handler->execute('UPDATE ' . $this->options['table'] . ' SET data=\\'' . $data . '\\' ,expire=' . $expire . ' WHERE `cachekey`=\\'' . $name . '\\'');$/;"	v
result	thinkphp/library/think/cache/driver/Db.php	/^        $result = $this->handler->query('SELECT `data`,`datacrc` FROM `' . $this->options['table'] . '` WHERE `cachekey`=\\'' . $name . '\\' AND (`expire` =0 OR `expire`>' . time() . ') LIMIT 0,1');$/;"	v
result	thinkphp/library/think/cache/driver/Db.php	/^        $result = $this->handler->query('select `cachekey` from `' . $this->options['table'] . '` where `cachekey`=\\'' . $name . '\\' limit 0,1');$/;"	v
result	thinkphp/library/think/cache/driver/File.php	/^        $result = file_put_contents($filename, $data);$/;"	v
result	thinkphp/library/think/cache/driver/Redis.php	/^            $result = $this->handler->set($name, $value);$/;"	v
result	thinkphp/library/think/cache/driver/Redis.php	/^            $result = $this->handler->setex($name, $expire, $value);$/;"	v
result	thinkphp/library/think/cache/driver/Sqlite.php	/^        $result = sqlite_query($this->handler, $sql);$/;"	v
result	thinkphp/library/think/config/driver/Xml.php	/^        $result = (array) $content;$/;"	v
result	thinkphp/library/think/console/helper/question/Choice.php	/^                        $result = $choices[$result];$/;"	v
result	thinkphp/library/think/console/helper/question/Choice.php	/^                        $result = $choices[$value];$/;"	v
result	thinkphp/library/think/console/helper/question/Choice.php	/^                    $result = $value;$/;"	v
result	thinkphp/library/think/console/helper/question/Choice.php	/^                $result = array_search($value, $choices);$/;"	v
result	thinkphp/library/think/db/Builder.php	/^        $result = [];$/;"	v
result	thinkphp/library/think/db/Connection.php	/^                    $result = $this->getExplain($this->queryStr);$/;"	v
result	thinkphp/library/think/db/Connection.php	/^                $result  = [];$/;"	v
result	thinkphp/library/think/db/Connection.php	/^                $result = $this->PDOStatement->bindValue($param, $val);$/;"	v
result	thinkphp/library/think/db/Connection.php	/^                $result = $this->PDOStatement->bindValue($param, $val[0], $val[1]);$/;"	v
result	thinkphp/library/think/db/Connection.php	/^                $result = $this->execute($_sql);$/;"	v
result	thinkphp/library/think/db/Connection.php	/^                $result = call_user_func_array($callback, []);$/;"	v
result	thinkphp/library/think/db/Connection.php	/^            $result = $this->PDOStatement->execute();$/;"	v
result	thinkphp/library/think/db/Connection.php	/^        $result        = $this->PDOStatement->fetchAll($this->fetchType);$/;"	v
result	thinkphp/library/think/db/Query.php	/^                    $result = new $model($result);$/;"	v
result	thinkphp/library/think/db/Query.php	/^                $result = $pdo->fetchAll(PDO::FETCH_COLUMN);$/;"	v
result	thinkphp/library/think/db/Query.php	/^            $result       = ['fields' => $fields, 'type' => $type, 'bind' => $bind, 'pk' => $pk];$/;"	v
result	thinkphp/library/think/db/Query.php	/^            $result = $pdo->fetchColumn();$/;"	v
result	thinkphp/library/think/db/Query.php	/^            $result = $this->connection->query($sql, $this->getBind(), $options['fetch_sql'], $options['master'], $options['fetch_pdo']);$/;"	v
result	thinkphp/library/think/db/Query.php	/^            $result = Cache::get($guid);$/;"	v
result	thinkphp/library/think/db/Query.php	/^            $result = Cache::get($key);$/;"	v
result	thinkphp/library/think/db/Query.php	/^        $result           = false;$/;"	v
result	thinkphp/library/think/db/Query.php	/^        $result = $this->value('AVG(' . $field . ') AS tp_avg');$/;"	v
result	thinkphp/library/think/db/Query.php	/^        $result = $this->value('MAX(' . $field . ') AS tp_max');$/;"	v
result	thinkphp/library/think/db/Query.php	/^        $result = $this->value('MIN(' . $field . ') AS tp_min');$/;"	v
result	thinkphp/library/think/db/Query.php	/^        $result = $this->value('SUM(' . $field . ') AS tp_sum');$/;"	v
result	thinkphp/library/think/db/Query.php	/^        $result = false;$/;"	v
result	thinkphp/library/think/db/connector/Mysql.php	/^        $result = $pdo->fetch(\\PDO::FETCH_ASSOC);$/;"	v
result	thinkphp/library/think/db/connector/Mysql.php	/^        $result = $this->query($sql);$/;"	v
result	thinkphp/library/think/db/connector/Mysql.php	/^        $result = array_change_key_case($result);$/;"	v
result	thinkphp/library/think/db/connector/Oracle.php	/^            $result = $this->PDOStatement->execute();$/;"	v
result	thinkphp/library/think/db/connector/Oracle.php	/^        $result          = $this->query($url);$/;"	v
result	thinkphp/library/think/db/connector/Oracle.php	/^        $result = $this->query("select table_name from all_tables");$/;"	v
result	thinkphp/library/think/db/connector/Pgsql.php	/^        $result          = $this->query('select fields_name as "field",fields_type as "type",fields_not_null as "null",fields_key_name as "key",fields_default as "default",fields_default as "extra" from table_msg(' . $tableName . ');');$/;"	v
result	thinkphp/library/think/db/connector/Pgsql.php	/^        $result = $this->query("select tablename as Tables_in_test from pg_tables where  schemaname ='public'");$/;"	v
result	thinkphp/library/think/db/connector/Sqlite.php	/^        $result          = $this->query('PRAGMA table_info( ' . $tableName . ' )');$/;"	v
result	thinkphp/library/think/db/connector/Sqlite.php	/^        $result = $this->query("SELECT name FROM sqlite_master WHERE type='table' "$/;"	v
result	thinkphp/library/think/db/connector/Sqlsrv.php	/^        $result          = $this->query("SELECT   column_name,   data_type,   column_default,   is_nullable$/;"	v
result	thinkphp/library/think/db/connector/Sqlsrv.php	/^        $result = $this->query("SELECT TABLE_NAME$/;"	v
result	thinkphp/library/think/log/driver/Trace.php	/^                            $result = array_merge($result, isset($debug[$name]) ? $debug[$name] : []);$/;"	v
result	thinkphp/library/think/log/driver/Trace.php	/^                        $result = [];$/;"	v
result	thinkphp/library/think/model/Merge.php	/^                    $result = $insertId;$/;"	v
result	thinkphp/library/think/model/Merge.php	/^                $result = self::db()->name($this->name)->strict(false)->insert($this->data);$/;"	v
result	thinkphp/library/think/model/Merge.php	/^                $result = self::db()->strict(false)->update($data);$/;"	v
result	thinkphp/library/think/model/Merge.php	/^            $result = self::db()->delete($this->data);$/;"	v
result	thinkphp/library/think/model/Relation.php	/^                    $result                  = $this->save($data);$/;"	v
result	thinkphp/library/think/model/Relation.php	/^                    $result = $this->attach($data, !empty($pivot) ? $pivot[$key] : []);$/;"	v
result	thinkphp/library/think/model/Relation.php	/^                $result                            = $this->belongsToManyQuery($relation, $this->middle, $localKey, $foreignKey, $condition)->select();$/;"	v
result	thinkphp/library/think/model/Relation.php	/^                $result = $relation->where($foreignKey, $this->parent->$localKey)->find();$/;"	v
result	thinkphp/library/think/model/Relation.php	/^                $result = $relation->where($foreignKey, $this->parent->$localKey)->select();$/;"	v
result	thinkphp/library/think/model/Relation.php	/^                $result = $relation->where($localKey, $this->parent->$foreignKey)->find();$/;"	v
result	thinkphp/library/think/model/Relation.php	/^                $result = $relation;$/;"	v
result	thinkphp/library/think/model/Relation.php	/^        $result = false;$/;"	v
result	thinkphp/library/think/template/TagLib.php	/^        $result = [];$/;"	v
result	thinkphp/library/traits/controller/Jump.php	/^    public function result($data, $code = 0, $msg = '', $type = '')$/;"	f
resultSet	thinkphp/library/think/Model.php	/^        $resultSet = $db->select($data);$/;"	v
resultSet	thinkphp/library/think/db/Query.php	/^                    $resultSet = $result->eagerlyResultSet($resultSet, $options['with']);$/;"	v
resultSet	thinkphp/library/think/db/Query.php	/^                $resultSet = $pdo->fetchAll(PDO::FETCH_ASSOC);$/;"	v
resultSet	thinkphp/library/think/db/Query.php	/^            $resultSet = $this->connection->query($sql, $this->getBind(), $options['fetch_sql'], $options['master'], $options['fetch_pdo']);$/;"	v
resultSet	thinkphp/library/think/db/Query.php	/^            $resultSet = $this->options($options)$/;"	v
resultSet	thinkphp/library/think/db/Query.php	/^            $resultSet = Cache::get($key);$/;"	v
resultSet	thinkphp/library/think/db/Query.php	/^        $resultSet = $this->limit($count)->order($column, 'asc')->select();$/;"	v
resultSet	thinkphp/library/think/db/Query.php	/^        $resultSet = false;$/;"	v
results	thinkphp/library/think/console/helper/question/Choice.php	/^                $results = [];$/;"	v
ret	thinkphp/library/think/cache/driver/Lite.php	/^        $ret = file_put_contents($filename, ("<?php return " . var_export($value, true) . ";"));$/;"	v
ret	thinkphp/library/think/console/helper/Question.php	/^                        $ret = $matches[$ofs];$/;"	v
ret	thinkphp/library/think/console/helper/Question.php	/^                    $ret = trim($this->getHiddenResponse($output, $inputStream));$/;"	v
ret	thinkphp/library/think/console/helper/Question.php	/^                $ret = fgets($inputStream, 4096);$/;"	v
ret	thinkphp/library/think/console/helper/Question.php	/^                $ret = substr($ret, 0, $i);$/;"	v
ret	thinkphp/library/think/console/helper/Question.php	/^                $ret = trim($ret);$/;"	v
ret	thinkphp/library/think/console/helper/Question.php	/^            $ret = false;$/;"	v
ret	thinkphp/library/think/console/helper/Question.php	/^            $ret = trim($this->autocomplete($output, $question, $inputStream));$/;"	v
ret	thinkphp/library/think/console/helper/Question.php	/^        $ret          = '';$/;"	v
ret	thinkphp/library/think/console/helper/Question.php	/^        $ret = strlen($ret) > 0 ? $ret : $question->getDefault();$/;"	v
return	thinkphp/library/think/Route.php	/^        $return = self::checkUrlBind($url, $rules);$/;"	v
return	thinkphp/library/think/cache/driver/Secache.php	/^            $return = unserialize($data);$/;"	v
return	thinkphp/library/think/cache/driver/Secache.php	/^        $return = [];$/;"	v
right	thinkphp/library/think/Template.php	/^            $right = $keys = [];$/;"	v
right	thinkphp/library/think/template/TagLib.php	/^                $right = [];$/;"	v
rm	thinkphp/library/think/cache/driver/Apc.php	/^    public function rm($name)$/;"	f
rm	thinkphp/library/think/cache/driver/Db.php	/^    public function rm($name)$/;"	f
rm	thinkphp/library/think/cache/driver/File.php	/^    public function rm($name)$/;"	f
rm	thinkphp/library/think/cache/driver/Lite.php	/^    public function rm($name)$/;"	f
rm	thinkphp/library/think/cache/driver/Memcache.php	/^    public function rm($name, $ttl = false)$/;"	f
rm	thinkphp/library/think/cache/driver/Memcached.php	/^    public function rm($name, $ttl = false)$/;"	f
rm	thinkphp/library/think/cache/driver/Redis.php	/^    public function rm($name)$/;"	f
rm	thinkphp/library/think/cache/driver/Sae.php	/^    public function rm($name, $ttl = false)$/;"	f
rm	thinkphp/library/think/cache/driver/Secache.php	/^    public function rm($name)$/;"	f
rm	thinkphp/library/think/cache/driver/Sqlite.php	/^    public function rm($name)$/;"	f
rm	thinkphp/library/think/cache/driver/Test.php	/^    public function rm($name)$/;"	f
rm	thinkphp/library/think/cache/driver/Wincache.php	/^    public function rm($name)$/;"	f
rm	thinkphp/library/think/cache/driver/Xcache.php	/^    public function rm($name)$/;"	f
rollback	thinkphp/library/think/db/Connection.php	/^    public function rollback()$/;"	f
rootDomain	thinkphp/library/think/Route.php	/^                $rootDomain = Config::get('url_domain_root');$/;"	v
route	thinkphp/helper.php	/^function route($rule = '', $route = [], $type = '*', $option = [], $pattern = [])$/;"	f
route	thinkphp/library/think/App.php	/^    public static function route(array $config)$/;"	f
route	thinkphp/library/think/Route.php	/^                            $route   = $route[0];$/;"	v
route	thinkphp/library/think/Route.php	/^                    $route = !empty($val['route']) ? $val['route'] : '';$/;"	v
route	thinkphp/library/think/Route.php	/^            $route = [$module, $controller, $action];$/;"	v
route	thinkphp/library/think/Route.php	/^        $route = [null, null, null];$/;"	v
route	thinkphp/library/think/Url.php	/^                        $route = implode('\\\\', $route);$/;"	v
route	thinkphp/library/think/Url.php	/^                    $route = $route[0];$/;"	v
route	thinkphp/library/think/Url.php	/^                    $route = implode('\\\\', $route);$/;"	v
route	thinkphp/library/think/Url.php	/^                $route = $val['route'];$/;"	v
rs	application/admin/controller/Index.php	/^        $rs = $_SERVER;$/;"	v
rs	application/index/controller/Index.php	/^        $rs = $_SERVER;$/;"	v
rule	thinkphp/library/think/Route.php	/^                            $rule      = $rules['*'];$/;"	v
rule	thinkphp/library/think/Route.php	/^                        $rule      = $rules['*.' . $domain2];$/;"	v
rule	thinkphp/library/think/Route.php	/^                        $rule = $rules[$subDomain];$/;"	v
rule	thinkphp/library/think/Route.php	/^                        $rule = array_shift($val);$/;"	v
rule	thinkphp/library/think/Route.php	/^                    $rule   = substr($rule, 1, -1);$/;"	v
rule	thinkphp/library/think/Route.php	/^                    $rule = substr($rule, 0, -1);$/;"	v
rule	thinkphp/library/think/Route.php	/^                $rule = $rules[$_SERVER['HTTP_HOST']];$/;"	v
rule	thinkphp/library/think/Route.php	/^                $rule = implode('\/', $item) . '\/' . $last;$/;"	v
rule	thinkphp/library/think/Route.php	/^            $rule = str_replace($depr, '\/', $rule);$/;"	v
rule	thinkphp/library/think/Route.php	/^        $rule = explode('\/', $rule);$/;"	v
rule	thinkphp/library/think/Url.php	/^                        $rule = is_array($rule) ? $rule[0] : $rule;$/;"	v
rule	thinkphp/library/think/Url.php	/^            $rule = str_replace($depr, '\/', $rule);$/;"	v
rule	thinkphp/library/think/Validate.php	/^                $rule = $item;$/;"	v
rule	thinkphp/library/think/Validate.php	/^                $rule = $item[1];$/;"	v
rule	thinkphp/library/think/Validate.php	/^            $rule = $this->regex[$rule];$/;"	v
rule	thinkphp/library/think/Validate.php	/^            $rule = '\/^' . $rule . '$\/';$/;"	v
rule	thinkphp/library/think/Validate.php	/^            $rule = 'ipv4';$/;"	v
rule	thinkphp/library/think/Validate.php	/^            $rule = explode(',', $rule);$/;"	v
rule	thinkphp/library/think/Validate.php	/^            $this->rule = array_merge($this->rule, $name);$/;"	v
rule	thinkphp/library/think/Validate.php	/^        $this->rule    = array_merge($this->rule, $rules);$/;"	v
rule	thinkphp/library/think/Validate.php	/^    protected $rule = [];$/;"	v
rule	thinkphp/library/think/Validate.php	/^    public function rule($name, $rule = '')$/;"	f
rule	thinkphp/library/think/db/Builder.php	/^                $rule = $item;$/;"	v
rules	thinkphp/library/think/Route.php	/^                        $rules = [$key => $rules[self::$bind['group']]];$/;"	v
rules	thinkphp/library/think/Route.php	/^            $rules = array_merge(self::$rules['*'], $rules);$/;"	v
rules	thinkphp/library/think/Route.php	/^        $rules = self::$domain;$/;"	v
rules	thinkphp/library/think/Route.php	/^        $rules = self::$rules[REQUEST_METHOD];$/;"	v
rules	thinkphp/library/think/Route.php	/^    private static $rules = [$/;"	v
rules	thinkphp/library/think/Url.php	/^        $rules = Route::getRules();$/;"	v
rules	thinkphp/library/think/Validate.php	/^                $rules = explode('|', $rules);$/;"	v
rules	thinkphp/library/think/Validate.php	/^            $rules = $this->rule;$/;"	v
run	thinkphp/library/think/App.php	/^    public static function run()$/;"	f
run	thinkphp/library/think/Build.php	/^    public static function run(array $build = [])$/;"	f
run	thinkphp/library/think/Console.php	/^    public function run()$/;"	f
run	thinkphp/library/think/Process.php	/^    public function run($callback = null)$/;"	f
run	thinkphp/library/think/console/command/Command.php	/^    public function run(Input $input, Output $output)$/;"	f
run	thinkphp/library/think/console/helper/Process.php	/^    public function run(Output $output, $cmd, $error = null, $callback = null, $verbosity = Output::VERBOSITY_VERY_VERBOSE)$/;"	f
run	thinkphp/mode/console/App.php	/^    public static function run()$/;"	f
running	thinkphp/library/think/Process.php	/^            $running = '\\\\' === DS ? $this->isRunning() : $this->processPipes->areOpen();$/;"	v
runningCommand	thinkphp/library/think/Console.php	/^        $this->runningCommand = $command;$/;"	v
runningCommand	thinkphp/library/think/Console.php	/^        $this->runningCommand = null;$/;"	v
runningCommand	thinkphp/library/think/Console.php	/^    private $runningCommand;$/;"	v
runtime	thinkphp/library/think/db/Connection.php	/^                $runtime = Debug::getRangeTime('queryStartTime', 'queryEndTime');$/;"	v
runtime	thinkphp/library/think/log/driver/File.php	/^        $runtime    = microtime(true) - START_TIME;$/;"	v
runtime	thinkphp/library/think/log/driver/File.php	/^        $runtime    = number_format($runtime, 6);$/;"	v
runtime	thinkphp/library/think/log/driver/Sae.php	/^        $runtime    = microtime(true) - START_TIME;$/;"	v
runtime	thinkphp/library/think/log/driver/Sae.php	/^        $runtime    = number_format($runtime, 6);$/;"	v
runtime	thinkphp/library/think/log/driver/Socket.php	/^        $runtime    = microtime(true) - START_TIME;$/;"	v
runtime	thinkphp/library/think/log/driver/Socket.php	/^        $runtime    = number_format($runtime, 6);$/;"	v
runtime	thinkphp/library/think/log/driver/Trace.php	/^        $runtime = microtime(true) - START_TIME;$/;"	v
runtime	thinkphp/library/think/log/driver/Trace.php	/^        $runtime = number_format($runtime, 6);$/;"	v
save	thinkphp/library/think/Log.php	/^    public static function save()$/;"	f
save	thinkphp/library/think/Model.php	/^    public function save($data = [], $where = [], $getId = true)$/;"	f
save	thinkphp/library/think/log/driver/File.php	/^    public function save(array $log = [])$/;"	f
save	thinkphp/library/think/log/driver/Sae.php	/^    public function save(array $log = [])$/;"	f
save	thinkphp/library/think/log/driver/Socket.php	/^    public function save(array $logs = [])$/;"	f
save	thinkphp/library/think/log/driver/Test.php	/^    public function save(array $log = [])$/;"	f
save	thinkphp/library/think/log/driver/Trace.php	/^    public function save(array $log = [])$/;"	f
save	thinkphp/library/think/model/Merge.php	/^    public function save($data = [], $where = [], $getId = true)$/;"	f
save	thinkphp/library/think/model/Relation.php	/^    public function save($data, array $pivot = [])$/;"	f
saveAll	thinkphp/library/think/Model.php	/^    public function saveAll($dataSet)$/;"	f
saveAll	thinkphp/library/think/model/Relation.php	/^    public function saveAll(array $dataSet, array $pivot = [])$/;"	f
savename	thinkphp/library/think/UploadFile.php	/^        $savename = $savename ?: $this->info['name'];$/;"	v
scene	thinkphp/library/think/Validate.php	/^                $scene = explode(',', $scene);$/;"	v
scene	thinkphp/library/think/Validate.php	/^            $scene = $this->currentScene;$/;"	v
scene	thinkphp/library/think/Validate.php	/^            $scene = $this->scene[$scene];$/;"	v
scene	thinkphp/library/think/Validate.php	/^            $scene = [];$/;"	v
scene	thinkphp/library/think/Validate.php	/^            $this->scene = array_merge($this->scene, $name);$/;"	v
scene	thinkphp/library/think/Validate.php	/^        $scene = $this->getScene($scene);$/;"	v
scene	thinkphp/library/think/Validate.php	/^    protected $scene = [];$/;"	v
scene	thinkphp/library/think/Validate.php	/^    public function scene($name, $fields = null)$/;"	f
schema	thinkphp/library/think/cache/driver/Secache.php	/^        $schema = [];$/;"	v
schemaStatus	thinkphp/library/think/cache/driver/Secache.php	/^        $schemaStatus = $this->schemaStatus();$/;"	v
schemaStatus	thinkphp/library/think/cache/driver/Secache.php	/^    public function schemaStatus()$/;"	f
schema_id	thinkphp/library/think/cache/driver/Secache.php	/^            $schema_id = $this->_get_size_schema_id($info['size']);$/;"	v
schema_id	thinkphp/library/think/cache/driver/Secache.php	/^            $schema_id = $this->_get_size_schema_id($size);$/;"	v
schema_id	thinkphp/library/think/cache/driver/Secache.php	/^        $schema_id = $this->_get_size_schema_id($size);$/;"	v
schema_item_size	thinkphp/library/think/cache/driver/Secache.php	/^    public $schema_item_size = 24;$/;"	v
schema_struct	thinkphp/library/think/cache/driver/Secache.php	/^    public $schema_struct = array('size', 'free', 'lru_head', 'lru_tail', 'hits', 'miss');$/;"	v
scope	thinkphp/library/think/Model.php	/^    public static function scope($name, $params = [])$/;"	f
script	thinkphp/library/think/process/Builder.php	/^        $script    = implode(' ', array_map([__NAMESPACE__ . '\\\\Utils', 'escapeArgument'], $arguments));$/;"	v
search	thinkphp/library/think/cache/driver/Secache.php	/^    public function search($key, &$pos)$/;"	f
select	thinkphp/library/think/db/Builder.php	/^    public function select($options = [])$/;"	f
select	thinkphp/library/think/db/Query.php	/^    public function select($data = [])$/;"	f
selectInsert	thinkphp/library/think/db/Builder.php	/^    public function selectInsert($fields, $table, $options)$/;"	f
selectInsert	thinkphp/library/think/db/Query.php	/^    public function selectInsert($fields, $table)$/;"	f
selectSql	thinkphp/library/think/db/Builder.php	/^    protected $selectSql    = 'SELECT%DISTINCT% %FIELD% FROM %TABLE%%FORCE%%JOIN%%WHERE%%GROUP%%HAVING%%ORDER%%LIMIT% %UNION%%LOCK%%COMMENT%';$/;"	v
selectSql	thinkphp/library/think/db/builder/Oracle.php	/^    protected $selectSql = 'SELECT * FROM (SELECT thinkphp.*, rownum AS numrow FROM (SELECT  %DISTINCT% %FIELD% FROM %TABLE%%JOIN%%WHERE%%GROUP%%HAVING%%ORDER%) thinkphp ) %LIMIT%%COMMENT%';$/;"	v
selectSql	thinkphp/library/think/db/builder/Sqlsrv.php	/^    protected $selectSql = 'SELECT T1.* FROM (SELECT thinkphp.*, ROW_NUMBER() OVER (%ORDER%) AS ROW_NUMBER FROM (SELECT %DISTINCT% %FIELD% FROM %TABLE%%JOIN%%WHERE%%GROUP%%HAVING%) AS thinkphp) AS T1 %LIMIT%%COMMENT%';$/;"	v
selectedChoices	thinkphp/library/think/console/helper/question/Choice.php	/^                $selectedChoices = [$selected];$/;"	v
selectedChoices	thinkphp/library/think/console/helper/question/Choice.php	/^                $selectedChoices = explode(',', $selectedChoices);$/;"	v
selectedChoices	thinkphp/library/think/console/helper/question/Choice.php	/^            $selectedChoices = str_replace(' ', '', $selected);$/;"	v
send	thinkphp/library/think/Log.php	/^    public static function send($msg)$/;"	f
send	thinkphp/library/think/Response.php	/^    public static function send($data = '', $type = '', $return = false)$/;"	f
send	thinkphp/library/think/log/alarm/Email.php	/^    public function send($msg = '')$/;"	f
send	thinkphp/library/think/log/driver/Socket.php	/^    protected function send($host, $message = '', $address = '\/')$/;"	f
sendToClient	thinkphp/library/think/log/driver/Socket.php	/^    protected function sendToClient($tabid, $client_id, $logs, $force_client_id)$/;"	f
server	thinkphp/library/think/Input.php	/^    public static function server($name = '', $default = null, $filter = null, $merge = false)$/;"	f
server	thinkphp/library/think/controller/Hprose.php	/^        $server = new \\HproseHttpServer();$/;"	v
server	thinkphp/library/think/controller/Rpc.php	/^        $server = new \\PHPRPC_Server();$/;"	v
server	thinkphp/library/think/controller/Yar.php	/^        $server = new \\Yar_Server($this);$/;"	v
server	thinkphp/library/think/log/driver/File.php	/^        $server = isset($_SERVER['SERVER_ADDR']) ? $_SERVER['SERVER_ADDR'] : '0.0.0.0';$/;"	v
servers	thinkphp/library/think/cache/driver/Memcached.php	/^        $servers = [];$/;"	v
servers	thinkphp/library/think/session/driver/Memcached.php	/^        $servers = [];$/;"	v
session	thinkphp/helper.php	/^function session($name, $value = '', $prefix = null)$/;"	f
session	thinkphp/library/think/Input.php	/^    public static function session($name = '', $default = null, $filter = null, $merge = false)$/;"	f
set	thinkphp/library/think/Config.php	/^    public static function set($name, $value = null, $range = '')$/;"	f
set	thinkphp/library/think/Cookie.php	/^    public static function set($name, $value = '', $option = null)$/;"	f
set	thinkphp/library/think/Lang.php	/^    public static function set($name, $value = null, $range = '')$/;"	f
set	thinkphp/library/think/Session.php	/^    public static function set($name, $value = '', $prefix = null)$/;"	f
set	thinkphp/library/think/cache/driver/Apc.php	/^    public function set($name, $value, $expire = null)$/;"	f
set	thinkphp/library/think/cache/driver/Db.php	/^    public function set($name, $value, $expire = null)$/;"	f
set	thinkphp/library/think/cache/driver/File.php	/^    public function set($name, $value, $expire = null)$/;"	f
set	thinkphp/library/think/cache/driver/Lite.php	/^    public function set($name, $value, $expire = null)$/;"	f
set	thinkphp/library/think/cache/driver/Memcache.php	/^    public function set($name, $value, $expire = null)$/;"	f
set	thinkphp/library/think/cache/driver/Memcached.php	/^    public function set($name, $value, $expire = null)$/;"	f
set	thinkphp/library/think/cache/driver/Redis.php	/^    public function set($name, $value, $expire = null)$/;"	f
set	thinkphp/library/think/cache/driver/Sae.php	/^    public function set($name, $value, $expire = null)$/;"	f
set	thinkphp/library/think/cache/driver/Secache.php	/^    public function set($name, $value)$/;"	f
set	thinkphp/library/think/cache/driver/Sqlite.php	/^    public function set($name, $value, $expire = null)$/;"	f
set	thinkphp/library/think/cache/driver/Test.php	/^    public function set($name, $value, $expire = null)$/;"	f
set	thinkphp/library/think/cache/driver/Wincache.php	/^    public function set($name, $value, $expire = null)$/;"	f
set	thinkphp/library/think/cache/driver/Xcache.php	/^    public function set($name, $value, $expire = null)$/;"	f
set	thinkphp/library/think/console/helper/Set.php	/^    public function set(Helper $helper, $alias = null)$/;"	f
setAliases	thinkphp/library/think/console/command/Command.php	/^    public function setAliases($aliases)$/;"	f
setAllowLangList	thinkphp/library/think/Lang.php	/^    public static function setAllowLangList($list)$/;"	f
setArgument	thinkphp/library/think/console/Input.php	/^    public function setArgument($name, $value)$/;"	f
setArguments	thinkphp/library/think/console/input/Definition.php	/^    public function setArguments($arguments = [])$/;"	f
setArguments	thinkphp/library/think/process/Builder.php	/^    public function setArguments(array $arguments)$/;"	f
setAutoExit	thinkphp/library/think/Console.php	/^    public function setAutoExit($boolean)$/;"	f
setAutocompleterValues	thinkphp/library/think/console/helper/question/Question.php	/^    public function setAutocompleterValues($values)$/;"	f
setBackground	thinkphp/library/think/console/output/formatter/Style.php	/^    public function setBackground($color = null)$/;"	f
setCatchExceptions	thinkphp/library/think/Console.php	/^    public function setCatchExceptions($boolean)$/;"	f
setCode	thinkphp/library/think/console/command/Command.php	/^    public function setCode(callable $code)$/;"	f
setCodes	thinkphp/library/think/console/output/formatter/Style.php	/^        $setCodes   = [];$/;"	v
setCommand	thinkphp/library/think/console/command/Help.php	/^    public function setCommand(Command $command)$/;"	f
setCommand	thinkphp/library/think/console/helper/Set.php	/^    public function setCommand(Command $command = null)$/;"	f
setCommandLine	thinkphp/library/think/Process.php	/^    public function setCommandLine($commandline)$/;"	f
setConfig	thinkphp/library/think/db/Connection.php	/^    public function setConfig($config, $value)$/;"	f
setConsole	thinkphp/library/think/console/command/Command.php	/^    public function setConsole(Console $console = null)$/;"	f
setDec	thinkphp/library/think/db/Query.php	/^    public function setDec($field, $step = 1, $lazyTime = 0)$/;"	f
setDecorated	thinkphp/library/think/console/Output.php	/^    public function setDecorated($decorated)$/;"	f
setDecorated	thinkphp/library/think/console/output/Formatter.php	/^    public function setDecorated($decorated)$/;"	f
setDecorated	thinkphp/library/think/console/output/Nothing.php	/^    public function setDecorated($decorated)$/;"	f
setDecorated	thinkphp/library/think/console/output/Stream.php	/^    public function setDecorated($decorated)$/;"	f
setDefault	thinkphp/library/think/console/input/Argument.php	/^    public function setDefault($default = null)$/;"	f
setDefault	thinkphp/library/think/console/input/Option.php	/^    public function setDefault($default = null)$/;"	f
setDefaultCommand	thinkphp/library/think/Console.php	/^    public function setDefaultCommand($commandName)$/;"	f
setDefinition	thinkphp/library/think/Console.php	/^    public function setDefinition(InputDefinition $definition)$/;"	f
setDefinition	thinkphp/library/think/console/command/Command.php	/^    public function setDefinition($definition)$/;"	f
setDefinition	thinkphp/library/think/console/input/Definition.php	/^    public function setDefinition(array $definition)$/;"	f
setDescription	thinkphp/library/think/console/command/Command.php	/^    public function setDescription($description)$/;"	f
setDriver	thinkphp/library/think/UploadFile.php	/^    private function setDriver($driver = null, $config = null)$/;"	f
setEmptyStyle	thinkphp/library/think/console/output/formatter/Stack.php	/^    public function setEmptyStyle(Style $emptyStyle)$/;"	f
setEnhanceSigchildCompatibility	thinkphp/library/think/Process.php	/^    public function setEnhanceSigchildCompatibility($enhance)$/;"	f
setEnhanceWindowsCompatibility	thinkphp/library/think/Process.php	/^    public function setEnhanceWindowsCompatibility($enhance)$/;"	f
setEnv	thinkphp/library/think/Process.php	/^    public function setEnv(array $env)$/;"	f
setEnv	thinkphp/library/think/process/Builder.php	/^    public function setEnv($name, $value)$/;"	f
setErrorMessage	thinkphp/library/think/console/helper/question/Choice.php	/^    public function setErrorMessage($errorMessage)$/;"	f
setErrorOutput	thinkphp/library/think/console/Output.php	/^    public function setErrorOutput(Output $error)$/;"	f
setField	thinkphp/library/think/db/Query.php	/^    public function setField($field, $value = '')$/;"	f
setFilter	thinkphp/library/think/Input.php	/^    public static function setFilter($name)$/;"	f
setForeground	thinkphp/library/think/console/output/formatter/Style.php	/^    public function setForeground($color = null)$/;"	f
setFormatter	thinkphp/library/think/console/Output.php	/^    public function setFormatter(Formatter $formatter)$/;"	f
setFormatter	thinkphp/library/think/console/output/Nothing.php	/^    public function setFormatter(Formatter $formatter)$/;"	f
setFormatter	thinkphp/library/think/console/output/Stream.php	/^    public function setFormatter(Formatter $formatter)$/;"	f
setHelp	thinkphp/library/think/console/command/Command.php	/^    public function setHelp($help)$/;"	f
setHelperSet	thinkphp/library/think/Console.php	/^    public function setHelperSet(HelperSet $helperSet)$/;"	f
setHelperSet	thinkphp/library/think/console/command/Command.php	/^    public function setHelperSet(HelperSet $helperSet)$/;"	f
setHelperSet	thinkphp/library/think/console/helper/Helper.php	/^    public function setHelperSet(HelperSet $helperSet = null)$/;"	f
setHidden	thinkphp/library/think/console/helper/question/Question.php	/^    public function setHidden($hidden)$/;"	f
setHiddenFallback	thinkphp/library/think/console/helper/question/Question.php	/^    public function setHiddenFallback($fallback)$/;"	f
setIdleTimeout	thinkphp/library/think/Process.php	/^    public function setIdleTimeout($timeout)$/;"	f
setInc	thinkphp/library/think/db/Query.php	/^    public function setInc($field, $step = 1, $lazyTime = 0)$/;"	f
setInput	thinkphp/library/think/Process.php	/^    public function setInput($input)$/;"	f
setInput	thinkphp/library/think/process/Builder.php	/^    public function setInput($input)$/;"	f
setInputStream	thinkphp/library/think/console/helper/Question.php	/^    public function setInputStream($stream)$/;"	f
setInteractive	thinkphp/library/think/console/Input.php	/^    public function setInteractive($interactive)$/;"	f
setLangCookieVar	thinkphp/library/think/Lang.php	/^    public static function setLangCookieVar($var)$/;"	f
setLangDetectVar	thinkphp/library/think/Lang.php	/^    public static function setLangDetectVar($var)$/;"	f
setMaxAttempts	thinkphp/library/think/console/helper/question/Question.php	/^    public function setMaxAttempts($attempts)$/;"	f
setMethodPrefix	thinkphp/library/think/Route.php	/^    public static function setMethodPrefix($method, $prefix = '')$/;"	f
setMultiselect	thinkphp/library/think/console/helper/question/Choice.php	/^    public function setMultiselect($multiselect)$/;"	f
setName	thinkphp/library/think/Console.php	/^    public function setName($name)$/;"	f
setName	thinkphp/library/think/console/command/Command.php	/^    public function setName($name)$/;"	f
setNormalizer	thinkphp/library/think/console/helper/question/Question.php	/^    public function setNormalizer($normalizer)$/;"	f
setOption	thinkphp/library/think/console/Input.php	/^    public function setOption($name, $value)$/;"	f
setOption	thinkphp/library/think/console/output/formatter/Style.php	/^    public function setOption($option)$/;"	f
setOption	thinkphp/library/think/process/Builder.php	/^    public function setOption($name, $value)$/;"	f
setOptions	thinkphp/library/think/Process.php	/^    public function setOptions(array $options)$/;"	f
setOptions	thinkphp/library/think/console/input/Definition.php	/^    public function setOptions($options = [])$/;"	f
setOptions	thinkphp/library/think/console/output/formatter/Style.php	/^    public function setOptions(array $options)$/;"	f
setPrefix	thinkphp/library/think/process/Builder.php	/^    public function setPrefix($prefix)$/;"	f
setPrompt	thinkphp/library/think/console/helper/question/Choice.php	/^    public function setPrompt($prompt)$/;"	f
setPty	thinkphp/library/think/Process.php	/^    public function setPty($bool)$/;"	f
setQuery	thinkphp/library/think/db/Builder.php	/^    public function setQuery($query)$/;"	f
setStyle	thinkphp/library/think/console/output/Formatter.php	/^    public function setStyle($name, Style $style)$/;"	f
setTerminalDimensions	thinkphp/library/think/Console.php	/^    public function setTerminalDimensions($width, $height)$/;"	f
setTimeout	thinkphp/library/think/Process.php	/^    public function setTimeout($timeout)$/;"	f
setTimeout	thinkphp/library/think/process/Builder.php	/^    public function setTimeout($timeout)$/;"	f
setTokens	thinkphp/library/think/console/Input.php	/^    protected function setTokens(array $tokens)$/;"	f
setTty	thinkphp/library/think/Process.php	/^    public function setTty($tty)$/;"	f
setTypeMsg	thinkphp/library/think/Validate.php	/^    public static function setTypeMsg($type, $msg = null)$/;"	f
setValidator	thinkphp/library/think/console/helper/question/Question.php	/^    public function setValidator($validator)$/;"	f
setVerbosity	thinkphp/library/think/console/Output.php	/^    public function setVerbosity($level)$/;"	f
setVerbosity	thinkphp/library/think/console/output/Nothing.php	/^    public function setVerbosity($level)$/;"	f
setVerbosity	thinkphp/library/think/console/output/Stream.php	/^    public function setVerbosity($level)$/;"	f
setVersion	thinkphp/library/think/Console.php	/^    public function setVersion($version)$/;"	f
setWorkingDirectory	thinkphp/library/think/Process.php	/^    public function setWorkingDirectory($cwd)$/;"	f
setWorkingDirectory	thinkphp/library/think/process/Builder.php	/^    public function setWorkingDirectory($cwd)$/;"	f
setting	thinkphp/library/think/Route.php	/^    private static function setting($var, $name = '', $value = '')$/;"	f
severity	thinkphp/library/think/exception/ErrorException.php	/^        $this->severity = $severity;$/;"	v
severity	thinkphp/library/think/exception/ErrorException.php	/^    protected $severity;$/;"	v
shell	thinkphp/library/think/console/helper/Question.php	/^    private static $shell;$/;"	v
shortcut	thinkphp/library/think/console/input/Definition.php	/^                $shortcut   = $option->getShortcut() ? sprintf('-%s|', $option->getShortcut()) : '';$/;"	v
shortcut	thinkphp/library/think/console/input/Option.php	/^                $shortcut = implode('|', $shortcut);$/;"	v
shortcut	thinkphp/library/think/console/input/Option.php	/^            $shortcut  = implode('|', $shortcuts);$/;"	v
shortcut	thinkphp/library/think/console/input/Option.php	/^            $shortcut = null;$/;"	v
shortcut	thinkphp/library/think/console/input/Option.php	/^        $this->shortcut    = $shortcut;$/;"	v
shortcut	thinkphp/library/think/console/input/Option.php	/^    private $shortcut;$/;"	v
shortcutToName	thinkphp/library/think/console/input/Definition.php	/^    private function shortcutToName($shortcut)$/;"	f
shortcuts	thinkphp/library/think/console/input/Definition.php	/^        $this->shortcuts = [];$/;"	v
shortcuts	thinkphp/library/think/console/input/Definition.php	/^    private $shortcuts;$/;"	v
shortcuts	thinkphp/library/think/console/input/Option.php	/^            $shortcuts = array_filter($shortcuts);$/;"	v
shortcuts	thinkphp/library/think/console/input/Option.php	/^            $shortcuts = preg_split('{(\\|)-?}', ltrim($shortcut, '-'));$/;"	v
sigchild	thinkphp/library/think/Process.php	/^    private static $sigchild;$/;"	v
signal	thinkphp/library/think/Process.php	/^    public function signal($signal)$/;"	f
single	thinkphp/library/think/Template.php	/^            $single = strlen(ltrim($begin, '\\\\')) == 1 && strlen(ltrim($end, '\\\\')) == 1 ? true : false;$/;"	v
single	thinkphp/library/think/template/TagLib.php	/^        $single  = strlen(ltrim($begin, '\\\\')) == 1 && strlen(ltrim($end, '\\\\')) == 1 ? true : false;$/;"	v
size	thinkphp/library/think/Debug.php	/^        $size = memory_get_usage() - START_MEM;$/;"	v
size	thinkphp/library/think/Debug.php	/^        $size = self::$mem['mem'][$end] - self::$mem['mem'][$start];$/;"	v
size	thinkphp/library/think/Debug.php	/^        $size = self::$mem['peak'][$end] - self::$mem['peak'][$start];$/;"	v
size	thinkphp/library/think/cache/driver/Secache.php	/^                    $size = $match[1] << 10;$/;"	v
size	thinkphp/library/think/cache/driver/Secache.php	/^                    $size = $match[1] << 20;$/;"	v
size	thinkphp/library/think/cache/driver/Secache.php	/^                    $size = $match[1] << 30;$/;"	v
size	thinkphp/library/think/cache/driver/Secache.php	/^                    $size = $match[1];$/;"	v
size	thinkphp/library/think/cache/driver/Secache.php	/^            $size      = $this->_get_schema($schema_id, 'size');$/;"	v
size	thinkphp/library/think/cache/driver/Secache.php	/^            $size = strlen($data);$/;"	v
sort	thinkphp/library/think/db/Builder.php	/^                    $sort    = in_array(strtolower(trim($val)), ['asc', 'desc']) ? ' ' . $val : '';$/;"	v
sortCommands	thinkphp/library/think/console/helper/descriptor/Console.php	/^    private function sortCommands(array $commands)$/;"	f
source	thinkphp/library/think/Error.php	/^            $source   = [$/;"	v
source	thinkphp/library/think/Error.php	/^            $source = [];$/;"	v
spacingWidth	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^                    $spacingWidth = $width - strlen($name);$/;"	v
spacingWidth	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^        $spacingWidth = $totalWidth - strlen($argument->getName()) + 2;$/;"	v
spacingWidth	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^        $spacingWidth = $totalWidth - strlen($synopsis) + 2;$/;"	v
splitStringByWidth	thinkphp/library/think/Console.php	/^    private function splitStringByWidth($string, $width)$/;"	f
sql	thinkphp/library/think/cache/driver/Sqlite.php	/^        $sql    = 'SELECT value FROM ' . $this->options['table'] . ' WHERE var=\\'' . $name . '\\' AND (expire=0 OR expire >' . time() . ') LIMIT 1';$/;"	v
sql	thinkphp/library/think/cache/driver/Sqlite.php	/^        $sql  = 'DELETE FROM ' . $this->options['table'] . ' WHERE var=\\'' . $name . '\\'';$/;"	v
sql	thinkphp/library/think/cache/driver/Sqlite.php	/^        $sql = 'DELETE FROM ' . $this->options['table'];$/;"	v
sql	thinkphp/library/think/cache/driver/Sqlite.php	/^        $sql = 'REPLACE INTO ' . $this->options['table'] . ' (var, value,expire) VALUES (\\'' . $name . '\\', \\'' . $value . '\\', \\'' . $expire . '\\')';$/;"	v
sql	thinkphp/library/think/db/Builder.php	/^        $sql    = 'INSERT INTO ' . $this->parseTable($table) . ' (' . implode(',', $fields) . ') ';$/;"	v
sql	thinkphp/library/think/db/Builder.php	/^        $sql    = str_replace($/;"	v
sql	thinkphp/library/think/db/Builder.php	/^        $sql = str_replace($/;"	v
sql	thinkphp/library/think/db/Connection.php	/^                $sql = is_numeric($key) ?$/;"	v
sql	thinkphp/library/think/db/Connection.php	/^            $sql    = preg_replace_callback("\/__([A-Z0-9_-]+)__\/sU", function ($match) use ($prefix) {$/;"	v
sql	thinkphp/library/think/db/Query.php	/^            $sql = $this->builder()->select($options);$/;"	v
sql	thinkphp/library/think/db/Query.php	/^        $sql = $this->builder()->delete($options);$/;"	v
sql	thinkphp/library/think/db/Query.php	/^        $sql = $this->builder()->insert($data, $options, $replace);$/;"	v
sql	thinkphp/library/think/db/Query.php	/^        $sql = $this->builder()->insertAll($dataSet, $options);$/;"	v
sql	thinkphp/library/think/db/Query.php	/^        $sql = $this->builder()->selectInsert($fields, $table, $options);$/;"	v
sql	thinkphp/library/think/db/Query.php	/^        $sql = $this->builder()->update($data, $options);$/;"	v
sql	thinkphp/library/think/db/connector/Mysql.php	/^        $sql    = !empty($dbName) ? 'SHOW TABLES FROM ' . $dbName : 'SHOW TABLES ';$/;"	v
sql	thinkphp/library/think/db/connector/Mysql.php	/^        $sql    = 'SHOW COLUMNS FROM `' . $tableName . '`';$/;"	v
start	thinkphp/library/think/Process.php	/^    public function start($callback = null)$/;"	f
start	thinkphp/library/think/Session.php	/^    public static function start()$/;"	f
start	thinkphp/library/think/Template.php	/^                        $start                = $tag['offset'] + strlen($tag['tag']);$/;"	v
start	thinkphp/library/think/Validate.php	/^            $start = strtotime($start);$/;"	v
start	thinkphp/library/think/console/helper/Debug.php	/^    public function start($id, $message, $prefix = 'RUN')$/;"	f
start	thinkphp/library/think/template/taglib/Cx.php	/^                    $start = $value;$/;"	v
start	thinkphp/library/think/template/taglib/Cx.php	/^        $start      = 0;$/;"	v
startTrans	thinkphp/library/think/db/Connection.php	/^    public function startTrans($label = '')$/;"	f
started	thinkphp/library/think/console/helper/Debug.php	/^    private $started = [];$/;"	v
starttime	thinkphp/library/think/Process.php	/^        $this->starttime                    = null;$/;"	v
starttime	thinkphp/library/think/Process.php	/^        $this->starttime = $this->lastOutputTime = microtime(true);$/;"	v
starttime	thinkphp/library/think/Process.php	/^    private $starttime;$/;"	v
status	thinkphp/library/think/Process.php	/^        $this->status                       = self::STATUS_READY;$/;"	v
status	thinkphp/library/think/Process.php	/^        $this->status   = self::STATUS_TERMINATED;$/;"	v
status	thinkphp/library/think/Process.php	/^        $this->status = self::STATUS_STARTED;$/;"	v
status	thinkphp/library/think/Process.php	/^    private $status                       = self::STATUS_READY;$/;"	v
status	thinkphp/library/think/cache/driver/Secache.php	/^    public function status(&$curBytes, &$totalBytes)$/;"	f
statusCode	thinkphp/library/think/console/command/Command.php	/^            $statusCode = $this->execute($input, $output);$/;"	v
statusCode	thinkphp/library/think/console/command/Command.php	/^            $statusCode = call_user_func($this->code, $input, $output);$/;"	v
stderr	thinkphp/library/think/Process.php	/^        $this->stderr                       = '';$/;"	v
stderr	thinkphp/library/think/Process.php	/^        $this->stderr                       = null;$/;"	v
stderr	thinkphp/library/think/Process.php	/^    private $stderr;$/;"	v
stderr	thinkphp/library/think/console/Output.php	/^        $this->stderr = $error;$/;"	v
stderr	thinkphp/library/think/console/Output.php	/^        $this->stderr = new Stream(fopen('php:\/\/stderr', 'w'), $this->getFormatter());$/;"	v
stderr	thinkphp/library/think/console/Output.php	/^    private $stderr;$/;"	v
stdout	thinkphp/library/think/Process.php	/^        $this->stdout                       = null;$/;"	v
stdout	thinkphp/library/think/Process.php	/^        $this->stdout                  = '';$/;"	v
stdout	thinkphp/library/think/Process.php	/^    private $stdout;$/;"	v
step	thinkphp/library/think/db/Query.php	/^            $step = $this->lazyWrite($guid, $step, $lazyTime);$/;"	v
step	thinkphp/library/think/db/Query.php	/^            $step = $this->lazyWrite($guid, -$step, $lazyTime);$/;"	v
step	thinkphp/library/think/template/taglib/Cx.php	/^                    $step = $value;$/;"	v
step	thinkphp/library/think/template/taglib/Cx.php	/^        $step       = 1;$/;"	v
stop	thinkphp/library/think/Process.php	/^    public function stop()$/;"	f
stop	thinkphp/library/think/console/helper/Debug.php	/^    public function stop($id, $message, $successful, $prefix = 'RES')$/;"	f
storage	thinkphp/library/think/Template.php	/^        $this->storage = new $class();$/;"	v
storage	thinkphp/library/think/Template.php	/^    protected $storage   = null;$/;"	v
store	thinkphp/library/think/cache/driver/Secache.php	/^    public function store($key, $value)$/;"	f
str	application/index/controller/News.php	/^        $str = "This is read action";$/;"	v
str	thinkphp/library/think/Template.php	/^                                            $str = '<?php echo !empty(' . $name . ')?' . $str . '; ?>';$/;"	v
str	thinkphp/library/think/Template.php	/^                                            $str = '<?php echo ' . $name . '?' . $str . '; ?>';$/;"	v
str	thinkphp/library/think/Template.php	/^                                        $str = '<?php echo !empty(' . $name . ')?' . $name . $str . '; ?>';$/;"	v
str	thinkphp/library/think/Template.php	/^                                        $str = '<?php echo ' . $name . ' ? ' . $name . ' : ' . substr($str, 1) . '; ?>';$/;"	v
str	thinkphp/library/think/Template.php	/^                                        $str = '<?php echo ' . $name . '?' . $str . '; ?>';$/;"	v
str	thinkphp/library/think/Template.php	/^                                        $str = '<?php echo isset(' . $name . ') ? ' . $name . ' : ' . substr($str, 1) . '; ?>';$/;"	v
str	thinkphp/library/think/Template.php	/^                                        $str = '<?php if(!empty(' . $name . ')) echo ' . substr($str, 1) . '; ?>';$/;"	v
str	thinkphp/library/think/Template.php	/^                                        $str = '<?php if(' . $name . ') echo ' . substr($str, 1) . '; ?>';$/;"	v
str	thinkphp/library/think/Template.php	/^                                    $str = '<?php echo (' . $name . ')?' . $str . '; ?>';$/;"	v
str	thinkphp/library/think/Template.php	/^                                    $str = '<?php if(' . $name . ') echo ' . substr($str, 1) . '; ?>';$/;"	v
str	thinkphp/library/think/Template.php	/^                            $str = '';$/;"	v
str	thinkphp/library/think/Template.php	/^                            $str = '<?php echo ' . $str . '; ?>';$/;"	v
str	thinkphp/library/think/Template.php	/^                            $str = trim(substr($str, $pos + 1));$/;"	v
str	thinkphp/library/think/Template.php	/^                        $str = $this->config['tpl_begin'] . $str . $this->config['tpl_end'];$/;"	v
str	thinkphp/library/think/Template.php	/^                        $str = '<?php ' . $str . '; ?>';$/;"	v
str	thinkphp/library/think/Template.php	/^                        $str = '<?php echo ' . $str . '; ?>';$/;"	v
str	thinkphp/library/think/Template.php	/^                        $str = substr($str, 1);$/;"	v
str	thinkphp/library/think/Template.php	/^                $str  = stripslashes($match[1]);$/;"	v
str	thinkphp/library/think/db/Builder.php	/^            $str = [];$/;"	v
str	thinkphp/library/think/template/taglib/Cx.php	/^            $str   = 'explode(\\',\\',' . $value . ')';$/;"	v
str	thinkphp/library/think/template/taglib/Cx.php	/^            $str   = 'is_array(' . $value . ')?' . $value . ':explode(\\',\\',' . $value . ')';$/;"	v
stream	thinkphp/library/think/console/output/Stream.php	/^        $this->stream = $stream;$/;"	v
stream	thinkphp/library/think/console/output/Stream.php	/^    private $stream;$/;"	v
strict	thinkphp/library/think/db/Query.php	/^    public function strict($strict = true)$/;"	f
string	thinkphp/library/think/console/helper/Helper.php	/^        $string = $formatter->format($string);$/;"	v
string	thinkphp/library/think/console/helper/Helper.php	/^        $string = preg_replace("\/\\033\\[[^m]*m\/", '', $string);$/;"	v
stringWidth	thinkphp/library/think/Console.php	/^    private function stringWidth($string)$/;"	f
stripPreg	thinkphp/library/think/Template.php	/^    private function stripPreg($str)$/;"	f
strlen	thinkphp/library/think/console/helper/Helper.php	/^    public static function strlen($string)$/;"	f
strlenWithoutDecoration	thinkphp/library/think/console/helper/Helper.php	/^    public static function strlenWithoutDecoration(Formatter $formatter, $string)$/;"	f
stty	thinkphp/library/think/console/helper/Question.php	/^    private static $stty;$/;"	v
sttyMode	thinkphp/library/think/console/helper/Question.php	/^            $sttyMode = shell_exec('stty -g');$/;"	v
sttyMode	thinkphp/library/think/console/helper/Question.php	/^        $sttyMode = shell_exec('stty -g');$/;"	v
style	thinkphp/library/think/console/output/Formatter.php	/^        $style = new Style();$/;"	v
styleStack	thinkphp/library/think/console/output/Formatter.php	/^        $this->styleStack = new StyleStack();$/;"	v
styleStack	thinkphp/library/think/console/output/Formatter.php	/^    private $styleStack;$/;"	v
styles	thinkphp/library/think/console/output/Formatter.php	/^    private $styles    = [];$/;"	v
styles	thinkphp/library/think/console/output/formatter/Stack.php	/^                $this->styles = array_slice($this->styles, 0, $index);$/;"	v
styles	thinkphp/library/think/console/output/formatter/Stack.php	/^        $this->styles = [];$/;"	v
styles	thinkphp/library/think/console/output/formatter/Stack.php	/^    private $styles;$/;"	v
subDomain	thinkphp/library/think/Route.php	/^                    $subDomain       = implode('.', $domain);$/;"	v
subDomain	thinkphp/library/think/Route.php	/^    private static $subDomain = '';$/;"	v
subRelation	thinkphp/library/think/model/Relation.php	/^            $subRelation = '';$/;"	v
success	thinkphp/library/think/Response.php	/^    public static function success($msg = '', $data = '', $url = null, $wait = 3)$/;"	f
success	thinkphp/library/traits/controller/Jump.php	/^    public function success($msg = '', $url = null, $data = '', $wait = 3)$/;"	f
suffix	thinkphp/library/think/Url.php	/^                $suffix = substr($suffix, 0, $pos);$/;"	v
suffix	thinkphp/library/think/Url.php	/^            $suffix = true === $suffix ? Config::get('url_html_suffix') : $suffix;$/;"	v
suffix	thinkphp/library/think/Url.php	/^        $suffix = in_array($url, ['\/', '']) ? '' : self::parseSuffix($suffix);$/;"	v
suffix	thinkphp/library/think/template/taglib/Cx.php	/^        $suffix = isset($tag['suffix']) ? $tag['suffix'] : 'true';$/;"	v
suggestions	thinkphp/library/think/Console.php	/^            $suggestions = $this->getAbbreviationSuggestions(array_values($commands));$/;"	v
sum	thinkphp/library/think/db/Query.php	/^    public function sum($field = '*')$/;"	f
synopsis	thinkphp/library/think/console/command/Command.php	/^    private $synopsis                        = [];$/;"	v
synopsis	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^        $synopsis   = sprintf('%s%s', $option->getShortcut() ? sprintf('-%s, ', $option->getShortcut()) : '    ', sprintf('--%s%s', $option->getName(), $value));$/;"	v
tLib	thinkphp/library/think/Template.php	/^        $tLib = new $className($this);$/;"	v
tabid	thinkphp/library/think/log/driver/Socket.php	/^        $tabid = $this->getClientArg('tabid');$/;"	v
table	thinkphp/library/think/Model.php	/^        $table      = $table ?: Db::name(Loader::parseName($this->name) . '_' . $name)->getTable();$/;"	v
table	thinkphp/library/think/Model.php	/^        $table = $info['model']::getTable();$/;"	v
table	thinkphp/library/think/Model.php	/^    protected static $table;$/;"	v
table	thinkphp/library/think/db/Builder.php	/^        $table = $this->parseTable($options['table']);$/;"	v
table	thinkphp/library/think/db/Connection.php	/^    protected $table = '';$/;"	v
table	thinkphp/library/think/db/Query.php	/^                    $table = $join;$/;"	v
table	thinkphp/library/think/db/Query.php	/^                    $table = $key . ' ' . array_shift($join);$/;"	v
table	thinkphp/library/think/db/Query.php	/^                    $table = $prefix . $join;$/;"	v
table	thinkphp/library/think/db/Query.php	/^                    $table = $prefix . $table;$/;"	v
table	thinkphp/library/think/db/Query.php	/^                    $table = $this->connection->parseSqlTable($join);$/;"	v
table	thinkphp/library/think/db/Query.php	/^                    $table = (string) current($join) . $table;$/;"	v
table	thinkphp/library/think/db/Query.php	/^                    $table = array_shift($join);$/;"	v
table	thinkphp/library/think/db/Query.php	/^                $table = $info['model']::getTable();$/;"	v
table	thinkphp/library/think/db/Query.php	/^    public function table($table)$/;"	f
table	thinkphp/library/think/db/connector/Oracle.php	/^            $this->table = Config::get("db_sequence_prefix") . str_ireplace(Config::get("database.prefix"), "", $match[2]);$/;"	v
table	thinkphp/library/think/db/connector/Oracle.php	/^    private $table = '';$/;"	v
table	thinkphp/library/think/model/Merge.php	/^                        $table = is_int($key) ? self::db()->name($model)->getTable() : $model;$/;"	v
table	thinkphp/library/think/model/Merge.php	/^                    $table = is_int($key) ? self::db()->name($model)->getTable() : $model;$/;"	v
table	thinkphp/library/think/model/Merge.php	/^            $table = is_int($key) ? self::db()->name($name)->getTable() : $model;$/;"	v
tableName	thinkphp/library/think/db/Query.php	/^            $tableName = $this->connection->getConfig('prefix');$/;"	v
tableName	thinkphp/library/think/db/Query.php	/^            $tableName = $this->getTable();$/;"	v
tableName	thinkphp/library/think/db/Query.php	/^            $tableName = $this->options['table'];$/;"	v
tableName	thinkphp/library/think/db/Query.php	/^            $tableName = key($tableName) ?: current($tableName);$/;"	v
tableName	thinkphp/library/think/db/connector/Mysql.php	/^            $tableName = str_replace('.', '`.`', $tableName);$/;"	v
tableName	thinkphp/library/think/model/Relation.php	/^        $tableName  = $model->getTable();$/;"	v
table_name	application/admin/model/Article.php	/^    private static $table_name = 'Article';$/;"	v
tables	thinkphp/library/think/db/Builder.php	/^            $tables = $array;$/;"	v
tables	thinkphp/library/think/db/Builder.php	/^            $tables = $this->parseSqlTable($tables);$/;"	v
tables	thinkphp/library/think/db/Builder.php	/^            $tables = array_map([$this, 'parseKey'], explode(',', $tables));$/;"	v
tag	thinkphp/library/think/Template.php	/^                        $tag                  = array_pop($right);$/;"	v
tag	thinkphp/library/think/console/output/Formatter.php	/^                $tag = $matches[1][$i][0];$/;"	v
tag	thinkphp/library/think/console/output/Formatter.php	/^                $tag = isset($matches[3][$i][0]) ? $matches[3][$i][0] : '';$/;"	v
tag	thinkphp/library/think/template/TagLib.php	/^                            $tag           = $val;$/;"	v
tag	thinkphp/library/think/template/TagLib.php	/^                $tag = $this->tags[$name];$/;"	v
tagLib	thinkphp/library/think/Template.php	/^            $tagLib    = substr($tagLib, strrpos($tagLib, '\\\\') + 1);$/;"	v
tagLib	thinkphp/library/think/template/TagLib.php	/^    protected $tagLib = '';$/;"	v
tagLibs	thinkphp/library/think/Template.php	/^            $tagLibs = $this->getIncludeTagLib($content);$/;"	v
tagLibs	thinkphp/library/think/Template.php	/^            $tagLibs = explode(',', $this->config['taglib_pre_load']);$/;"	v
tagLibs	thinkphp/library/think/Template.php	/^        $tagLibs = explode(',', $this->config['taglib_build_in']);$/;"	v
tagList	thinkphp/library/think/template/TagLib.php	/^    protected $tagList = [];$/;"	v
tagName	thinkphp/library/think/template/TagLib.php	/^        $tagName = is_array($tags) ? implode('|', $tags) : $tags;$/;"	v
tagRegex	thinkphp/library/think/console/output/Formatter.php	/^        $tagRegex = '[a-z][a-z0-9_=;-]*';$/;"	v
tags	thinkphp/library/think/Hook.php	/^    private static $tags = [];$/;"	v
tags	thinkphp/library/think/template/TagLib.php	/^        $tags = [];$/;"	v
tags	thinkphp/library/think/template/TagLib.php	/^    protected $tags = []; \/\/ 标签定义$/;"	v
tags	thinkphp/library/think/template/taglib/Cx.php	/^    protected $tags = [$/;"	v
template	thinkphp/library/think/Template.php	/^                $template = $this->config['view_path'] . $template . $this->config['view_suffix'];$/;"	v
template	thinkphp/library/think/Template.php	/^                $template = APP_PATH . str_replace('@', '\/' . basename($this->config['view_path']) . '\/', $template) . $this->config['view_suffix'];$/;"	v
template	thinkphp/library/think/Template.php	/^                $template = str_replace(['\/', ':'], $this->config['view_depr'], $template);$/;"	v
template	thinkphp/library/think/Template.php	/^            $template = $this->parseTemplateFile($templateName);$/;"	v
template	thinkphp/library/think/Template.php	/^        $template = $this->parseTemplateFile($template);$/;"	v
template	thinkphp/library/think/view/driver/Php.php	/^                $template = str_replace('.', DS, CONTROLLER_NAME) . $depr . $template;$/;"	v
template	thinkphp/library/think/view/driver/Php.php	/^                $template = str_replace('.', DS, CONTROLLER_NAME) . $depr . ACTION_NAME;$/;"	v
template	thinkphp/library/think/view/driver/Php.php	/^            $template = $this->parseTemplate($template);$/;"	v
template	thinkphp/library/think/view/driver/Php.php	/^        $template = str_replace(['\/', ':'], $depr, $template);$/;"	v
template	thinkphp/library/think/view/driver/Think.php	/^                $template = str_replace('.', DS, CONTROLLER_NAME) . $depr . $template;$/;"	v
template	thinkphp/library/think/view/driver/Think.php	/^                $template = str_replace('.', DS, CONTROLLER_NAME) . $depr . ACTION_NAME;$/;"	v
template	thinkphp/library/think/view/driver/Think.php	/^            $template = $this->parseTemplate($template);$/;"	v
template	thinkphp/library/think/view/driver/Think.php	/^        $template = str_replace(['\/', ':'], $depr, $template);$/;"	v
template	thinkphp/library/think/view/driver/Think.php	/^        $this->template = new Template($this->config);$/;"	v
template	thinkphp/library/think/view/driver/Think.php	/^    private $template = null;$/;"	v
templateName	thinkphp/library/think/Template.php	/^                $templateName = $this->get(substr($templateName, 1));$/;"	v
template_deny_funs	thinkphp/library/think/Template.php	/^            $template_deny_funs = explode(',', $this->config['tpl_deny_func_list']);$/;"	v
terminalDimensions	thinkphp/library/think/Console.php	/^        $this->terminalDimensions = [$width, $height];$/;"	v
terminalDimensions	thinkphp/library/think/Console.php	/^    private $terminalDimensions;$/;"	v
test	application/admin/controller/Index.php	/^    public function test()$/;"	f
test	application/index/controller/Api.php	/^    public function test() {$/;"	f
test	application/index/controller/Index.php	/^    public function test()$/;"	f
test	application/index/controller/Web.php	/^    public function test()$/;"	f
test	thinkphp/library/think/console/helper/Question.php	/^            $test = "\/usr\/bin\/env %s -c 'echo OK' 2> \/dev\/null";$/;"	v
text	thinkphp/library/think/console/output/Formatter.php	/^            $text = $match[0];$/;"	v
threshold	thinkphp/library/think/Console.php	/^        $threshold    = 1e3;$/;"	v
timeFormats	thinkphp/library/think/console/helper/Helper.php	/^        static $timeFormats = [$/;"	v
time_str	thinkphp/library/think/log/driver/File.php	/^        $time_str   = " [运行时间：{$runtime}s] [吞吐率：{$reqs}req\/s]";$/;"	v
time_str	thinkphp/library/think/log/driver/Sae.php	/^        $time_str   = " [运行时间：{$runtime}s] [吞吐率：{$reqs}req\/s]";$/;"	v
time_str	thinkphp/library/think/log/driver/Socket.php	/^        $time_str   = " [运行时间：{$runtime}s][吞吐率：{$reqs}req\/s]";$/;"	v
timeout	thinkphp/library/think/Process.php	/^            $timeout = null;$/;"	v
timeout	thinkphp/library/think/Process.php	/^        $this->timeout = $this->validateTimeout($timeout);$/;"	v
timeout	thinkphp/library/think/Process.php	/^        $timeout = (float)$timeout;$/;"	v
timeout	thinkphp/library/think/Process.php	/^    private $timeout;$/;"	v
timeout	thinkphp/library/think/process/Builder.php	/^            $this->timeout = null;$/;"	v
timeout	thinkphp/library/think/process/Builder.php	/^        $this->timeout = $timeout;$/;"	v
timeout	thinkphp/library/think/process/Builder.php	/^        $timeout = (float)$timeout;$/;"	v
timeout	thinkphp/library/think/process/Builder.php	/^    private $timeout        = 60;$/;"	v
timeoutType	thinkphp/library/think/process/exception/Timeout.php	/^        $this->timeoutType = $timeoutType;$/;"	v
timeoutType	thinkphp/library/think/process/exception/Timeout.php	/^    private $timeoutType;$/;"	v
title	application/admin/controller/Article.php	/^        $title = "文章列表";$/;"	v
title	application/admin/controller/Article.php	/^        $title = "文章管理后台";$/;"	v
title	thinkphp/library/think/Console.php	/^            $title = sprintf('  [%s]  ', get_class($e));$/;"	v
title	thinkphp/library/think/Validate.php	/^                $title = $key;$/;"	v
tmpExe	thinkphp/library/think/console/helper/Question.php	/^                $tmpExe = sys_get_temp_dir() . '\/hiddeninput.exe';$/;"	v
toArray	thinkphp/library/think/Model.php	/^    public function toArray()$/;"	f
toJson	thinkphp/library/think/Model.php	/^    public function toJson($options = JSON_UNESCAPED_UNICODE)$/;"	f
token	thinkphp/library/think/Validate.php	/^    protected function token($value, $rule, $data)$/;"	f
token	thinkphp/library/think/console/Input.php	/^            $token = array_shift($tokens);$/;"	v
tokens	thinkphp/library/think/console/Input.php	/^        $this->tokens = $argv;$/;"	v
tokens	thinkphp/library/think/console/Input.php	/^        $this->tokens = $tokens;$/;"	v
tokens	thinkphp/library/think/console/Input.php	/^        $tokens = $this->tokens;$/;"	v
tokens	thinkphp/library/think/console/Input.php	/^        $tokens = array_map(function ($token) {$/;"	v
tokens	thinkphp/library/think/console/Input.php	/^    private $tokens;$/;"	v
totalBytes	thinkphp/library/think/cache/driver/Secache.php	/^        $totalBytes   = $this->max_size;$/;"	v
totalBytes	thinkphp/library/think/cache/driver/Secache.php	/^        $totalBytes = $curBytes = 0;$/;"	v
totalWidth	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^            $totalWidth = max($totalWidth, $nameLength);$/;"	v
totalWidth	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^            $totalWidth = max($totalWidth, strlen($argument->getName()));$/;"	v
totalWidth	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^        $totalWidth   = isset($options['total_width']) ? $options['total_width'] : strlen($argument->getName());$/;"	v
totalWidth	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^        $totalWidth = $this->calculateTotalWidthForOptions($definition->getOptions());$/;"	v
totalWidth	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^        $totalWidth = 0;$/;"	v
totalWidth	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^        $totalWidth = isset($options['total_width']) ? $options['total_width'] : $this->calculateTotalWidthForOptions([$option]);$/;"	v
tpl	thinkphp/library/think/template/TagLib.php	/^        $this->tpl = $template;$/;"	v
tpl	thinkphp/library/think/template/TagLib.php	/^    protected $tpl;$/;"	v
trace	thinkphp/helper.php	/^function trace($log = '[think]', $level = 'log')$/;"	f
trace	thinkphp/library/think/Console.php	/^                $trace = $e->getTrace();$/;"	v
trace	thinkphp/library/think/log/driver/Trace.php	/^        $trace = [];$/;"	v
trailingEOL	thinkphp/library/think/console/helper/Debug.php	/^        $trailingEOL = isset($this->started[$id]['out']) || isset($this->started[$id]['err']) ? "\\n" : '';$/;"	v
transLabel	thinkphp/library/think/db/Connection.php	/^            $this->transLabel = $label;$/;"	v
transLabel	thinkphp/library/think/db/Connection.php	/^    protected $transLabel = '';$/;"	v
transPDO	thinkphp/library/think/db/Connection.php	/^                    $this->transPDO = null;$/;"	v
transPDO	thinkphp/library/think/db/Connection.php	/^                $this->transPDO = $this->linkID;$/;"	v
transPDO	thinkphp/library/think/db/Connection.php	/^    protected $transPDO;$/;"	v
transTimes	thinkphp/library/think/db/Connection.php	/^                $this->transTimes = 0;$/;"	v
transTimes	thinkphp/library/think/db/Connection.php	/^    protected $transTimes = 0;$/;"	v
transaction	thinkphp/library/think/db/Connection.php	/^    public function transaction($callback)$/;"	f
transform	thinkphp/library/think/Response.php	/^    protected static $transform = null;$/;"	v
transform	thinkphp/library/think/Response.php	/^    public static function transform($callback)$/;"	f
trigger	thinkphp/library/think/Model.php	/^    protected function trigger($event, &$params)$/;"	f
trigger	thinkphp/library/think/db/Connection.php	/^    protected function trigger($sql, $runtime, $explain = [])$/;"	f
triggerError	thinkphp/library/think/cache/driver/Secache.php	/^    public function triggerError($errstr, $errno)$/;"	f
trueAnswerRegex	thinkphp/library/think/console/helper/question/Confirmation.php	/^        $this->trueAnswerRegex = $trueAnswerRegex;$/;"	v
trueAnswerRegex	thinkphp/library/think/console/helper/question/Confirmation.php	/^    private $trueAnswerRegex;$/;"	v
tty	thinkphp/library/think/Process.php	/^        $this->tty = (bool)$tty;$/;"	v
tty	thinkphp/library/think/Process.php	/^    private $tty;$/;"	v
ttyMode	thinkphp/library/think/process/pipes/Unix.php	/^        $this->ttyMode       = (bool)$ttyMode;$/;"	v
ttyMode	thinkphp/library/think/process/pipes/Unix.php	/^    private $ttyMode;$/;"	v
type	thinkphp/library/think/App.php	/^        $type = key($vars) === 0 ? 1 : 0;$/;"	v
type	thinkphp/library/think/Cache.php	/^            $type  = !empty($options['type']) ? $options['type'] : 'File';$/;"	v
type	thinkphp/library/think/Config.php	/^            $type = pathinfo($config, PATHINFO_EXTENSION);$/;"	v
type	thinkphp/library/think/Console.php	/^                    $type     = isset($trace[$i]['type']) ? $trace[$i]['type'] : '';$/;"	v
type	thinkphp/library/think/Error.php	/^        $type = Config::get('default_return_type');$/;"	v
type	thinkphp/library/think/Log.php	/^        $type  = isset($config['type']) ? $config['type'] : 'Email';$/;"	v
type	thinkphp/library/think/Log.php	/^        $type  = isset($config['type']) ? $config['type'] : 'File';$/;"	v
type	thinkphp/library/think/Log.php	/^    protected static $type = ['log', 'error', 'info', 'sql', 'notice', 'alert'];$/;"	v
type	thinkphp/library/think/Model.php	/^                $type = $this->type[$name];$/;"	v
type	thinkphp/library/think/Model.php	/^            $type = $this->type[$name];$/;"	v
type	thinkphp/library/think/Model.php	/^    protected $type = [];$/;"	v
type	thinkphp/library/think/Response.php	/^        $type = IS_AJAX ? Config::get('default_ajax_return') : Config::get('default_return_type');$/;"	v
type	thinkphp/library/think/Response.php	/^        $type = strtolower($type ?: self::$type);$/;"	v
type	thinkphp/library/think/Response.php	/^    protected static $type = '';$/;"	v
type	thinkphp/library/think/Response.php	/^    public static function type($type = null)$/;"	f
type	thinkphp/library/think/Template.php	/^        $type          = $this->config['compile_type'] ? $this->config['compile_type'] : 'File';$/;"	v
type	thinkphp/library/think/Url.php	/^        $type = Route::bind('type');$/;"	v
type	thinkphp/library/think/Validate.php	/^                            $type = $this->alias[$type];$/;"	v
type	thinkphp/library/think/Validate.php	/^                        $type = 'is';$/;"	v
type	thinkphp/library/think/Validate.php	/^    protected static $type = [];$/;"	v
type	thinkphp/library/think/View.php	/^            $type    = $options;$/;"	v
type	thinkphp/library/think/View.php	/^            $type = !empty($options['type']) ? $options['type'] : 'Think';$/;"	v
type	thinkphp/library/think/controller/Rest.php	/^        $type = [$/;"	v
type	thinkphp/library/think/db/Builder.php	/^        $type = $union['type'];$/;"	v
type	thinkphp/library/think/model/Relation.php	/^        $this->type       = self::BELONGS_TO;$/;"	v
type	thinkphp/library/think/model/Relation.php	/^        $this->type       = self::BELONGS_TO_MANY;$/;"	v
type	thinkphp/library/think/model/Relation.php	/^        $this->type       = self::HAS_MANY;$/;"	v
type	thinkphp/library/think/model/Relation.php	/^        $this->type       = self::HAS_ONE;$/;"	v
type	thinkphp/library/think/model/Relation.php	/^    protected $type;$/;"	v
type	thinkphp/library/think/process/pipes/Unix.php	/^            $type = (false !== $found = array_search($pipe, $this->pipes)) ? $found : 'input';$/;"	v
type	thinkphp/library/think/template/TagLib.php	/^                            $type          = !empty($array[1]) ? $array[1] : 'type';$/;"	v
type	thinkphp/library/think/template/TagLib.php	/^                    $type          = !empty($tag['alias'][1]) ? $tag['alias'][1] : 'type';$/;"	v
type	thinkphp/library/think/template/taglib/Cx.php	/^                    $type = $reset = strtolower(substr(strrchr($val, '.'), 1));$/;"	v
type	thinkphp/library/think/template/taglib/Cx.php	/^                $type = 'eq';$/;"	v
type	thinkphp/library/think/template/taglib/Cx.php	/^                $type = 'neq';$/;"	v
type	thinkphp/library/think/template/taglib/Cx.php	/^        $type     = $this->parseCondition(' ' . $type . ' ');$/;"	v
type	thinkphp/library/think/template/taglib/Cx.php	/^        $type     = isset($tag['type']) ? strtolower($tag['type']) : ($isFile ? null : 'js');$/;"	v
type	thinkphp/library/think/template/taglib/Cx.php	/^        $type  = isset($tag['type']) ? $tag['type'] : 'eq'; \/\/ 比较类型$/;"	v
type	thinkphp/library/think/template/taglib/Cx.php	/^        $type  = isset($tag['type']) ? $tag['type'] : 'in'; \/\/ 比较类型$/;"	v
typeCast	thinkphp/library/think/Input.php	/^    private static function typeCast(&$data, $type)$/;"	f
typeMsg	thinkphp/library/think/Validate.php	/^    protected static $typeMsg = [$/;"	v
unblock	thinkphp/library/think/process/pipes/Pipes.php	/^    protected function unblock()$/;"	f
union	thinkphp/library/think/db/Query.php	/^    public function union($union, $all = false)$/;"	f
unique	thinkphp/library/think/Validate.php	/^    protected function unique($value, $rule, $data, $field)$/;"	f
unlink	thinkphp/library/think/cache/driver/File.php	/^    private function unlink($path)$/;"	f
unlock	thinkphp/library/think/cache/driver/Secache.php	/^    public function unlock()$/;"	f
unsetCodes	thinkphp/library/think/console/output/formatter/Style.php	/^        $unsetCodes = [];$/;"	v
unsetOption	thinkphp/library/think/console/output/formatter/Style.php	/^    public function unsetOption($option)$/;"	f
update	application/index/controller/News.php	/^    public function update() {$/;"	f
update	thinkphp/library/think/Model.php	/^    protected $update = [];$/;"	v
update	thinkphp/library/think/Model.php	/^    public static function update($data = [], $where = [])$/;"	f
update	thinkphp/library/think/db/Builder.php	/^    public function update($data, $options)$/;"	f
update	thinkphp/library/think/db/Query.php	/^    public function update(array $data)$/;"	f
updateSql	thinkphp/library/think/db/Builder.php	/^    protected $updateSql    = 'UPDATE %TABLE% SET %SET% %JOIN% %WHERE% %ORDER%%LIMIT% %LOCK%%COMMENT%';$/;"	v
updateStatus	thinkphp/library/think/Process.php	/^    protected function updateStatus($blocking)$/;"	f
uploader	thinkphp/library/think/UploadFile.php	/^            $this->uploader = new $class($config);$/;"	v
uploader	thinkphp/library/think/UploadFile.php	/^    private $uploader;$/;"	v
uri	thinkphp/library/think/log/driver/File.php	/^        $uri    = isset($_SERVER['REQUEST_URI']) ? $_SERVER['REQUEST_URI'] : '';$/;"	v
url	thinkphp/helper.php	/^function url($url = '', $vars = '', $suffix = true, $domain = false)$/;"	f
url	thinkphp/library/think/Response.php	/^        $url = preg_match('\/^(https?:|\\\/)\/', $url) ? $url : Url::build($url, $params);$/;"	v
url	thinkphp/library/think/Route.php	/^                    $url = self::$bind['module'] . '\/' . $url;$/;"	v
url	thinkphp/library/think/Route.php	/^                $url = str_replace(':' . $key, $val, $url);$/;"	v
url	thinkphp/library/think/Route.php	/^            $url  = str_replace($depr, '\/', $url);$/;"	v
url	thinkphp/library/think/Route.php	/^            $url = '\/';$/;"	v
url	thinkphp/library/think/Route.php	/^            $url = self::$bind['module'] . '\/' . $url;$/;"	v
url	thinkphp/library/think/Route.php	/^            $url = str_replace($depr, '\/', $url);$/;"	v
url	thinkphp/library/think/Route.php	/^        $url = is_array($route) ? $route[0] : $route;$/;"	v
url	thinkphp/library/think/Url.php	/^                            $url    = ltrim($url, $rule);$/;"	v
url	thinkphp/library/think/Url.php	/^                        $url = str_replace(['[:' . $key . ']', '<' . $key . '?>', ':' . $key . '', '<' . $key . '>'], $vars[$key], $url);$/;"	v
url	thinkphp/library/think/Url.php	/^                        $url = str_replace(['[:' . $key . ']', '<' . $key . '?>'], '', $url);$/;"	v
url	thinkphp/library/think/Url.php	/^                $url        = $module . $controller . '\/' . $action;$/;"	v
url	thinkphp/library/think/Url.php	/^                $url = $module . CONTROLLER_NAME . '\/' . ACTION_NAME;$/;"	v
url	thinkphp/library/think/Url.php	/^                $url = str_replace('$', '[--think--]', $url);$/;"	v
url	thinkphp/library/think/Url.php	/^                $url = substr($url, strlen($bind) + 1);$/;"	v
url	thinkphp/library/think/Url.php	/^            $url = ltrim(str_replace('\\\\', '\/', $url), '\/');$/;"	v
url	thinkphp/library/think/Url.php	/^            $url = self::parseUrl($url);$/;"	v
url	thinkphp/library/think/Url.php	/^            $url = str_replace('[--think--]', '', $match);$/;"	v
url	thinkphp/library/think/Url.php	/^            $url = substr($url, 1);$/;"	v
url	thinkphp/library/think/Url.php	/^        $url  = !empty($info['path']) ? $info['path'] : '';$/;"	v
url	thinkphp/library/think/Url.php	/^        $url  = str_replace('\/', $depr, $url);$/;"	v
url	thinkphp/library/think/Url.php	/^        $url = $domain . Config::get('base_url') . '\/' . ltrim($url, '\/');$/;"	v
url	thinkphp/library/think/db/connector/Oracle.php	/^        $url             = "select a.column_name,data_type,DECODE (nullable, 'Y', 0, 1) notnull,data_default, DECODE (A .column_name,b.column_name,1,0) pk from all_tab_columns a,(select column_name from all_constraints c, all_cons_columns col where c.constraint_name = col.constraint_name and c.constraint_type = 'P' and c.table_name = '" . strtoupper($tableName) . "' ) b where table_name = '" . strtoupper($tableName) . "' and a.column_name = b.column_name (+)";$/;"	v
url	thinkphp/library/think/log/driver/Socket.php	/^        $url = 'http:\/\/' . $host . ':' . $this->port . $address;$/;"	v
url	thinkphp/library/think/template/taglib/Cx.php	/^        $url    = isset($tag['link']) ? $tag['link'] : '';$/;"	v
url1	thinkphp/library/think/Route.php	/^                        $url1 = substr($url, strlen($rule) + 1);$/;"	v
urlDomainRoot	thinkphp/library/think/Url.php	/^                    $urlDomainRoot = Config::get('url_domain_root');$/;"	v
usage	thinkphp/library/think/console/command/Command.php	/^            $usage = sprintf('%s %s', $this->name, $usage);$/;"	v
usages	thinkphp/library/think/console/command/Command.php	/^    private $usages                          = [];$/;"	v
use	thinkphp/library/think/template/taglib/Cx.php	/^        $use  = ['&$' . $name];$/;"	v
useFileHandles	thinkphp/library/think/Process.php	/^        $this->useFileHandles               = '\\\\' === DS;$/;"	v
useFileHandles	thinkphp/library/think/Process.php	/^    private $useFileHandles = false;$/;"	v
using	thinkphp/library/think/db/Query.php	/^    public function using($using)$/;"	f
utf8String	thinkphp/library/think/Console.php	/^        $utf8String = mb_convert_encoding($string, 'utf8', $encoding);$/;"	v
v	thinkphp/library/think/Controller.php	/^            $v = Loader::validate($validate);$/;"	v
v	thinkphp/library/think/Controller.php	/^            $v = Loader::validate(Config::get('default_validate'));$/;"	v
v	thinkphp/library/think/Lang.php	/^                    $v = "{:{$v}}";$/;"	v
v	thinkphp/library/think/Template.php	/^                            $v = $this->get(substr($v, 1));$/;"	v
val	thinkphp/library/think/Build.php	/^                    $val       = trim($val);$/;"	v
val	thinkphp/library/think/Cookie.php	/^            $val = 'decode' == $type ? urldecode($val) : urlencode($val);$/;"	v
val	thinkphp/library/think/Route.php	/^                $val = str_replace($matches[0], $replace, $val);$/;"	v
val	thinkphp/library/think/Route.php	/^                $val = substr($val, 1, -1);$/;"	v
val	thinkphp/library/think/Url.php	/^                $val      = substr($val, 1, -1);$/;"	v
val	thinkphp/library/think/Validate.php	/^        $val = $this->getDataValue($data, $rule);$/;"	v
val	thinkphp/library/think/db/Builder.php	/^            $val = ['=', $val];$/;"	v
val	thinkphp/library/think/db/Connection.php	/^                $val = $this->quote(is_array($val) ? $val[0] : $val);$/;"	v
val	thinkphp/library/think/db/Query.php	/^                    $val = $prefix . '.' . $val . ($alias ? ' AS ' . $alias . $val : '');$/;"	v
val	thinkphp/library/think/db/connector/Mysql.php	/^                $val                 = array_change_key_case($val);$/;"	v
val	thinkphp/library/think/db/connector/Oracle.php	/^                $val                       = array_change_key_case($val);$/;"	v
val	thinkphp/library/think/db/connector/Pgsql.php	/^                $val                 = array_change_key_case($val);$/;"	v
val	thinkphp/library/think/db/connector/Sqlite.php	/^                $val                = array_change_key_case($val);$/;"	v
val	thinkphp/library/think/db/connector/Sqlsrv.php	/^                $val                       = array_change_key_case($val);$/;"	v
valid	thinkphp/library/think/template/TagLib.php	/^    protected $valid = false;$/;"	v
validate	thinkphp/library/think/Controller.php	/^    public function validate($data, $validate, $message = [], $callback = null)$/;"	f
validate	thinkphp/library/think/Loader.php	/^                $validate = new $class;$/;"	v
validate	thinkphp/library/think/Loader.php	/^            $validate = new $class;$/;"	v
validate	thinkphp/library/think/Loader.php	/^    public static function validate($name = '', $layer = '')$/;"	f
validate	thinkphp/library/think/Model.php	/^                $validate = Loader::validate($name);$/;"	v
validate	thinkphp/library/think/Model.php	/^                $validate = Loader::validate(Config::get('default_validate'));$/;"	v
validate	thinkphp/library/think/Model.php	/^            $this->validate = [$/;"	v
validate	thinkphp/library/think/Model.php	/^            $this->validate = null;$/;"	v
validate	thinkphp/library/think/Model.php	/^            $this->validate = true === $rule ? $this->name : $rule;$/;"	v
validate	thinkphp/library/think/Model.php	/^    protected $validate;$/;"	v
validate	thinkphp/library/think/Model.php	/^    public function validate($rule = true, $msg = [])$/;"	f
validate	thinkphp/library/think/console/Input.php	/^    public function validate()$/;"	f
validateAttempts	thinkphp/library/think/console/helper/Question.php	/^    private function validateAttempts($interviewer, Output $output, OutputQuestion $question)$/;"	f
validateData	thinkphp/library/think/Model.php	/^    public function validateData()$/;"	f
validateInput	thinkphp/library/think/process/Utils.php	/^    public static function validateInput($caller, $input)$/;"	f
validateName	thinkphp/library/think/console/command/Command.php	/^    private function validateName($name)$/;"	f
validateTimeout	thinkphp/library/think/Process.php	/^    private function validateTimeout($timeout)$/;"	f
validator	thinkphp/library/think/console/helper/question/Question.php	/^        $this->validator = $validator;$/;"	v
validator	thinkphp/library/think/console/helper/question/Question.php	/^    private $validator;$/;"	v
value	thinkphp/library/think/Cookie.php	/^                $value = json_decode($value, true);$/;"	v
value	thinkphp/library/think/Cookie.php	/^                $value = substr($value, 6);$/;"	v
value	thinkphp/library/think/Cookie.php	/^            $value = $_COOKIE[$name];$/;"	v
value	thinkphp/library/think/Cookie.php	/^            $value = 'think:' . json_encode($value);$/;"	v
value	thinkphp/library/think/Input.php	/^                        $value = $default;$/;"	v
value	thinkphp/library/think/Input.php	/^                    $value = filter_var($value, is_int($filter) ? $filter : filter_id($filter));$/;"	v
value	thinkphp/library/think/Input.php	/^                $value = call_user_func($filter, $value);$/;"	v
value	thinkphp/library/think/Lang.php	/^                $value = call_user_func_array('sprintf', $vars);$/;"	v
value	thinkphp/library/think/Lang.php	/^                $value = str_replace($replace, $vars, $value);$/;"	v
value	thinkphp/library/think/Lang.php	/^        $value = isset(self::$lang[$range][$key]) ? self::$lang[$range][$key] : $name;$/;"	v
value	thinkphp/library/think/Model.php	/^                            $value = (float) $value;$/;"	v
value	thinkphp/library/think/Model.php	/^                            $value = (float) number_format($value, $param);$/;"	v
value	thinkphp/library/think/Model.php	/^                            $value = json_encode($value, JSON_FORCE_OBJECT);$/;"	v
value	thinkphp/library/think/Model.php	/^                            $value = json_encode($value, JSON_UNESCAPED_UNICODE);$/;"	v
value	thinkphp/library/think/Model.php	/^                            $value = strtotime($value);$/;"	v
value	thinkphp/library/think/Model.php	/^                        $value = (bool) $value;$/;"	v
value	thinkphp/library/think/Model.php	/^                        $value = (float) $value;$/;"	v
value	thinkphp/library/think/Model.php	/^                        $value = (float) number_format($value, $param);$/;"	v
value	thinkphp/library/think/Model.php	/^                        $value = (int) $value;$/;"	v
value	thinkphp/library/think/Model.php	/^                    $value  = date($format, $value);$/;"	v
value	thinkphp/library/think/Model.php	/^                    $value = (bool) $value;$/;"	v
value	thinkphp/library/think/Model.php	/^                    $value = (int) $value;$/;"	v
value	thinkphp/library/think/Model.php	/^                    $value = json_decode($value);$/;"	v
value	thinkphp/library/think/Model.php	/^                    $value = json_decode($value, true);$/;"	v
value	thinkphp/library/think/Model.php	/^                $value = $this->$method($value, $this->data);$/;"	v
value	thinkphp/library/think/Model.php	/^                $value = null;$/;"	v
value	thinkphp/library/think/Model.php	/^            $value = $this->relation->getRelation($name);$/;"	v
value	thinkphp/library/think/Model.php	/^            $value = NOW_TIME;$/;"	v
value	thinkphp/library/think/Model.php	/^        $value = isset($this->data[$name]) ? $this->data[$name] : null;$/;"	v
value	thinkphp/library/think/Route.php	/^                $value = [];$/;"	v
value	thinkphp/library/think/Session.php	/^                $value               = isset($_SESSION[$name1][$name2]) ? $_SESSION[$name1][$name2] : null;$/;"	v
value	thinkphp/library/think/Session.php	/^                $value               = isset($_SESSION[$prefix][$name1][$name2]) ? $_SESSION[$prefix][$name1][$name2] : null;$/;"	v
value	thinkphp/library/think/Session.php	/^                $value = isset($_SESSION[$name]) ? $_SESSION[$name] : null;$/;"	v
value	thinkphp/library/think/Session.php	/^                $value = isset($_SESSION[$prefix][$name]) ? $_SESSION[$prefix][$name] : null;$/;"	v
value	thinkphp/library/think/Session.php	/^            $value = $prefix ? (!empty($_SESSION[$prefix]) ? $_SESSION[$prefix] : []) : $_SESSION;$/;"	v
value	thinkphp/library/think/Validate.php	/^            $value               = isset($data[$name1][$name2]) ? $data[$name1][$name2] : null;$/;"	v
value	thinkphp/library/think/Validate.php	/^            $value = $this->getDataValue($data, $key);$/;"	v
value	thinkphp/library/think/Validate.php	/^            $value = isset($data[$key]) ? $data[$key] : null;$/;"	v
value	thinkphp/library/think/cache/driver/Redis.php	/^        $value  =  (is_object($value) || is_array($value)) ? json_encode($value) : $value;$/;"	v
value	thinkphp/library/think/cache/driver/Redis.php	/^        $value = $this->handler->get($this->options['prefix'] . $name);$/;"	v
value	thinkphp/library/think/cache/driver/Sae.php	/^            $value = [];$/;"	v
value	thinkphp/library/think/cache/driver/Sae.php	/^        $value      = $kv->get($queue_name);$/;"	v
value	thinkphp/library/think/cache/driver/Sqlite.php	/^            $value = gzcompress($value, 3);$/;"	v
value	thinkphp/library/think/cache/driver/Sqlite.php	/^        $value = sqlite_escape_string(serialize($value));$/;"	v
value	thinkphp/library/think/console/Input.php	/^                $value = $next;$/;"	v
value	thinkphp/library/think/console/Input.php	/^                $value = $option->isValueOptional() ? $option->getDefault() : true;$/;"	v
value	thinkphp/library/think/console/Input.php	/^                $value = '';$/;"	v
value	thinkphp/library/think/console/Input.php	/^            $value = null;$/;"	v
value	thinkphp/library/think/console/helper/Question.php	/^            $value   = rtrim(shell_exec($command));$/;"	v
value	thinkphp/library/think/console/helper/Question.php	/^            $value = fgets($inputStream, 4096);$/;"	v
value	thinkphp/library/think/console/helper/Question.php	/^            $value = rtrim(shell_exec($exe));$/;"	v
value	thinkphp/library/think/console/helper/Question.php	/^            $value = trim($value);$/;"	v
value	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^                $value = '[' . $value . ']';$/;"	v
value	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^            $value = '=' . strtoupper($option->getName());$/;"	v
value	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^        $value = '';$/;"	v
value	thinkphp/library/think/console/input/Definition.php	/^                    $value = sprintf(' %s%s%s', $option->isValueOptional() ? '[' : '', strtoupper($option->getName()), $option->isValueOptional() ? ']' : '');$/;"	v
value	thinkphp/library/think/console/input/Definition.php	/^                $value = '';$/;"	v
value	thinkphp/library/think/db/Builder.php	/^                    $value = ':' . $field;$/;"	v
value	thinkphp/library/think/db/Builder.php	/^                $value = is_array($value) ? $value : explode(',', $value);$/;"	v
value	thinkphp/library/think/db/Builder.php	/^            $value    = array_values($data);$/;"	v
value	thinkphp/library/think/db/Builder.php	/^            $value = $value ? '1' : '0';$/;"	v
value	thinkphp/library/think/db/Builder.php	/^            $value = $value[1];$/;"	v
value	thinkphp/library/think/db/Builder.php	/^            $value = 'null';$/;"	v
value	thinkphp/library/think/db/Builder.php	/^            $value = array_map([$this, 'parseValue'], $value);$/;"	v
value	thinkphp/library/think/db/Builder.php	/^            $value = strpos($value, ':') === 0 && $this->query->isBind(substr($value, 1)) ? $value : $this->connection->quote($value);$/;"	v
value	thinkphp/library/think/db/Query.php	/^    public function value($field)$/;"	f
value	thinkphp/library/think/template/taglib/Cx.php	/^                $value = $this->autoBuildVar($value);$/;"	v
value	thinkphp/library/think/template/taglib/Cx.php	/^            $value  = '';$/;"	v
value	thinkphp/library/think/template/taglib/Cx.php	/^            $value = $this->autoBuildVar($tag['value']);$/;"	v
value	thinkphp/library/think/template/taglib/Cx.php	/^            $value = $this->autoBuildVar($value);$/;"	v
value	thinkphp/library/think/template/taglib/Cx.php	/^            $value = '"' . $value . '"';$/;"	v
value	thinkphp/library/think/template/taglib/Cx.php	/^            $value = '\\'' . $tag['value'] . '\\'';$/;"	v
value	thinkphp/library/think/template/taglib/Cx.php	/^            $value = '\\'' . $value . '\\'';$/;"	v
value	thinkphp/library/think/template/taglib/Cx.php	/^            $value = 'case "' . $value . '":';$/;"	v
value	thinkphp/library/think/template/taglib/Cx.php	/^            $value = 'case ' . $value . ':';$/;"	v
value	thinkphp/library/think/template/taglib/Cx.php	/^            $value = trim($value);$/;"	v
value	thinkphp/library/think/template/taglib/Cx.php	/^        $value = !empty($tag['expression']) ? $tag['expression'] : $tag['value'];$/;"	v
value	thinkphp/library/think/template/taglib/Cx.php	/^        $value = $tag['value'];$/;"	v
valueLength	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^                $valueLength = 1 + strlen($option->getName()); \/\/ = + value$/;"	v
values	thinkphp/library/think/console/Input.php	/^        $values = (array)$values;$/;"	v
values	thinkphp/library/think/console/helper/question/Question.php	/^            $values = array_merge(array_keys($values), array_values($values));$/;"	v
values	thinkphp/library/think/console/input/Definition.php	/^        $values = [];$/;"	v
values	thinkphp/library/think/db/Builder.php	/^        $values = array_values($data);$/;"	v
values	thinkphp/library/think/template/taglib/Cx.php	/^            $values = explode('|', $value);$/;"	v
var	thinkphp/library/think/Route.php	/^                    $var   = array_merge($var, array_combine($value, $match));$/;"	v
var	thinkphp/library/think/Route.php	/^                $var           = substr($item, 1);$/;"	v
var	thinkphp/library/think/Route.php	/^            $var    = array_merge($matches, $result['var']);$/;"	v
var	thinkphp/library/think/Route.php	/^        $var = [];$/;"	v
var	thinkphp/library/think/Url.php	/^                    $var             = self::parseVar($rule . '\/' . $key);$/;"	v
var	thinkphp/library/think/Url.php	/^                $var             = self::parseVar($rule);$/;"	v
var	thinkphp/library/think/Url.php	/^        $var = [];$/;"	v
var	thinkphp/library/think/template/taglib/Cx.php	/^                $var = '$_' . uniqid();$/;"	v
var	thinkphp/library/think/template/taglib/Cx.php	/^            $var  = '$_' . uniqid();$/;"	v
var	thinkphp/library/think/template/taglib/Cx.php	/^            $var = &$name;$/;"	v
varArray	thinkphp/library/think/Template.php	/^            $varArray = explode('|', $varStr);$/;"	v
varStr	thinkphp/library/think/Template.php	/^                $varStr = substr_replace($varStr, $parseStr, $match[1], strlen($match[0]));$/;"	v
varStr	thinkphp/library/think/Template.php	/^            $varStr                  = $name;$/;"	v
varStr	thinkphp/library/think/Template.php	/^            $varStr = $_varFunctionList[$_key];$/;"	v
varStr	thinkphp/library/think/Template.php	/^        $varStr = trim($varStr);$/;"	v
vars	thinkphp/library/think/App.php	/^                    $vars = $_GET;$/;"	v
vars	thinkphp/library/think/App.php	/^                    $vars = array_merge($_GET, $_POST);$/;"	v
vars	thinkphp/library/think/App.php	/^                    $vars = array_merge($_GET, $_PUT);$/;"	v
vars	thinkphp/library/think/Loader.php	/^                    $vars = [$vars];$/;"	v
vars	thinkphp/library/think/Template.php	/^                        $vars  = explode('.', $match[0]);$/;"	v
vars	thinkphp/library/think/Url.php	/^                $vars = array_diff($array, $param);$/;"	v
vars	thinkphp/library/think/Url.php	/^                $vars = urldecode(http_build_query($vars));$/;"	v
vars	thinkphp/library/think/Url.php	/^            $vars = array_merge($params, $vars);$/;"	v
vars	thinkphp/library/think/View.php	/^        $vars = array_merge($this->data, $vars);$/;"	v
vars	thinkphp/library/think/template/taglib/Cx.php	/^        $vars   = isset($tag['vars']) ? $tag['vars'] : '';$/;"	v
vars	thinkphp/library/think/template/taglib/Cx.php	/^        $vars = !empty($tag['vars']) ? $tag['vars'] : '';$/;"	v
vendor	thinkphp/helper.php	/^function vendor($class, $ext = EXT)$/;"	f
ver	thinkphp/library/think/cache/driver/Secache.php	/^    public $ver           = '$Rev: 3 $';$/;"	v
verbosity	thinkphp/library/think/console/output/Stream.php	/^        $this->verbosity = (int)$level;$/;"	v
verbosity	thinkphp/library/think/console/output/Stream.php	/^    private $verbosity = self::VERBOSITY_NORMAL;$/;"	v
version	thinkphp/library/think/Console.php	/^        $this->version = $version;$/;"	v
version	thinkphp/library/think/Console.php	/^    private $version;$/;"	v
version	thinkphp/library/think/template/taglib/Cx.php	/^                    $version = '';$/;"	v
via	thinkphp/library/think/db/Query.php	/^    public function via($via = '')$/;"	f
view	application/admin/controller/Article.php	/^        $view = new View();$/;"	v
view	application/index/controller/News.php	/^        $view = new \\think\\View();$/;"	v
view	thinkphp/helper.php	/^function view($template = '', $vars = [])$/;"	f
view	thinkphp/library/think/Controller.php	/^        $this->view = View::instance(Config::get('template'), Config::get('view_replace_str'));$/;"	v
view	thinkphp/library/think/Controller.php	/^    protected $view = null;$/;"	v
w	thinkphp/library/think/process/pipes/Unix.php	/^        $w = isset($this->pipes[0]) ? [$this->pipes[0]] : null;$/;"	v
w	thinkphp/library/think/process/pipes/Windows.php	/^        $w = isset($this->pipes[0]) ? [$this->pipes[0]] : null;$/;"	v
wait	thinkphp/library/think/Process.php	/^    public function wait($callback = null)$/;"	f
wantHelps	thinkphp/library/think/Console.php	/^                $this->wantHelps = true;$/;"	v
wantHelps	thinkphp/library/think/Console.php	/^            $this->wantHelps = false;$/;"	v
wantHelps	thinkphp/library/think/Console.php	/^    private $wantHelps = false;$/;"	v
web	application/index/controller/Web.php	/^class web$/;"	c
where	thinkphp/library/think/db/Builder.php	/^            $where = [];$/;"	v
where	thinkphp/library/think/db/Query.php	/^                $where = $field;$/;"	v
where	thinkphp/library/think/db/Query.php	/^                $where = '';$/;"	v
where	thinkphp/library/think/db/Query.php	/^    public function where($field, $op = null, $condition = null)$/;"	f
whereExist	thinkphp/library/think/db/Query.php	/^    public function whereExist($where)$/;"	f
whereNotExist	thinkphp/library/think/db/Query.php	/^    public function whereNotExist($where)$/;"	f
whereOr	thinkphp/library/think/db/Query.php	/^    public function whereOr($field, $op = null, $condition = null)$/;"	f
whereOrExist	thinkphp/library/think/db/Query.php	/^    public function whereOrExist($where)$/;"	f
whereOrNotExist	thinkphp/library/think/db/Query.php	/^    public function whereOrNotExist($where)$/;"	f
whereStr	thinkphp/library/think/db/Builder.php	/^        $whereStr = $this->buildWhere($where, $table);$/;"	v
whereStr	thinkphp/library/think/db/Builder.php	/^        $whereStr = '';$/;"	v
widget	thinkphp/helper.php	/^function widget($name, $data = [])$/;"	f
width	thinkphp/library/think/Console.php	/^                $width = 1 << 31;$/;"	v
width	thinkphp/library/think/Console.php	/^            $width = $this->getTerminalWidth() ? $this->getTerminalWidth() - 1 : PHP_INT_MAX;$/;"	v
width	thinkphp/library/think/console/helper/Question.php	/^            $width = max(array_map('strlen', array_keys($question->getChoices())));$/;"	v
width	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^            $width = $this->getColumnWidth($description->getCommands());$/;"	v
width	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^            $width = strlen($command->getName()) > $width ? strlen($command->getName()) : $width;$/;"	v
width	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^        $width = 0;$/;"	v
with	thinkphp/library/think/db/Query.php	/^            $with = explode(',', $with);$/;"	v
with	thinkphp/library/think/db/Query.php	/^    public function with($with)$/;"	f
workat	thinkphp/library/think/cache/driver/Secache.php	/^    public function workat($file)$/;"	f
wrapCallback	thinkphp/library/think/console/helper/Process.php	/^    public function wrapCallback(Output $output, ThinkProcess $process, $callback = null)$/;"	f
write	thinkphp/library/think/Log.php	/^    public static function write($msg, $type = 'log')$/;"	f
write	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^    protected function write($content, $decorated = false)$/;"	f
write	thinkphp/library/think/console/output/Nothing.php	/^    public function write($messages, $newline = false, $options = self::OUTPUT_NORMAL)$/;"	f
write	thinkphp/library/think/console/output/Stream.php	/^    public function write($messages, $newline = false, $type = self::OUTPUT_NORMAL)$/;"	f
write	thinkphp/library/think/process/pipes/Windows.php	/^    private function write($blocking, $close)$/;"	f
write	thinkphp/library/think/session/driver/Memcache.php	/^    public function write($sessID, $sessData)$/;"	f
write	thinkphp/library/think/session/driver/Memcached.php	/^    public function write($sessID, $sessData)$/;"	f
write	thinkphp/library/think/session/driver/Redis.php	/^    public function write($sessID, $sessData)$/;"	f
write	thinkphp/library/think/template/driver/File.php	/^    public function write($cacheFile, $content)$/;"	f
write	thinkphp/library/think/template/driver/Sae.php	/^    public function write($cacheFile, $content)$/;"	f
writeError	thinkphp/library/think/console/helper/Question.php	/^    protected function writeError(Output $output, \\Exception $error)$/;"	f
writePrompt	thinkphp/library/think/console/helper/Question.php	/^    protected function writePrompt(Output $output, OutputQuestion $question)$/;"	f
writeText	thinkphp/library/think/console/helper/descriptor/Descriptor.php	/^    private function writeText($content, array $options = [])$/;"	f
writeTimes	thinkphp/library/think/Cache.php	/^    public static $writeTimes  = 0;$/;"	v
writeln	thinkphp/library/think/console/output/Nothing.php	/^    public function writeln($messages, $options = self::OUTPUT_NORMAL)$/;"	f
writeln	thinkphp/library/think/console/output/Stream.php	/^    public function writeln($messages, $type = self::OUTPUT_NORMAL)$/;"	f
written	thinkphp/library/think/process/pipes/Unix.php	/^                $written = fwrite($w[0], $this->inputBuffer, 2 << 18); \/\/ write 512k$/;"	v
written	thinkphp/library/think/process/pipes/Windows.php	/^                $written = fwrite($w[0], $this->inputBuffer, 2 << 18);$/;"	v
xml	thinkphp/library/think/template/TagLib.php	/^    protected $xml  = '';$/;"	v
zone	thinkphp/library/think/db/Builder.php	/^                $zone  = implode(',', $this->parseValue($value));$/;"	v
